/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 20 20:54:33 GMT 2020
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.GPS;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GPS_ESTest extends GPS_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00()  throws Throwable  {
        GPS gPS0 = new GPS();
        GPS gPS1 = new GPS(gPS0);
        gPS1.setY(1139.633764422);
        boolean boolean0 = gPS0.equals(gPS1);
        assertEquals(1139.633764422, gPS1.getY(), 0.01);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test01()  throws Throwable  {
        GPS gPS0 = new GPS(975.963054, 975.963054);
        GPS gPS1 = new GPS();
        boolean boolean0 = gPS0.equals(gPS1);
        assertFalse(boolean0);
        assertEquals(975.963054, gPS0.getY(), 0.01);
        assertEquals(975.963054, gPS0.getX(), 0.01);
        assertEquals(0.0, gPS1.getY(), 0.01);
        assertEquals(0.0, gPS1.getX(), 0.01);
    }

    @Test(timeout = 4000)
    public void test02()  throws Throwable  {
        GPS gPS0 = new GPS(0.0, 0.0);
        boolean boolean0 = gPS0.equals(gPS0);
        assertTrue(boolean0);
        assertEquals(0.0, gPS0.getX(), 0.01);
        assertEquals(0.0, gPS0.getY(), 0.01);
    }

    @Test(timeout = 4000)
    public void test03()  throws Throwable  {
        GPS gPS0 = new GPS(0.0, 0.0);
        gPS0.setX((-1429.08413));
        double double0 = gPS0.calculaDistancia(gPS0);
        assertEquals((-1429.08413), gPS0.getX(), 0.01);
        assertEquals(0.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test04()  throws Throwable  {
        GPS gPS0 = new GPS();
        gPS0.setY(639.7);
        double double0 = gPS0.getY();
        assertEquals(639.7, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test05()  throws Throwable  {
        GPS gPS0 = new GPS(0.0, 0.0);
        gPS0.setY((-1429.08413));
        double double0 = gPS0.getY();
        assertEquals((-1429.08413), double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test06()  throws Throwable  {
        GPS gPS0 = new GPS();
        assertEquals(0.0, gPS0.getX(), 0.01);

        gPS0.setX(1.0);
        double double0 = gPS0.getX();
        assertEquals(1.0, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test07()  throws Throwable  {
        GPS gPS0 = new GPS(0.0, 0.0);
        gPS0.setX((-1429.08413));
        double double0 = gPS0.getX();
        assertEquals((-1429.08413), double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test08()  throws Throwable  {
        GPS gPS0 = new GPS(0.0, 0.0);
        gPS0.setY((-1429.08413));
        gPS0.clone();
        assertEquals((-1429.08413), gPS0.getY(), 0.01);
    }

    @Test(timeout = 4000)
    public void test09()  throws Throwable  {
        GPS gPS0 = new GPS(0.0, 0.0);
        gPS0.setX((-1429.08413));
        gPS0.clone();
        assertEquals((-1429.08413), gPS0.getX(), 0.01);
    }

    @Test(timeout = 4000)
    public void test10()  throws Throwable  {
        GPS gPS0 = new GPS(0.0, 0.0);
        double double0 = gPS0.calculaDistancia(gPS0);
        assertEquals(0.0, gPS0.getY(), 0.01);
        assertEquals(0.0, double0, 0.01);
        assertEquals(0.0, gPS0.getX(), 0.01);
    }

    @Test(timeout = 4000)
    public void test11()  throws Throwable  {
        GPS gPS0 = new GPS();
        GPS gPS1 = new GPS(gPS0);
        gPS0.setY(639.7);
        double double0 = gPS0.calculaDistancia(gPS1);
        assertEquals(639.7, gPS0.getY(), 0.01);
        assertEquals(639.7, double0, 0.01);
    }

    @Test(timeout = 4000)
    public void test12()  throws Throwable  {
        GPS gPS0 = null;
        try {
            gPS0 = new GPS((GPS) null);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("Model.GPS", e);
        }
    }

    @Test(timeout = 4000)
    public void test13()  throws Throwable  {
        GPS gPS0 = new GPS(0.0, 0.0);
        double double0 = gPS0.getY();
        assertEquals(0.0, double0, 0.01);
        assertEquals(0.0, gPS0.getX(), 0.01);
    }

    @Test(timeout = 4000)
    public void test14()  throws Throwable  {
        GPS gPS0 = new GPS(0.0, 0.0);
        double double0 = gPS0.getX();
        assertEquals(0.0, double0, 0.01);
        assertEquals(0.0, gPS0.getY(), 0.01);
    }

    @Test(timeout = 4000)
    public void test15()  throws Throwable  {
        GPS gPS0 = new GPS(1.79663803818416, 1.79663803818416);
        GPS gPS1 = gPS0.clone();
        gPS1.setX((-1430.379844457951));
        gPS1.setY((-1430.379844457951));
        gPS0.setX((-1430.379844457951));
        boolean boolean0 = gPS0.equals(gPS1);
        assertEquals((-1430.379844457951), gPS1.getY(), 0.01);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test16()  throws Throwable  {
        GPS gPS0 = new GPS(1.79663803818416, 1.79663803818416);
        GPS gPS1 = gPS0.clone();
        gPS1.setX((-1430.379844457951));
        boolean boolean0 = gPS1.equals(gPS0);
        assertEquals((-1430.379844457951), gPS1.getX(), 0.01);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test17()  throws Throwable  {
        GPS gPS0 = new GPS(0.0, 0.0);
        Object object0 = new Object();
        boolean boolean0 = gPS0.equals(object0);
        assertEquals(0.0, gPS0.getY(), 0.01);
        assertEquals(0.0, gPS0.getX(), 0.01);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test18()  throws Throwable  {
        GPS gPS0 = new GPS(0.0, 0.0);
        boolean boolean0 = gPS0.equals((Object) null);
        assertEquals(0.0, gPS0.getX(), 0.01);
        assertEquals(0.0, gPS0.getY(), 0.01);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test19()  throws Throwable  {
        GPS gPS0 = new GPS(0.0, 0.0);
        gPS0.hashCode();
        assertEquals(0.0, gPS0.getX(), 0.01);
        assertEquals(0.0, gPS0.getY(), 0.01);
    }

    @Test(timeout = 4000)
    public void test20()  throws Throwable  {
        GPS gPS0 = new GPS(0.0, 0.0);
        String string0 = gPS0.toString();
        assertEquals("Coordenadas:\nPos X: 0.0;\nPos Y: 0.0;\n", string0);
    }

    @Test(timeout = 4000)
    public void test21()  throws Throwable  {
        GPS gPS0 = new GPS();
        // Undeclared exception!
        try {
            gPS0.calculaDistancia((GPS) null);
            fail("Expecting exception: NullPointerException");

        } catch(NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("Model.GPS", e);
        }
    }

    @Test(timeout = 4000)
    public void test22()  throws Throwable  {
        GPS gPS0 = new GPS();
        GPS gPS1 = new GPS();
        boolean boolean0 = gPS0.equals(gPS1);
        assertEquals(0.0, gPS1.getY(), 0.01);
        assertEquals(0.0, gPS1.getX(), 0.01);
        assertTrue(boolean0);
    }
}
