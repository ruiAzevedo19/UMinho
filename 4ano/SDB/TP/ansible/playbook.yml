---
- name: create google cloud platform virtual machines
  hosts: localhost
  connection: local
  roles:
    - role: gcp
      vars:
        gcp_zone: europe-west1-b
        gcp_region: europe-west1
        gcp_project: sdb-2020
        gcp_cred_kind: serviceaccount
        gcp_cred_file: credentials.json
        gcp_machine_type: n1-standard-1
        source_image: projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20201211
        disk_size: 10
        disks:
          - disk-01
          - disk-02
          - disk-03
          - disk-04
          - disk-05
          - disk-06
          - disk-07
          - disk-08
        addresses:
          - addr-01
          - addr-02
          - addr-03
          - addr-04
          - addr-05
          - addr-06
          - addr-07
          - addr-08
        instances:
          - { index: 1, tag: mm-app-01 } # Mattermost app 1
          - { index: 2, tag: mm-app-02 } # Mattermost app 2
          - { index: 3, tag: elk-01    } # Elastic Search and Kibana
          - { index: 4, tag: sql-m-01  } # SQL Master
          - { index: 5, tag: sql-rr-01 } # SQL Read Replica 1
          - { index: 6, tag: sql-rr-02 } # SQL Read Replica 2
          - { index: 7, tag: nginx-01  } # NGINX
          - { index: 8, tag: minio-01  } # MinIO
          

# Elastic Search and Kibana
- hosts: elk-*
  become: yes
  gather_facts: true
  roles: 
    - { role: elasticsearch, 
        elastic_host: "{{ groups['elastic_internal_ip'][0] }}"
      }
    - { role: kibana,
        elastic_host: "{{ groups['elastic_internal_ip'][0] }}"
      }

# Master Database
- hosts: sql-m-01
  become: yes
  gather_facts: true
  roles: 
    - mysql-install 
    - mysql-master
    - { role: beats, 
        elastic_host: "{{ groups['elastic_internal_ip'][0] }}",
        kibana_host:  "{{ groups['elastic_internal_ip'][0] }}"
      }
  vars:
    - id: 1

# Read Replica 1
- hosts: sql-rr-01
  become: yes
  gather_facts: true
  roles: 
    - mysql-install 
    - mysql-slave
    - { role: beats, 
        elastic_host: "{{ groups['elastic_internal_ip'][0] }}",
        kibana_host:  "{{ groups['elastic_internal_ip'][0] }}"
      }
  vars:
    - id: 2

# Read Replica 2 
- hosts: sql-rr-02
  become: yes
  gather_facts: true
  roles: 
    - mysql-install 
    - mysql-slave
    - { role: beats, 
        elastic_host: "{{ groups['elastic_internal_ip'][0] }}",
        kibana_host:  "{{ groups['elastic_internal_ip'][0] }}"
      }

  vars:
    - id: 3

# Only for master, after read replicas are configured correctly
- hosts: sql-m-01
  become: yes
  gather_facts: no
  roles:
    - mysql-after-repl

# Run MinIO
- hosts: minio-*
  become: yes
  gather_facts: true
  roles: 
    - minio

# Application servers
- hosts: mm-app-*
  become: yes
  gather_facts: true
  roles: 
    - mattermost
    - { role: beats, 
        elastic_host: "{{ groups['elastic_internal_ip'][0] }}",
        kibana_host:  "{{ groups['elastic_internal_ip'][0] }}"
      }

# Run NGINX
- hosts: nginx-*
  become: yes
  gather_facts: true
  roles: 
    - nginx