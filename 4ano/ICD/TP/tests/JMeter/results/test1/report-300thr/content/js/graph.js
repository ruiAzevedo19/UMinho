/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 82.0, "minX": 0.0, "maxY": 120081.0, "series": [{"data": [[0.0, 82.0], [0.1, 82.0], [0.2, 82.0], [0.3, 82.0], [0.4, 82.0], [0.5, 82.0], [0.6, 82.0], [0.7, 82.0], [0.8, 82.0], [0.9, 82.0], [1.0, 82.0], [1.1, 82.0], [1.2, 82.0], [1.3, 82.0], [1.4, 82.0], [1.5, 82.0], [1.6, 82.0], [1.7, 82.0], [1.8, 82.0], [1.9, 82.0], [2.0, 82.0], [2.1, 82.0], [2.2, 82.0], [2.3, 82.0], [2.4, 82.0], [2.5, 82.0], [2.6, 82.0], [2.7, 82.0], [2.8, 82.0], [2.9, 82.0], [3.0, 82.0], [3.1, 82.0], [3.2, 82.0], [3.3, 82.0], [3.4, 82.0], [3.5, 82.0], [3.6, 82.0], [3.7, 82.0], [3.8, 82.0], [3.9, 82.0], [4.0, 83.0], [4.1, 83.0], [4.2, 83.0], [4.3, 83.0], [4.4, 83.0], [4.5, 83.0], [4.6, 83.0], [4.7, 83.0], [4.8, 83.0], [4.9, 83.0], [5.0, 84.0], [5.1, 84.0], [5.2, 84.0], [5.3, 84.0], [5.4, 84.0], [5.5, 84.0], [5.6, 84.0], [5.7, 84.0], [5.8, 84.0], [5.9, 84.0], [6.0, 84.0], [6.1, 84.0], [6.2, 84.0], [6.3, 84.0], [6.4, 84.0], [6.5, 84.0], [6.6, 84.0], [6.7, 84.0], [6.8, 84.0], [6.9, 84.0], [7.0, 85.0], [7.1, 85.0], [7.2, 85.0], [7.3, 85.0], [7.4, 85.0], [7.5, 85.0], [7.6, 85.0], [7.7, 85.0], [7.8, 85.0], [7.9, 85.0], [8.0, 85.0], [8.1, 85.0], [8.2, 85.0], [8.3, 85.0], [8.4, 85.0], [8.5, 85.0], [8.6, 85.0], [8.7, 85.0], [8.8, 85.0], [8.9, 85.0], [9.0, 85.0], [9.1, 85.0], [9.2, 85.0], [9.3, 85.0], [9.4, 86.0], [9.5, 86.0], [9.6, 86.0], [9.7, 87.0], [9.8, 87.0], [9.9, 87.0], [10.0, 87.0], [10.1, 88.0], [10.2, 88.0], [10.3, 88.0], [10.4, 89.0], [10.5, 89.0], [10.6, 89.0], [10.7, 89.0], [10.8, 89.0], [10.9, 89.0], [11.0, 89.0], [11.1, 89.0], [11.2, 89.0], [11.3, 89.0], [11.4, 89.0], [11.5, 89.0], [11.6, 89.0], [11.7, 89.0], [11.8, 89.0], [11.9, 89.0], [12.0, 89.0], [12.1, 89.0], [12.2, 89.0], [12.3, 89.0], [12.4, 90.0], [12.5, 90.0], [12.6, 90.0], [12.7, 90.0], [12.8, 90.0], [12.9, 90.0], [13.0, 90.0], [13.1, 90.0], [13.2, 90.0], [13.3, 90.0], [13.4, 91.0], [13.5, 91.0], [13.6, 91.0], [13.7, 91.0], [13.8, 91.0], [13.9, 91.0], [14.0, 91.0], [14.1, 92.0], [14.2, 92.0], [14.3, 92.0], [14.4, 92.0], [14.5, 92.0], [14.6, 92.0], [14.7, 93.0], [14.8, 93.0], [14.9, 93.0], [15.0, 93.0], [15.1, 94.0], [15.2, 94.0], [15.3, 94.0], [15.4, 94.0], [15.5, 94.0], [15.6, 94.0], [15.7, 94.0], [15.8, 94.0], [15.9, 94.0], [16.0, 94.0], [16.1, 94.0], [16.2, 94.0], [16.3, 94.0], [16.4, 95.0], [16.5, 95.0], [16.6, 95.0], [16.7, 95.0], [16.8, 95.0], [16.9, 95.0], [17.0, 95.0], [17.1, 95.0], [17.2, 95.0], [17.3, 95.0], [17.4, 98.0], [17.5, 98.0], [17.6, 98.0], [17.7, 99.0], [17.8, 99.0], [17.9, 99.0], [18.0, 101.0], [18.1, 101.0], [18.2, 101.0], [18.3, 101.0], [18.4, 103.0], [18.5, 103.0], [18.6, 103.0], [18.7, 103.0], [18.8, 103.0], [18.9, 103.0], [19.0, 103.0], [19.1, 103.0], [19.2, 103.0], [19.3, 103.0], [19.4, 106.0], [19.5, 106.0], [19.6, 106.0], [19.7, 106.0], [19.8, 106.0], [19.9, 106.0], [20.0, 106.0], [20.1, 106.0], [20.2, 106.0], [20.3, 106.0], [20.4, 107.0], [20.5, 107.0], [20.6, 107.0], [20.7, 109.0], [20.8, 109.0], [20.9, 109.0], [21.0, 109.0], [21.1, 109.0], [21.2, 109.0], [21.3, 109.0], [21.4, 110.0], [21.5, 110.0], [21.6, 110.0], [21.7, 110.0], [21.8, 110.0], [21.9, 110.0], [22.0, 113.0], [22.1, 113.0], [22.2, 113.0], [22.3, 113.0], [22.4, 114.0], [22.5, 114.0], [22.6, 114.0], [22.7, 114.0], [22.8, 114.0], [22.9, 114.0], [23.0, 114.0], [23.1, 114.0], [23.2, 114.0], [23.3, 114.0], [23.4, 114.0], [23.5, 114.0], [23.6, 114.0], [23.7, 116.0], [23.8, 116.0], [23.9, 116.0], [24.0, 116.0], [24.1, 116.0], [24.2, 116.0], [24.3, 116.0], [24.4, 116.0], [24.5, 116.0], [24.6, 116.0], [24.7, 117.0], [24.8, 117.0], [24.9, 117.0], [25.0, 117.0], [25.1, 117.0], [25.2, 117.0], [25.3, 117.0], [25.4, 117.0], [25.5, 117.0], [25.6, 117.0], [25.7, 117.0], [25.8, 117.0], [25.9, 117.0], [26.0, 117.0], [26.1, 117.0], [26.2, 117.0], [26.3, 117.0], [26.4, 117.0], [26.5, 117.0], [26.6, 117.0], [26.7, 117.0], [26.8, 117.0], [26.9, 117.0], [27.0, 117.0], [27.1, 117.0], [27.2, 117.0], [27.3, 117.0], [27.4, 117.0], [27.5, 117.0], [27.6, 117.0], [27.7, 117.0], [27.8, 117.0], [27.9, 117.0], [28.0, 118.0], [28.1, 118.0], [28.2, 118.0], [28.3, 118.0], [28.4, 118.0], [28.5, 118.0], [28.6, 118.0], [28.7, 118.0], [28.8, 118.0], [28.9, 118.0], [29.0, 119.0], [29.1, 119.0], [29.2, 119.0], [29.3, 119.0], [29.4, 120.0], [29.5, 120.0], [29.6, 120.0], [29.7, 120.0], [29.8, 120.0], [29.9, 120.0], [30.0, 121.0], [30.1, 121.0], [30.2, 121.0], [30.3, 121.0], [30.4, 121.0], [30.5, 121.0], [30.6, 121.0], [30.7, 121.0], [30.8, 121.0], [30.9, 121.0], [31.0, 121.0], [31.1, 121.0], [31.2, 121.0], [31.3, 121.0], [31.4, 122.0], [31.5, 122.0], [31.6, 122.0], [31.7, 122.0], [31.8, 122.0], [31.9, 122.0], [32.0, 122.0], [32.1, 122.0], [32.2, 122.0], [32.3, 122.0], [32.4, 122.0], [32.5, 122.0], [32.6, 122.0], [32.7, 122.0], [32.8, 122.0], [32.9, 122.0], [33.0, 122.0], [33.1, 122.0], [33.2, 122.0], [33.3, 122.0], [33.4, 122.0], [33.5, 122.0], [33.6, 122.0], [33.7, 123.0], [33.8, 123.0], [33.9, 123.0], [34.0, 123.0], [34.1, 123.0], [34.2, 123.0], [34.3, 123.0], [34.4, 124.0], [34.5, 124.0], [34.6, 124.0], [34.7, 125.0], [34.8, 125.0], [34.9, 125.0], [35.0, 126.0], [35.1, 126.0], [35.2, 126.0], [35.3, 126.0], [35.4, 126.0], [35.5, 126.0], [35.6, 126.0], [35.7, 126.0], [35.8, 126.0], [35.9, 126.0], [36.0, 127.0], [36.1, 127.0], [36.2, 127.0], [36.3, 127.0], [36.4, 127.0], [36.5, 127.0], [36.6, 127.0], [36.7, 127.0], [36.8, 127.0], [36.9, 127.0], [37.0, 127.0], [37.1, 127.0], [37.2, 127.0], [37.3, 127.0], [37.4, 128.0], [37.5, 128.0], [37.6, 128.0], [37.7, 128.0], [37.8, 128.0], [37.9, 128.0], [38.0, 128.0], [38.1, 128.0], [38.2, 128.0], [38.3, 128.0], [38.4, 129.0], [38.5, 129.0], [38.6, 129.0], [38.7, 129.0], [38.8, 129.0], [38.9, 129.0], [39.0, 130.0], [39.1, 130.0], [39.2, 130.0], [39.3, 130.0], [39.4, 131.0], [39.5, 131.0], [39.6, 131.0], [39.7, 132.0], [39.8, 132.0], [39.9, 132.0], [40.0, 132.0], [40.1, 133.0], [40.2, 133.0], [40.3, 133.0], [40.4, 133.0], [40.5, 133.0], [40.6, 133.0], [40.7, 134.0], [40.8, 134.0], [40.9, 134.0], [41.0, 134.0], [41.1, 134.0], [41.2, 134.0], [41.3, 134.0], [41.4, 135.0], [41.5, 135.0], [41.6, 135.0], [41.7, 136.0], [41.8, 136.0], [41.9, 136.0], [42.0, 136.0], [42.1, 136.0], [42.2, 136.0], [42.3, 136.0], [42.4, 136.0], [42.5, 136.0], [42.6, 136.0], [42.7, 137.0], [42.8, 137.0], [42.9, 137.0], [43.0, 137.0], [43.1, 137.0], [43.2, 137.0], [43.3, 137.0], [43.4, 137.0], [43.5, 137.0], [43.6, 137.0], [43.7, 137.0], [43.8, 137.0], [43.9, 137.0], [44.0, 137.0], [44.1, 137.0], [44.2, 137.0], [44.3, 137.0], [44.4, 137.0], [44.5, 137.0], [44.6, 137.0], [44.7, 138.0], [44.8, 138.0], [44.9, 138.0], [45.0, 138.0], [45.1, 138.0], [45.2, 138.0], [45.3, 138.0], [45.4, 138.0], [45.5, 138.0], [45.6, 138.0], [45.7, 139.0], [45.8, 139.0], [45.9, 139.0], [46.0, 139.0], [46.1, 139.0], [46.2, 139.0], [46.3, 139.0], [46.4, 139.0], [46.5, 139.0], [46.6, 139.0], [46.7, 139.0], [46.8, 139.0], [46.9, 139.0], [47.0, 139.0], [47.1, 140.0], [47.2, 140.0], [47.3, 140.0], [47.4, 140.0], [47.5, 140.0], [47.6, 140.0], [47.7, 140.0], [47.8, 140.0], [47.9, 140.0], [48.0, 140.0], [48.1, 141.0], [48.2, 141.0], [48.3, 141.0], [48.4, 147.0], [48.5, 147.0], [48.6, 147.0], [48.7, 148.0], [48.8, 148.0], [48.9, 148.0], [49.0, 148.0], [49.1, 150.0], [49.2, 150.0], [49.3, 150.0], [49.4, 151.0], [49.5, 151.0], [49.6, 151.0], [49.7, 152.0], [49.8, 152.0], [49.9, 152.0], [50.0, 152.0], [50.1, 154.0], [50.2, 154.0], [50.3, 154.0], [50.4, 154.0], [50.5, 154.0], [50.6, 154.0], [50.7, 156.0], [50.8, 156.0], [50.9, 156.0], [51.0, 156.0], [51.1, 156.0], [51.2, 156.0], [51.3, 156.0], [51.4, 156.0], [51.5, 156.0], [51.6, 156.0], [51.7, 156.0], [51.8, 156.0], [51.9, 156.0], [52.0, 156.0], [52.1, 159.0], [52.2, 159.0], [52.3, 159.0], [52.4, 159.0], [52.5, 159.0], [52.6, 159.0], [52.7, 160.0], [52.8, 160.0], [52.9, 160.0], [53.0, 160.0], [53.1, 160.0], [53.2, 160.0], [53.3, 160.0], [53.4, 161.0], [53.5, 161.0], [53.6, 161.0], [53.7, 162.0], [53.8, 162.0], [53.9, 162.0], [54.0, 162.0], [54.1, 164.0], [54.2, 164.0], [54.3, 164.0], [54.4, 164.0], [54.5, 164.0], [54.6, 164.0], [54.7, 164.0], [54.8, 164.0], [54.9, 164.0], [55.0, 164.0], [55.1, 165.0], [55.2, 165.0], [55.3, 165.0], [55.4, 165.0], [55.5, 165.0], [55.6, 165.0], [55.7, 165.0], [55.8, 165.0], [55.9, 165.0], [56.0, 165.0], [56.1, 166.0], [56.2, 166.0], [56.3, 166.0], [56.4, 166.0], [56.5, 166.0], [56.6, 166.0], [56.7, 166.0], [56.8, 166.0], [56.9, 166.0], [57.0, 166.0], [57.1, 166.0], [57.2, 166.0], [57.3, 166.0], [57.4, 166.0], [57.5, 166.0], [57.6, 166.0], [57.7, 166.0], [57.8, 166.0], [57.9, 166.0], [58.0, 166.0], [58.1, 167.0], [58.2, 167.0], [58.3, 167.0], [58.4, 167.0], [58.5, 167.0], [58.6, 167.0], [58.7, 167.0], [58.8, 167.0], [58.9, 167.0], [59.0, 167.0], [59.1, 168.0], [59.2, 168.0], [59.3, 168.0], [59.4, 168.0], [59.5, 168.0], [59.6, 168.0], [59.7, 170.0], [59.8, 170.0], [59.9, 170.0], [60.0, 170.0], [60.1, 180.0], [60.2, 180.0], [60.3, 180.0], [60.4, 182.0], [60.5, 182.0], [60.6, 182.0], [60.7, 182.0], [60.8, 182.0], [60.9, 182.0], [61.0, 182.0], [61.1, 182.0], [61.2, 182.0], [61.3, 182.0], [61.4, 183.0], [61.5, 183.0], [61.6, 183.0], [61.7, 187.0], [61.8, 187.0], [61.9, 187.0], [62.0, 187.0], [62.1, 187.0], [62.2, 187.0], [62.3, 187.0], [62.4, 188.0], [62.5, 188.0], [62.6, 188.0], [62.7, 188.0], [62.8, 188.0], [62.9, 188.0], [63.0, 188.0], [63.1, 188.0], [63.2, 188.0], [63.3, 188.0], [63.4, 189.0], [63.5, 189.0], [63.6, 189.0], [63.7, 189.0], [63.8, 189.0], [63.9, 189.0], [64.0, 189.0], [64.1, 194.0], [64.2, 194.0], [64.3, 194.0], [64.4, 195.0], [64.5, 195.0], [64.6, 195.0], [64.7, 196.0], [64.8, 196.0], [64.9, 196.0], [65.0, 196.0], [65.1, 196.0], [65.2, 196.0], [65.3, 196.0], [65.4, 197.0], [65.5, 197.0], [65.6, 197.0], [65.7, 197.0], [65.8, 197.0], [65.9, 197.0], [66.0, 197.0], [66.1, 198.0], [66.2, 198.0], [66.3, 198.0], [66.4, 1171.0], [66.5, 1171.0], [66.6, 1171.0], [66.7, 1171.0], [66.8, 1171.0], [66.9, 1171.0], [67.0, 1171.0], [67.1, 1172.0], [67.2, 1172.0], [67.3, 1172.0], [67.4, 1172.0], [67.5, 1172.0], [67.6, 1172.0], [67.7, 1173.0], [67.8, 1173.0], [67.9, 1173.0], [68.0, 1173.0], [68.1, 1184.0], [68.2, 1184.0], [68.3, 1184.0], [68.4, 1184.0], [68.5, 1184.0], [68.6, 1184.0], [68.7, 1184.0], [68.8, 1184.0], [68.9, 1184.0], [69.0, 1184.0], [69.1, 1186.0], [69.2, 1186.0], [69.3, 1186.0], [69.4, 1186.0], [69.5, 1186.0], [69.6, 1186.0], [69.7, 1187.0], [69.8, 1187.0], [69.9, 1187.0], [70.0, 1187.0], [70.1, 1188.0], [70.2, 1188.0], [70.3, 1188.0], [70.4, 1188.0], [70.5, 1188.0], [70.6, 1188.0], [70.7, 1188.0], [70.8, 1188.0], [70.9, 1188.0], [71.0, 1188.0], [71.1, 1188.0], [71.2, 1188.0], [71.3, 1188.0], [71.4, 1188.0], [71.5, 1188.0], [71.6, 1188.0], [71.7, 1189.0], [71.8, 1189.0], [71.9, 1189.0], [72.0, 1189.0], [72.1, 1190.0], [72.2, 1190.0], [72.3, 1190.0], [72.4, 1190.0], [72.5, 1190.0], [72.6, 1190.0], [72.7, 1194.0], [72.8, 1194.0], [72.9, 1194.0], [73.0, 1194.0], [73.1, 2467.0], [73.2, 2467.0], [73.3, 2467.0], [73.4, 2468.0], [73.5, 2468.0], [73.6, 2468.0], [73.7, 2469.0], [73.8, 2469.0], [73.9, 2469.0], [74.0, 2469.0], [74.1, 2469.0], [74.2, 2469.0], [74.3, 2469.0], [74.4, 2470.0], [74.5, 2470.0], [74.6, 2470.0], [74.7, 2470.0], [74.8, 2470.0], [74.9, 2470.0], [75.0, 2470.0], [75.1, 2471.0], [75.2, 2471.0], [75.3, 2471.0], [75.4, 2471.0], [75.5, 2471.0], [75.6, 2471.0], [75.7, 2471.0], [75.8, 2471.0], [75.9, 2471.0], [76.0, 2471.0], [76.1, 2471.0], [76.2, 2471.0], [76.3, 2471.0], [76.4, 2471.0], [76.5, 2471.0], [76.6, 2471.0], [76.7, 2472.0], [76.8, 2472.0], [76.9, 2472.0], [77.0, 2472.0], [77.1, 2499.0], [77.2, 2499.0], [77.3, 2499.0], [77.4, 2499.0], [77.5, 2499.0], [77.6, 2499.0], [77.7, 2500.0], [77.8, 2500.0], [77.9, 2500.0], [78.0, 2500.0], [78.1, 2500.0], [78.2, 2500.0], [78.3, 2500.0], [78.4, 2501.0], [78.5, 2501.0], [78.6, 2501.0], [78.7, 2501.0], [78.8, 2501.0], [78.9, 2501.0], [79.0, 2501.0], [79.1, 2501.0], [79.2, 2501.0], [79.3, 2501.0], [79.4, 2502.0], [79.5, 2502.0], [79.6, 2502.0], [79.7, 2502.0], [79.8, 2502.0], [79.9, 2502.0], [80.0, 2502.0], [80.1, 2502.0], [80.2, 2502.0], [80.3, 2502.0], [80.4, 2503.0], [80.5, 2503.0], [80.6, 2503.0], [80.7, 2503.0], [80.8, 2503.0], [80.9, 2503.0], [81.0, 2503.0], [81.1, 2505.0], [81.2, 2505.0], [81.3, 2505.0], [81.4, 2505.0], [81.5, 2505.0], [81.6, 2505.0], [81.7, 2506.0], [81.8, 2506.0], [81.9, 2506.0], [82.0, 2506.0], [82.1, 2506.0], [82.2, 2506.0], [82.3, 2506.0], [82.4, 2508.0], [82.5, 2508.0], [82.6, 2508.0], [82.7, 3022.0], [82.8, 3022.0], [82.9, 3022.0], [83.0, 3022.0], [83.1, 3023.0], [83.2, 3023.0], [83.3, 3023.0], [83.4, 3024.0], [83.5, 3024.0], [83.6, 3024.0], [83.7, 3024.0], [83.8, 3024.0], [83.9, 3024.0], [84.0, 3024.0], [84.1, 3025.0], [84.2, 3025.0], [84.3, 3025.0], [84.4, 3026.0], [84.5, 3026.0], [84.6, 3026.0], [84.7, 3026.0], [84.8, 3026.0], [84.9, 3026.0], [85.0, 3026.0], [85.1, 3026.0], [85.2, 3026.0], [85.3, 3026.0], [85.4, 3028.0], [85.5, 3028.0], [85.6, 3028.0], [85.7, 3028.0], [85.8, 3028.0], [85.9, 3028.0], [86.0, 3028.0], [86.1, 3028.0], [86.2, 3028.0], [86.3, 3028.0], [86.4, 3028.0], [86.5, 3028.0], [86.6, 3028.0], [86.7, 3029.0], [86.8, 3029.0], [86.9, 3029.0], [87.0, 3029.0], [87.1, 3029.0], [87.2, 3029.0], [87.3, 3029.0], [87.4, 3029.0], [87.5, 3029.0], [87.6, 3029.0], [87.7, 3401.0], [87.8, 3401.0], [87.9, 3401.0], [88.0, 3401.0], [88.1, 3401.0], [88.2, 3401.0], [88.3, 3401.0], [88.4, 3401.0], [88.5, 3401.0], [88.6, 3401.0], [88.7, 3401.0], [88.8, 3401.0], [88.9, 3401.0], [89.0, 3401.0], [89.1, 3402.0], [89.2, 3402.0], [89.3, 3402.0], [89.4, 3404.0], [89.5, 3404.0], [89.6, 3404.0], [89.7, 3404.0], [89.8, 3404.0], [89.9, 3404.0], [90.0, 3404.0], [90.1, 3404.0], [90.2, 3404.0], [90.3, 3404.0], [90.4, 3404.0], [90.5, 3404.0], [90.6, 3404.0], [90.7, 3405.0], [90.8, 3405.0], [90.9, 3405.0], [91.0, 3405.0], [91.1, 3406.0], [91.2, 3406.0], [91.3, 3406.0], [91.4, 3581.0], [91.5, 3581.0], [91.6, 3581.0], [91.7, 3581.0], [91.8, 3581.0], [91.9, 3581.0], [92.0, 3581.0], [92.1, 3582.0], [92.2, 3582.0], [92.3, 3582.0], [92.4, 3582.0], [92.5, 3582.0], [92.6, 3582.0], [92.7, 3582.0], [92.8, 3582.0], [92.9, 3582.0], [93.0, 3582.0], [93.1, 3583.0], [93.2, 3583.0], [93.3, 3583.0], [93.4, 3584.0], [93.5, 3584.0], [93.6, 3584.0], [93.7, 3585.0], [93.8, 3585.0], [93.9, 3585.0], [94.0, 3586.0], [94.1, 3586.0], [94.2, 3586.0], [94.3, 3586.0], [94.4, 3586.0], [94.5, 3586.0], [94.6, 3586.0], [94.7, 3587.0], [94.8, 3587.0], [94.9, 3587.0], [95.0, 3588.0], [95.1, 3588.0], [95.2, 3588.0], [95.3, 3588.0], [95.4, 3588.0], [95.5, 3588.0], [95.6, 3588.0], [95.7, 3588.0], [95.8, 3588.0], [95.9, 3588.0], [96.0, 3588.0], [96.1, 3588.0], [96.2, 3588.0], [96.3, 3588.0], [96.4, 3956.0], [96.5, 3956.0], [96.6, 3956.0], [96.7, 3957.0], [96.8, 3957.0], [96.9, 3957.0], [97.0, 3957.0], [97.1, 3957.0], [97.2, 3957.0], [97.3, 3957.0], [97.4, 3958.0], [97.5, 3958.0], [97.6, 3958.0], [97.7, 3958.0], [97.8, 3958.0], [97.9, 3958.0], [98.0, 3958.0], [98.1, 3958.0], [98.2, 3958.0], [98.3, 3958.0], [98.4, 3959.0], [98.5, 3959.0], [98.6, 3959.0], [98.7, 3959.0], [98.8, 3959.0], [98.9, 3959.0], [99.0, 3960.0], [99.1, 3960.0], [99.2, 3960.0], [99.3, 3960.0], [99.4, 3961.0], [99.5, 3961.0], [99.6, 3961.0], [99.7, 3961.0], [99.8, 3961.0], [99.9, 3961.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[0.0, 63202.0], [0.1, 63202.0], [0.2, 63202.0], [0.3, 63202.0], [0.4, 63202.0], [0.5, 63202.0], [0.6, 63202.0], [0.7, 63203.0], [0.8, 63203.0], [0.9, 63203.0], [1.0, 63203.0], [1.1, 63203.0], [1.2, 63203.0], [1.3, 63203.0], [1.4, 63203.0], [1.5, 63203.0], [1.6, 63203.0], [1.7, 63203.0], [1.8, 63203.0], [1.9, 63203.0], [2.0, 63204.0], [2.1, 63204.0], [2.2, 63204.0], [2.3, 63204.0], [2.4, 63204.0], [2.5, 63204.0], [2.6, 63204.0], [2.7, 63204.0], [2.8, 63204.0], [2.9, 63204.0], [3.0, 63204.0], [3.1, 63204.0], [3.2, 63204.0], [3.3, 63204.0], [3.4, 63204.0], [3.5, 63204.0], [3.6, 63204.0], [3.7, 63204.0], [3.8, 63204.0], [3.9, 63204.0], [4.0, 63205.0], [4.1, 63205.0], [4.2, 63205.0], [4.3, 63205.0], [4.4, 63206.0], [4.5, 63206.0], [4.6, 63206.0], [4.7, 63206.0], [4.8, 63206.0], [4.9, 63206.0], [5.0, 63206.0], [5.1, 63206.0], [5.2, 63206.0], [5.3, 63206.0], [5.4, 63206.0], [5.5, 63206.0], [5.6, 63206.0], [5.7, 63207.0], [5.8, 63207.0], [5.9, 63207.0], [6.0, 63208.0], [6.1, 63208.0], [6.2, 63208.0], [6.3, 63208.0], [6.4, 63209.0], [6.5, 63209.0], [6.6, 63209.0], [6.7, 63271.0], [6.8, 63271.0], [6.9, 63271.0], [7.0, 63272.0], [7.1, 63272.0], [7.2, 63272.0], [7.3, 63272.0], [7.4, 63273.0], [7.5, 63273.0], [7.6, 63273.0], [7.7, 63273.0], [7.8, 63273.0], [7.9, 63273.0], [8.0, 63273.0], [8.1, 63273.0], [8.2, 63273.0], [8.3, 63273.0], [8.4, 63274.0], [8.5, 63274.0], [8.6, 63274.0], [8.7, 63274.0], [8.8, 63274.0], [8.9, 63274.0], [9.0, 63274.0], [9.1, 63274.0], [9.2, 63274.0], [9.3, 63274.0], [9.4, 63275.0], [9.5, 63275.0], [9.6, 63275.0], [9.7, 63276.0], [9.8, 63276.0], [9.9, 63276.0], [10.0, 63276.0], [10.1, 63276.0], [10.2, 63276.0], [10.3, 63276.0], [10.4, 63277.0], [10.5, 63277.0], [10.6, 63277.0], [10.7, 63277.0], [10.8, 63277.0], [10.9, 63277.0], [11.0, 63277.0], [11.1, 63277.0], [11.2, 63277.0], [11.3, 63277.0], [11.4, 63277.0], [11.5, 63277.0], [11.6, 63277.0], [11.7, 63278.0], [11.8, 63278.0], [11.9, 63278.0], [12.0, 63278.0], [12.1, 63278.0], [12.2, 63278.0], [12.3, 63278.0], [12.4, 63279.0], [12.5, 63279.0], [12.6, 63279.0], [12.7, 63279.0], [12.8, 63279.0], [12.9, 63279.0], [13.0, 63279.0], [13.1, 63279.0], [13.2, 63279.0], [13.3, 63279.0], [13.4, 63280.0], [13.5, 63280.0], [13.6, 63280.0], [13.7, 63280.0], [13.8, 63280.0], [13.9, 63280.0], [14.0, 63281.0], [14.1, 63281.0], [14.2, 63281.0], [14.3, 63281.0], [14.4, 63281.0], [14.5, 63281.0], [14.6, 63281.0], [14.7, 63281.0], [14.8, 63281.0], [14.9, 63281.0], [15.0, 63282.0], [15.1, 63282.0], [15.2, 63282.0], [15.3, 63282.0], [15.4, 63282.0], [15.5, 63282.0], [15.6, 63282.0], [15.7, 63283.0], [15.8, 63283.0], [15.9, 63283.0], [16.0, 63283.0], [16.1, 63283.0], [16.2, 63283.0], [16.3, 63283.0], [16.4, 63285.0], [16.5, 63285.0], [16.6, 63285.0], [16.7, 63285.0], [16.8, 63285.0], [16.9, 63285.0], [17.0, 63519.0], [17.1, 63519.0], [17.2, 63519.0], [17.3, 63519.0], [17.4, 63520.0], [17.5, 63520.0], [17.6, 63520.0], [17.7, 63520.0], [17.8, 63520.0], [17.9, 63520.0], [18.0, 63521.0], [18.1, 63521.0], [18.2, 63521.0], [18.3, 63521.0], [18.4, 63521.0], [18.5, 63521.0], [18.6, 63521.0], [18.7, 63521.0], [18.8, 63521.0], [18.9, 63521.0], [19.0, 63524.0], [19.1, 63524.0], [19.2, 63524.0], [19.3, 63524.0], [19.4, 63524.0], [19.5, 63524.0], [19.6, 63524.0], [19.7, 63525.0], [19.8, 63525.0], [19.9, 63525.0], [20.0, 63525.0], [20.1, 63525.0], [20.2, 63525.0], [20.3, 63525.0], [20.4, 63525.0], [20.5, 63525.0], [20.6, 63525.0], [20.7, 63525.0], [20.8, 63525.0], [20.9, 63525.0], [21.0, 63525.0], [21.1, 63525.0], [21.2, 63525.0], [21.3, 63525.0], [21.4, 63525.0], [21.5, 63525.0], [21.6, 63525.0], [21.7, 63525.0], [21.8, 63525.0], [21.9, 63525.0], [22.0, 63526.0], [22.1, 63526.0], [22.2, 63526.0], [22.3, 63526.0], [22.4, 63526.0], [22.5, 63526.0], [22.6, 63526.0], [22.7, 63527.0], [22.8, 63527.0], [22.9, 63527.0], [23.0, 63528.0], [23.1, 63528.0], [23.2, 63528.0], [23.3, 63528.0], [23.4, 63580.0], [23.5, 63580.0], [23.6, 63580.0], [23.7, 63581.0], [23.8, 63581.0], [23.9, 63581.0], [24.0, 63581.0], [24.1, 63581.0], [24.2, 63581.0], [24.3, 63581.0], [24.4, 63581.0], [24.5, 63581.0], [24.6, 63581.0], [24.7, 63581.0], [24.8, 63581.0], [24.9, 63581.0], [25.0, 63581.0], [25.1, 63581.0], [25.2, 63581.0], [25.3, 63581.0], [25.4, 63582.0], [25.5, 63582.0], [25.6, 63582.0], [25.7, 63582.0], [25.8, 63582.0], [25.9, 63582.0], [26.0, 63584.0], [26.1, 63584.0], [26.2, 63584.0], [26.3, 63584.0], [26.4, 63584.0], [26.5, 63584.0], [26.6, 63584.0], [26.7, 63585.0], [26.8, 63585.0], [26.9, 63585.0], [27.0, 63585.0], [27.1, 63585.0], [27.2, 63585.0], [27.3, 63585.0], [27.4, 63585.0], [27.5, 63585.0], [27.6, 63585.0], [27.7, 63586.0], [27.8, 63586.0], [27.9, 63586.0], [28.0, 63587.0], [28.1, 63587.0], [28.2, 63587.0], [28.3, 63587.0], [28.4, 63657.0], [28.5, 63657.0], [28.6, 63657.0], [28.7, 63659.0], [28.8, 63659.0], [28.9, 63659.0], [29.0, 63661.0], [29.1, 63661.0], [29.2, 63661.0], [29.3, 63661.0], [29.4, 63662.0], [29.5, 63662.0], [29.6, 63662.0], [29.7, 63662.0], [29.8, 63662.0], [29.9, 63662.0], [30.0, 63662.0], [30.1, 63662.0], [30.2, 63662.0], [30.3, 63662.0], [30.4, 63662.0], [30.5, 63662.0], [30.6, 63662.0], [30.7, 63662.0], [30.8, 63662.0], [30.9, 63662.0], [31.0, 63663.0], [31.1, 63663.0], [31.2, 63663.0], [31.3, 63663.0], [31.4, 63663.0], [31.5, 63663.0], [31.6, 63663.0], [31.7, 63663.0], [31.8, 63663.0], [31.9, 63663.0], [32.0, 63663.0], [32.1, 63663.0], [32.2, 63663.0], [32.3, 63663.0], [32.4, 63663.0], [32.5, 63663.0], [32.6, 63663.0], [32.7, 63663.0], [32.8, 63663.0], [32.9, 63663.0], [33.0, 63665.0], [33.1, 63665.0], [33.2, 63665.0], [33.3, 63665.0], [33.4, 63763.0], [33.5, 63763.0], [33.6, 63763.0], [33.7, 63764.0], [33.8, 63764.0], [33.9, 63764.0], [34.0, 63764.0], [34.1, 63764.0], [34.2, 63764.0], [34.3, 63764.0], [34.4, 63764.0], [34.5, 63764.0], [34.6, 63764.0], [34.7, 63764.0], [34.8, 63764.0], [34.9, 63764.0], [35.0, 63764.0], [35.1, 63765.0], [35.2, 63765.0], [35.3, 63765.0], [35.4, 63765.0], [35.5, 63765.0], [35.6, 63765.0], [35.7, 63765.0], [35.8, 63765.0], [35.9, 63765.0], [36.0, 63765.0], [36.1, 63766.0], [36.2, 63766.0], [36.3, 63766.0], [36.4, 63766.0], [36.5, 63766.0], [36.6, 63766.0], [36.7, 63767.0], [36.8, 63767.0], [36.9, 63767.0], [37.0, 63767.0], [37.1, 68953.0], [37.2, 68953.0], [37.3, 68953.0], [37.4, 68955.0], [37.5, 68955.0], [37.6, 68955.0], [37.7, 68955.0], [37.8, 68955.0], [37.9, 68955.0], [38.0, 68955.0], [38.1, 68959.0], [38.2, 68959.0], [38.3, 68959.0], [38.4, 72800.0], [38.5, 72800.0], [38.6, 72800.0], [38.7, 72800.0], [38.8, 72800.0], [38.9, 72800.0], [39.0, 72800.0], [39.1, 72801.0], [39.2, 72801.0], [39.3, 72801.0], [39.4, 72805.0], [39.5, 72805.0], [39.6, 72805.0], [39.7, 73016.0], [39.8, 73016.0], [39.9, 73016.0], [40.0, 73016.0], [40.1, 73018.0], [40.2, 73018.0], [40.3, 73018.0], [40.4, 73018.0], [40.5, 73018.0], [40.6, 73018.0], [40.7, 73025.0], [40.8, 73025.0], [40.9, 73025.0], [41.0, 73025.0], [41.1, 73026.0], [41.2, 73026.0], [41.3, 73026.0], [41.4, 73394.0], [41.5, 73394.0], [41.6, 73394.0], [41.7, 74326.0], [41.8, 74326.0], [41.9, 74326.0], [42.0, 74326.0], [42.1, 74376.0], [42.2, 74376.0], [42.3, 74376.0], [42.4, 74735.0], [42.5, 74735.0], [42.6, 74735.0], [42.7, 74735.0], [42.8, 74735.0], [42.9, 74735.0], [43.0, 74735.0], [43.1, 74736.0], [43.2, 74736.0], [43.3, 74736.0], [43.4, 74736.0], [43.5, 74736.0], [43.6, 74736.0], [43.7, 75154.0], [43.8, 75154.0], [43.9, 75154.0], [44.0, 75154.0], [44.1, 75418.0], [44.2, 75418.0], [44.3, 75418.0], [44.4, 75420.0], [44.5, 75420.0], [44.6, 75420.0], [44.7, 75421.0], [44.8, 75421.0], [44.9, 75421.0], [45.0, 75421.0], [45.1, 75422.0], [45.2, 75422.0], [45.3, 75422.0], [45.4, 75427.0], [45.5, 75427.0], [45.6, 75427.0], [45.7, 75428.0], [45.8, 75428.0], [45.9, 75428.0], [46.0, 75428.0], [46.1, 75429.0], [46.2, 75429.0], [46.3, 75429.0], [46.4, 75429.0], [46.5, 75429.0], [46.6, 75429.0], [46.7, 75430.0], [46.8, 75430.0], [46.9, 75430.0], [47.0, 75430.0], [47.1, 75430.0], [47.2, 75430.0], [47.3, 75430.0], [47.4, 75431.0], [47.5, 75431.0], [47.6, 75431.0], [47.7, 75432.0], [47.8, 75432.0], [47.9, 75432.0], [48.0, 75432.0], [48.1, 75432.0], [48.2, 75432.0], [48.3, 75432.0], [48.4, 75433.0], [48.5, 75433.0], [48.6, 75433.0], [48.7, 75433.0], [48.8, 75433.0], [48.9, 75433.0], [49.0, 75433.0], [49.1, 75433.0], [49.2, 75433.0], [49.3, 75433.0], [49.4, 75433.0], [49.5, 75433.0], [49.6, 75433.0], [49.7, 75434.0], [49.8, 75434.0], [49.9, 75434.0], [50.0, 75434.0], [50.1, 75434.0], [50.2, 75434.0], [50.3, 75434.0], [50.4, 75434.0], [50.5, 75434.0], [50.6, 75434.0], [50.7, 75435.0], [50.8, 75435.0], [50.9, 75435.0], [51.0, 75435.0], [51.1, 75435.0], [51.2, 75435.0], [51.3, 75435.0], [51.4, 75437.0], [51.5, 75437.0], [51.6, 75437.0], [51.7, 75437.0], [51.8, 75437.0], [51.9, 75437.0], [52.0, 75437.0], [52.1, 75438.0], [52.2, 75438.0], [52.3, 75438.0], [52.4, 75439.0], [52.5, 75439.0], [52.6, 75439.0], [52.7, 75439.0], [52.8, 75439.0], [52.9, 75439.0], [53.0, 75439.0], [53.1, 75439.0], [53.2, 75439.0], [53.3, 75439.0], [53.4, 75439.0], [53.5, 75439.0], [53.6, 75439.0], [53.7, 75440.0], [53.8, 75440.0], [53.9, 75440.0], [54.0, 75440.0], [54.1, 75441.0], [54.2, 75441.0], [54.3, 75441.0], [54.4, 75441.0], [54.5, 75441.0], [54.6, 75441.0], [54.7, 75442.0], [54.8, 75442.0], [54.9, 75442.0], [55.0, 75442.0], [55.1, 75442.0], [55.2, 75442.0], [55.3, 75442.0], [55.4, 75443.0], [55.5, 75443.0], [55.6, 75443.0], [55.7, 75443.0], [55.8, 75443.0], [55.9, 75443.0], [56.0, 75443.0], [56.1, 75443.0], [56.2, 75443.0], [56.3, 75443.0], [56.4, 75443.0], [56.5, 75443.0], [56.6, 75443.0], [56.7, 75443.0], [56.8, 75443.0], [56.9, 75443.0], [57.0, 75443.0], [57.1, 75443.0], [57.2, 75443.0], [57.3, 75443.0], [57.4, 75443.0], [57.5, 75443.0], [57.6, 75443.0], [57.7, 75444.0], [57.8, 75444.0], [57.9, 75444.0], [58.0, 75444.0], [58.1, 75444.0], [58.2, 75444.0], [58.3, 75444.0], [58.4, 75444.0], [58.5, 75444.0], [58.6, 75444.0], [58.7, 75444.0], [58.8, 75444.0], [58.9, 75444.0], [59.0, 75444.0], [59.1, 75445.0], [59.2, 75445.0], [59.3, 75445.0], [59.4, 75445.0], [59.5, 75445.0], [59.6, 75445.0], [59.7, 75448.0], [59.8, 75448.0], [59.9, 75448.0], [60.0, 75448.0], [60.1, 75449.0], [60.2, 75449.0], [60.3, 75449.0], [60.4, 75449.0], [60.5, 75449.0], [60.6, 75449.0], [60.7, 75449.0], [60.8, 75449.0], [60.9, 75449.0], [61.0, 75449.0], [61.1, 75450.0], [61.2, 75450.0], [61.3, 75450.0], [61.4, 75450.0], [61.5, 75450.0], [61.6, 75450.0], [61.7, 75451.0], [61.8, 75451.0], [61.9, 75451.0], [62.0, 75451.0], [62.1, 75452.0], [62.2, 75452.0], [62.3, 75452.0], [62.4, 75454.0], [62.5, 75454.0], [62.6, 75454.0], [62.7, 75454.0], [62.8, 75454.0], [62.9, 75454.0], [63.0, 75454.0], [63.1, 75454.0], [63.2, 75454.0], [63.3, 75454.0], [63.4, 75455.0], [63.5, 75455.0], [63.6, 75455.0], [63.7, 75455.0], [63.8, 75455.0], [63.9, 75455.0], [64.0, 75455.0], [64.1, 75455.0], [64.2, 75455.0], [64.3, 75455.0], [64.4, 75457.0], [64.5, 75457.0], [64.6, 75457.0], [64.7, 75457.0], [64.8, 75457.0], [64.9, 75457.0], [65.0, 75457.0], [65.1, 75457.0], [65.2, 75457.0], [65.3, 75457.0], [65.4, 75457.0], [65.5, 75457.0], [65.6, 75457.0], [65.7, 75458.0], [65.8, 75458.0], [65.9, 75458.0], [66.0, 75458.0], [66.1, 75459.0], [66.2, 75459.0], [66.3, 75459.0], [66.4, 75459.0], [66.5, 75459.0], [66.6, 75459.0], [66.7, 75460.0], [66.8, 75460.0], [66.9, 75460.0], [67.0, 75460.0], [67.1, 75462.0], [67.2, 75462.0], [67.3, 75462.0], [67.4, 75462.0], [67.5, 75462.0], [67.6, 75462.0], [67.7, 75462.0], [67.8, 75462.0], [67.9, 75462.0], [68.0, 75462.0], [68.1, 75462.0], [68.2, 75462.0], [68.3, 75462.0], [68.4, 75462.0], [68.5, 75462.0], [68.6, 75462.0], [68.7, 75462.0], [68.8, 75462.0], [68.9, 75462.0], [69.0, 75462.0], [69.1, 75463.0], [69.2, 75463.0], [69.3, 75463.0], [69.4, 75463.0], [69.5, 75463.0], [69.6, 75463.0], [69.7, 75463.0], [69.8, 75463.0], [69.9, 75463.0], [70.0, 75463.0], [70.1, 75463.0], [70.2, 75463.0], [70.3, 75463.0], [70.4, 75464.0], [70.5, 75464.0], [70.6, 75464.0], [70.7, 75466.0], [70.8, 75466.0], [70.9, 75466.0], [71.0, 75466.0], [71.1, 75467.0], [71.2, 75467.0], [71.3, 75467.0], [71.4, 75469.0], [71.5, 75469.0], [71.6, 75469.0], [71.7, 75470.0], [71.8, 75470.0], [71.9, 75470.0], [72.0, 75470.0], [72.1, 75470.0], [72.2, 75470.0], [72.3, 75470.0], [72.4, 75470.0], [72.5, 75470.0], [72.6, 75470.0], [72.7, 75471.0], [72.8, 75471.0], [72.9, 75471.0], [73.0, 75472.0], [73.1, 75472.0], [73.2, 75472.0], [73.3, 75472.0], [73.4, 75473.0], [73.5, 75473.0], [73.6, 75473.0], [73.7, 75473.0], [73.8, 75473.0], [73.9, 75473.0], [74.0, 75473.0], [74.1, 75473.0], [74.2, 75473.0], [74.3, 75473.0], [74.4, 75473.0], [74.5, 75473.0], [74.6, 75473.0], [74.7, 75474.0], [74.8, 75474.0], [74.9, 75474.0], [75.0, 75474.0], [75.1, 75474.0], [75.2, 75474.0], [75.3, 75474.0], [75.4, 75474.0], [75.5, 75474.0], [75.6, 75474.0], [75.7, 75475.0], [75.8, 75475.0], [75.9, 75475.0], [76.0, 75477.0], [76.1, 75477.0], [76.2, 75477.0], [76.3, 75477.0], [76.4, 75477.0], [76.5, 75477.0], [76.6, 75477.0], [76.7, 75478.0], [76.8, 75478.0], [76.9, 75478.0], [77.0, 75478.0], [77.1, 75478.0], [77.2, 75478.0], [77.3, 75478.0], [77.4, 75478.0], [77.5, 75478.0], [77.6, 75478.0], [77.7, 75479.0], [77.8, 75479.0], [77.9, 75479.0], [78.0, 75479.0], [78.1, 75479.0], [78.2, 75479.0], [78.3, 75479.0], [78.4, 75481.0], [78.5, 75481.0], [78.6, 75481.0], [78.7, 75482.0], [78.8, 75482.0], [78.9, 75482.0], [79.0, 75482.0], [79.1, 75482.0], [79.2, 75482.0], [79.3, 75482.0], [79.4, 75492.0], [79.5, 75492.0], [79.6, 75492.0], [79.7, 75492.0], [79.8, 75492.0], [79.9, 75492.0], [80.0, 75496.0], [80.1, 75496.0], [80.2, 75496.0], [80.3, 75496.0], [80.4, 75502.0], [80.5, 75502.0], [80.6, 75502.0], [80.7, 75503.0], [80.8, 75503.0], [80.9, 75503.0], [81.0, 75503.0], [81.1, 75503.0], [81.2, 75503.0], [81.3, 75503.0], [81.4, 75504.0], [81.5, 75504.0], [81.6, 75504.0], [81.7, 75504.0], [81.8, 75504.0], [81.9, 75504.0], [82.0, 75504.0], [82.1, 75504.0], [82.2, 75504.0], [82.3, 75504.0], [82.4, 75504.0], [82.5, 75504.0], [82.6, 75504.0], [82.7, 75505.0], [82.8, 75505.0], [82.9, 75505.0], [83.0, 75505.0], [83.1, 75505.0], [83.2, 75505.0], [83.3, 75505.0], [83.4, 75505.0], [83.5, 75505.0], [83.6, 75505.0], [83.7, 75505.0], [83.8, 75505.0], [83.9, 75505.0], [84.0, 75505.0], [84.1, 75505.0], [84.2, 75505.0], [84.3, 75505.0], [84.4, 75506.0], [84.5, 75506.0], [84.6, 75506.0], [84.7, 75506.0], [84.8, 75506.0], [84.9, 75506.0], [85.0, 75506.0], [85.1, 75506.0], [85.2, 75506.0], [85.3, 75506.0], [85.4, 75508.0], [85.5, 75508.0], [85.6, 75508.0], [85.7, 75509.0], [85.8, 75509.0], [85.9, 75509.0], [86.0, 75509.0], [86.1, 75509.0], [86.2, 75509.0], [86.3, 75509.0], [86.4, 75510.0], [86.5, 75510.0], [86.6, 75510.0], [86.7, 75510.0], [86.8, 75510.0], [86.9, 75510.0], [87.0, 75511.0], [87.1, 75511.0], [87.2, 75511.0], [87.3, 75511.0], [87.4, 75512.0], [87.5, 75512.0], [87.6, 75512.0], [87.7, 75517.0], [87.8, 75517.0], [87.9, 75517.0], [88.0, 75518.0], [88.1, 75518.0], [88.2, 75518.0], [88.3, 75518.0], [88.4, 75518.0], [88.5, 75518.0], [88.6, 75518.0], [88.7, 75519.0], [88.8, 75519.0], [88.9, 75519.0], [89.0, 75519.0], [89.1, 75519.0], [89.2, 75519.0], [89.3, 75519.0], [89.4, 75520.0], [89.5, 75520.0], [89.6, 75520.0], [89.7, 75520.0], [89.8, 75520.0], [89.9, 75520.0], [90.0, 75521.0], [90.1, 75521.0], [90.2, 75521.0], [90.3, 75521.0], [90.4, 75521.0], [90.5, 75521.0], [90.6, 75521.0], [90.7, 75522.0], [90.8, 75522.0], [90.9, 75522.0], [91.0, 75523.0], [91.1, 75523.0], [91.2, 75523.0], [91.3, 75523.0], [91.4, 75523.0], [91.5, 75523.0], [91.6, 75523.0], [91.7, 75523.0], [91.8, 75523.0], [91.9, 75523.0], [92.0, 75524.0], [92.1, 75524.0], [92.2, 75524.0], [92.3, 75524.0], [92.4, 75524.0], [92.5, 75524.0], [92.6, 75524.0], [92.7, 75524.0], [92.8, 75524.0], [92.9, 75524.0], [93.0, 75525.0], [93.1, 75525.0], [93.2, 75525.0], [93.3, 75525.0], [93.4, 75544.0], [93.5, 75544.0], [93.6, 75544.0], [93.7, 75544.0], [93.8, 75544.0], [93.9, 75544.0], [94.0, 75545.0], [94.1, 75545.0], [94.2, 75545.0], [94.3, 75545.0], [94.4, 75545.0], [94.5, 75545.0], [94.6, 75545.0], [94.7, 75545.0], [94.8, 75545.0], [94.9, 75545.0], [95.0, 75546.0], [95.1, 75546.0], [95.2, 75546.0], [95.3, 75546.0], [95.4, 75546.0], [95.5, 75546.0], [95.6, 75546.0], [95.7, 75553.0], [95.8, 75553.0], [95.9, 75553.0], [96.0, 75553.0], [96.1, 75553.0], [96.2, 75553.0], [96.3, 75553.0], [96.4, 75553.0], [96.5, 75553.0], [96.6, 75553.0], [96.7, 75554.0], [96.8, 75554.0], [96.9, 75554.0], [97.0, 75563.0], [97.1, 75563.0], [97.2, 75563.0], [97.3, 75563.0], [97.4, 120073.0], [97.5, 120073.0], [97.6, 120073.0], [97.7, 120075.0], [97.8, 120075.0], [97.9, 120075.0], [98.0, 120076.0], [98.1, 120076.0], [98.2, 120076.0], [98.3, 120076.0], [98.4, 120076.0], [98.5, 120076.0], [98.6, 120076.0], [98.7, 120080.0], [98.8, 120080.0], [98.9, 120080.0], [99.0, 120081.0], [99.1, 120081.0], [99.2, 120081.0], [99.3, 120081.0], [99.4, 120081.0], [99.5, 120081.0], [99.6, 120081.0], [99.7, 120081.0], [99.8, 120081.0], [99.9, 120081.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[0.0, 163.0], [0.1, 163.0], [0.2, 163.0], [0.3, 163.0], [0.4, 164.0], [0.5, 164.0], [0.6, 164.0], [0.7, 166.0], [0.8, 166.0], [0.9, 166.0], [1.0, 166.0], [1.1, 166.0], [1.2, 166.0], [1.3, 166.0], [1.4, 166.0], [1.5, 166.0], [1.6, 166.0], [1.7, 168.0], [1.8, 168.0], [1.9, 168.0], [2.0, 168.0], [2.1, 168.0], [2.2, 168.0], [2.3, 168.0], [2.4, 169.0], [2.5, 169.0], [2.6, 169.0], [2.7, 170.0], [2.8, 170.0], [2.9, 170.0], [3.0, 170.0], [3.1, 170.0], [3.2, 170.0], [3.3, 170.0], [3.4, 170.0], [3.5, 170.0], [3.6, 170.0], [3.7, 172.0], [3.8, 172.0], [3.9, 172.0], [4.0, 172.0], [4.1, 172.0], [4.2, 172.0], [4.3, 172.0], [4.4, 173.0], [4.5, 173.0], [4.6, 173.0], [4.7, 173.0], [4.8, 173.0], [4.9, 173.0], [5.0, 173.0], [5.1, 173.0], [5.2, 173.0], [5.3, 173.0], [5.4, 173.0], [5.5, 173.0], [5.6, 173.0], [5.7, 174.0], [5.8, 174.0], [5.9, 174.0], [6.0, 175.0], [6.1, 175.0], [6.2, 175.0], [6.3, 175.0], [6.4, 176.0], [6.5, 176.0], [6.6, 176.0], [6.7, 176.0], [6.8, 176.0], [6.9, 176.0], [7.0, 177.0], [7.1, 177.0], [7.2, 177.0], [7.3, 177.0], [7.4, 177.0], [7.5, 177.0], [7.6, 177.0], [7.7, 178.0], [7.8, 178.0], [7.9, 178.0], [8.0, 178.0], [8.1, 178.0], [8.2, 178.0], [8.3, 178.0], [8.4, 178.0], [8.5, 178.0], [8.6, 178.0], [8.7, 178.0], [8.8, 178.0], [8.9, 178.0], [9.0, 179.0], [9.1, 179.0], [9.2, 179.0], [9.3, 179.0], [9.4, 181.0], [9.5, 181.0], [9.6, 181.0], [9.7, 182.0], [9.8, 182.0], [9.9, 182.0], [10.0, 182.0], [10.1, 182.0], [10.2, 182.0], [10.3, 182.0], [10.4, 183.0], [10.5, 183.0], [10.6, 183.0], [10.7, 185.0], [10.8, 185.0], [10.9, 185.0], [11.0, 185.0], [11.1, 185.0], [11.2, 185.0], [11.3, 185.0], [11.4, 186.0], [11.5, 186.0], [11.6, 186.0], [11.7, 186.0], [11.8, 186.0], [11.9, 186.0], [12.0, 187.0], [12.1, 187.0], [12.2, 187.0], [12.3, 187.0], [12.4, 188.0], [12.5, 188.0], [12.6, 188.0], [12.7, 189.0], [12.8, 189.0], [12.9, 189.0], [13.0, 189.0], [13.1, 189.0], [13.2, 189.0], [13.3, 189.0], [13.4, 190.0], [13.5, 190.0], [13.6, 190.0], [13.7, 190.0], [13.8, 190.0], [13.9, 190.0], [14.0, 192.0], [14.1, 192.0], [14.2, 192.0], [14.3, 192.0], [14.4, 192.0], [14.5, 192.0], [14.6, 192.0], [14.7, 193.0], [14.8, 193.0], [14.9, 193.0], [15.0, 193.0], [15.1, 193.0], [15.2, 193.0], [15.3, 193.0], [15.4, 195.0], [15.5, 195.0], [15.6, 195.0], [15.7, 196.0], [15.8, 196.0], [15.9, 196.0], [16.0, 196.0], [16.1, 196.0], [16.2, 196.0], [16.3, 196.0], [16.4, 197.0], [16.5, 197.0], [16.6, 197.0], [16.7, 198.0], [16.8, 198.0], [16.9, 198.0], [17.0, 199.0], [17.1, 199.0], [17.2, 199.0], [17.3, 199.0], [17.4, 199.0], [17.5, 199.0], [17.6, 199.0], [17.7, 203.0], [17.8, 203.0], [17.9, 203.0], [18.0, 203.0], [18.1, 203.0], [18.2, 203.0], [18.3, 203.0], [18.4, 206.0], [18.5, 206.0], [18.6, 206.0], [18.7, 209.0], [18.8, 209.0], [18.9, 209.0], [19.0, 213.0], [19.1, 213.0], [19.2, 213.0], [19.3, 213.0], [19.4, 213.0], [19.5, 213.0], [19.6, 213.0], [19.7, 214.0], [19.8, 214.0], [19.9, 214.0], [20.0, 230.0], [20.1, 230.0], [20.2, 230.0], [20.3, 230.0], [20.4, 234.0], [20.5, 234.0], [20.6, 234.0], [20.7, 237.0], [20.8, 237.0], [20.9, 237.0], [21.0, 238.0], [21.1, 238.0], [21.2, 238.0], [21.3, 238.0], [21.4, 239.0], [21.5, 239.0], [21.6, 239.0], [21.7, 244.0], [21.8, 244.0], [21.9, 244.0], [22.0, 253.0], [22.1, 253.0], [22.2, 253.0], [22.3, 253.0], [22.4, 273.0], [22.5, 273.0], [22.6, 273.0], [22.7, 274.0], [22.8, 274.0], [22.9, 274.0], [23.0, 282.0], [23.1, 282.0], [23.2, 282.0], [23.3, 282.0], [23.4, 286.0], [23.5, 286.0], [23.6, 286.0], [23.7, 287.0], [23.8, 287.0], [23.9, 287.0], [24.0, 297.0], [24.1, 297.0], [24.2, 297.0], [24.3, 297.0], [24.4, 298.0], [24.5, 298.0], [24.6, 298.0], [24.7, 298.0], [24.8, 298.0], [24.9, 298.0], [25.0, 298.0], [25.1, 298.0], [25.2, 298.0], [25.3, 298.0], [25.4, 298.0], [25.5, 298.0], [25.6, 298.0], [25.7, 298.0], [25.8, 298.0], [25.9, 298.0], [26.0, 299.0], [26.1, 299.0], [26.2, 299.0], [26.3, 299.0], [26.4, 299.0], [26.5, 299.0], [26.6, 299.0], [26.7, 304.0], [26.8, 304.0], [26.9, 304.0], [27.0, 305.0], [27.1, 305.0], [27.2, 305.0], [27.3, 305.0], [27.4, 305.0], [27.5, 305.0], [27.6, 305.0], [27.7, 306.0], [27.8, 306.0], [27.9, 306.0], [28.0, 307.0], [28.1, 307.0], [28.2, 307.0], [28.3, 307.0], [28.4, 307.0], [28.5, 307.0], [28.6, 307.0], [28.7, 308.0], [28.8, 308.0], [28.9, 308.0], [29.0, 308.0], [29.1, 308.0], [29.2, 308.0], [29.3, 308.0], [29.4, 308.0], [29.5, 308.0], [29.6, 308.0], [29.7, 309.0], [29.8, 309.0], [29.9, 309.0], [30.0, 311.0], [30.1, 311.0], [30.2, 311.0], [30.3, 311.0], [30.4, 312.0], [30.5, 312.0], [30.6, 312.0], [30.7, 312.0], [30.8, 312.0], [30.9, 312.0], [31.0, 313.0], [31.1, 313.0], [31.2, 313.0], [31.3, 313.0], [31.4, 313.0], [31.5, 313.0], [31.6, 313.0], [31.7, 314.0], [31.8, 314.0], [31.9, 314.0], [32.0, 315.0], [32.1, 315.0], [32.2, 315.0], [32.3, 315.0], [32.4, 315.0], [32.5, 315.0], [32.6, 315.0], [32.7, 315.0], [32.8, 315.0], [32.9, 315.0], [33.0, 316.0], [33.1, 316.0], [33.2, 316.0], [33.3, 316.0], [33.4, 317.0], [33.5, 317.0], [33.6, 317.0], [33.7, 317.0], [33.8, 317.0], [33.9, 317.0], [34.0, 318.0], [34.1, 318.0], [34.2, 318.0], [34.3, 318.0], [34.4, 319.0], [34.5, 319.0], [34.6, 319.0], [34.7, 320.0], [34.8, 320.0], [34.9, 320.0], [35.0, 321.0], [35.1, 321.0], [35.2, 321.0], [35.3, 321.0], [35.4, 322.0], [35.5, 322.0], [35.6, 322.0], [35.7, 322.0], [35.8, 322.0], [35.9, 322.0], [36.0, 322.0], [36.1, 322.0], [36.2, 322.0], [36.3, 322.0], [36.4, 323.0], [36.5, 323.0], [36.6, 323.0], [36.7, 323.0], [36.8, 323.0], [36.9, 323.0], [37.0, 323.0], [37.1, 323.0], [37.2, 323.0], [37.3, 323.0], [37.4, 323.0], [37.5, 323.0], [37.6, 323.0], [37.7, 323.0], [37.8, 323.0], [37.9, 323.0], [38.0, 324.0], [38.1, 324.0], [38.2, 324.0], [38.3, 324.0], [38.4, 324.0], [38.5, 324.0], [38.6, 324.0], [38.7, 324.0], [38.8, 324.0], [38.9, 324.0], [39.0, 324.0], [39.1, 324.0], [39.2, 324.0], [39.3, 324.0], [39.4, 324.0], [39.5, 324.0], [39.6, 324.0], [39.7, 324.0], [39.8, 324.0], [39.9, 324.0], [40.0, 325.0], [40.1, 325.0], [40.2, 325.0], [40.3, 325.0], [40.4, 327.0], [40.5, 327.0], [40.6, 327.0], [40.7, 327.0], [40.8, 327.0], [40.9, 327.0], [41.0, 328.0], [41.1, 328.0], [41.2, 328.0], [41.3, 328.0], [41.4, 329.0], [41.5, 329.0], [41.6, 329.0], [41.7, 329.0], [41.8, 329.0], [41.9, 329.0], [42.0, 329.0], [42.1, 329.0], [42.2, 329.0], [42.3, 329.0], [42.4, 331.0], [42.5, 331.0], [42.6, 331.0], [42.7, 331.0], [42.8, 331.0], [42.9, 331.0], [43.0, 332.0], [43.1, 332.0], [43.2, 332.0], [43.3, 332.0], [43.4, 333.0], [43.5, 333.0], [43.6, 333.0], [43.7, 333.0], [43.8, 333.0], [43.9, 333.0], [44.0, 334.0], [44.1, 334.0], [44.2, 334.0], [44.3, 334.0], [44.4, 334.0], [44.5, 334.0], [44.6, 334.0], [44.7, 337.0], [44.8, 337.0], [44.9, 337.0], [45.0, 338.0], [45.1, 338.0], [45.2, 338.0], [45.3, 338.0], [45.4, 339.0], [45.5, 339.0], [45.6, 339.0], [45.7, 341.0], [45.8, 341.0], [45.9, 341.0], [46.0, 341.0], [46.1, 341.0], [46.2, 341.0], [46.3, 341.0], [46.4, 342.0], [46.5, 342.0], [46.6, 342.0], [46.7, 342.0], [46.8, 342.0], [46.9, 342.0], [47.0, 342.0], [47.1, 342.0], [47.2, 342.0], [47.3, 342.0], [47.4, 343.0], [47.5, 343.0], [47.6, 343.0], [47.7, 343.0], [47.8, 343.0], [47.9, 343.0], [48.0, 344.0], [48.1, 344.0], [48.2, 344.0], [48.3, 344.0], [48.4, 344.0], [48.5, 344.0], [48.6, 344.0], [48.7, 345.0], [48.8, 345.0], [48.9, 345.0], [49.0, 346.0], [49.1, 346.0], [49.2, 346.0], [49.3, 346.0], [49.4, 347.0], [49.5, 347.0], [49.6, 347.0], [49.7, 347.0], [49.8, 347.0], [49.9, 347.0], [50.0, 347.0], [50.1, 347.0], [50.2, 347.0], [50.3, 347.0], [50.4, 348.0], [50.5, 348.0], [50.6, 348.0], [50.7, 350.0], [50.8, 350.0], [50.9, 350.0], [51.0, 351.0], [51.1, 351.0], [51.2, 351.0], [51.3, 351.0], [51.4, 351.0], [51.5, 351.0], [51.6, 351.0], [51.7, 352.0], [51.8, 352.0], [51.9, 352.0], [52.0, 352.0], [52.1, 352.0], [52.2, 352.0], [52.3, 352.0], [52.4, 353.0], [52.5, 353.0], [52.6, 353.0], [52.7, 353.0], [52.8, 353.0], [52.9, 353.0], [53.0, 354.0], [53.1, 354.0], [53.2, 354.0], [53.3, 354.0], [53.4, 354.0], [53.5, 354.0], [53.6, 354.0], [53.7, 356.0], [53.8, 356.0], [53.9, 356.0], [54.0, 356.0], [54.1, 356.0], [54.2, 356.0], [54.3, 356.0], [54.4, 356.0], [54.5, 356.0], [54.6, 356.0], [54.7, 357.0], [54.8, 357.0], [54.9, 357.0], [55.0, 357.0], [55.1, 357.0], [55.2, 357.0], [55.3, 357.0], [55.4, 359.0], [55.5, 359.0], [55.6, 359.0], [55.7, 359.0], [55.8, 359.0], [55.9, 359.0], [56.0, 359.0], [56.1, 359.0], [56.2, 359.0], [56.3, 359.0], [56.4, 359.0], [56.5, 359.0], [56.6, 359.0], [56.7, 360.0], [56.8, 360.0], [56.9, 360.0], [57.0, 360.0], [57.1, 360.0], [57.2, 360.0], [57.3, 360.0], [57.4, 361.0], [57.5, 361.0], [57.6, 361.0], [57.7, 361.0], [57.8, 361.0], [57.9, 361.0], [58.0, 361.0], [58.1, 361.0], [58.2, 361.0], [58.3, 361.0], [58.4, 361.0], [58.5, 361.0], [58.6, 361.0], [58.7, 362.0], [58.8, 362.0], [58.9, 362.0], [59.0, 362.0], [59.1, 362.0], [59.2, 362.0], [59.3, 362.0], [59.4, 363.0], [59.5, 363.0], [59.6, 363.0], [59.7, 363.0], [59.8, 363.0], [59.9, 363.0], [60.0, 364.0], [60.1, 364.0], [60.2, 364.0], [60.3, 364.0], [60.4, 364.0], [60.5, 364.0], [60.6, 364.0], [60.7, 364.0], [60.8, 364.0], [60.9, 364.0], [61.0, 365.0], [61.1, 365.0], [61.2, 365.0], [61.3, 365.0], [61.4, 365.0], [61.5, 365.0], [61.6, 365.0], [61.7, 366.0], [61.8, 366.0], [61.9, 366.0], [62.0, 366.0], [62.1, 366.0], [62.2, 366.0], [62.3, 366.0], [62.4, 367.0], [62.5, 367.0], [62.6, 367.0], [62.7, 368.0], [62.8, 368.0], [62.9, 368.0], [63.0, 368.0], [63.1, 368.0], [63.2, 368.0], [63.3, 368.0], [63.4, 371.0], [63.5, 371.0], [63.6, 371.0], [63.7, 372.0], [63.8, 372.0], [63.9, 372.0], [64.0, 374.0], [64.1, 374.0], [64.2, 374.0], [64.3, 374.0], [64.4, 376.0], [64.5, 376.0], [64.6, 376.0], [64.7, 377.0], [64.8, 377.0], [64.9, 377.0], [65.0, 378.0], [65.1, 378.0], [65.2, 378.0], [65.3, 378.0], [65.4, 383.0], [65.5, 383.0], [65.6, 383.0], [65.7, 386.0], [65.8, 386.0], [65.9, 386.0], [66.0, 395.0], [66.1, 395.0], [66.2, 395.0], [66.3, 395.0], [66.4, 397.0], [66.5, 397.0], [66.6, 397.0], [66.7, 397.0], [66.8, 397.0], [66.9, 397.0], [67.0, 399.0], [67.1, 399.0], [67.2, 399.0], [67.3, 399.0], [67.4, 399.0], [67.5, 399.0], [67.6, 399.0], [67.7, 405.0], [67.8, 405.0], [67.9, 405.0], [68.0, 414.0], [68.1, 414.0], [68.2, 414.0], [68.3, 414.0], [68.4, 420.0], [68.5, 420.0], [68.6, 420.0], [68.7, 421.0], [68.8, 421.0], [68.9, 421.0], [69.0, 432.0], [69.1, 432.0], [69.2, 432.0], [69.3, 432.0], [69.4, 439.0], [69.5, 439.0], [69.6, 439.0], [69.7, 449.0], [69.8, 449.0], [69.9, 449.0], [70.0, 460.0], [70.1, 460.0], [70.2, 460.0], [70.3, 460.0], [70.4, 461.0], [70.5, 461.0], [70.6, 461.0], [70.7, 461.0], [70.8, 461.0], [70.9, 461.0], [71.0, 464.0], [71.1, 464.0], [71.2, 464.0], [71.3, 464.0], [71.4, 475.0], [71.5, 475.0], [71.6, 475.0], [71.7, 506.0], [71.8, 506.0], [71.9, 506.0], [72.0, 507.0], [72.1, 507.0], [72.2, 507.0], [72.3, 507.0], [72.4, 532.0], [72.5, 532.0], [72.6, 532.0], [72.7, 618.0], [72.8, 618.0], [72.9, 618.0], [73.0, 633.0], [73.1, 633.0], [73.2, 633.0], [73.3, 633.0], [73.4, 633.0], [73.5, 633.0], [73.6, 633.0], [73.7, 635.0], [73.8, 635.0], [73.9, 635.0], [74.0, 635.0], [74.1, 635.0], [74.2, 635.0], [74.3, 635.0], [74.4, 636.0], [74.5, 636.0], [74.6, 636.0], [74.7, 668.0], [74.8, 668.0], [74.9, 668.0], [75.0, 670.0], [75.1, 670.0], [75.2, 670.0], [75.3, 670.0], [75.4, 670.0], [75.5, 670.0], [75.6, 670.0], [75.7, 671.0], [75.8, 671.0], [75.9, 671.0], [76.0, 678.0], [76.1, 678.0], [76.2, 678.0], [76.3, 678.0], [76.4, 734.0], [76.5, 734.0], [76.6, 734.0], [76.7, 734.0], [76.8, 734.0], [76.9, 734.0], [77.0, 739.0], [77.1, 739.0], [77.2, 739.0], [77.3, 739.0], [77.4, 742.0], [77.5, 742.0], [77.6, 742.0], [77.7, 748.0], [77.8, 748.0], [77.9, 748.0], [78.0, 769.0], [78.1, 769.0], [78.2, 769.0], [78.3, 769.0], [78.4, 770.0], [78.5, 770.0], [78.6, 770.0], [78.7, 772.0], [78.8, 772.0], [78.9, 772.0], [79.0, 804.0], [79.1, 804.0], [79.2, 804.0], [79.3, 804.0], [79.4, 838.0], [79.5, 838.0], [79.6, 838.0], [79.7, 840.0], [79.8, 840.0], [79.9, 840.0], [80.0, 840.0], [80.1, 840.0], [80.2, 840.0], [80.3, 840.0], [80.4, 841.0], [80.5, 841.0], [80.6, 841.0], [80.7, 844.0], [80.8, 844.0], [80.9, 844.0], [81.0, 848.0], [81.1, 848.0], [81.2, 848.0], [81.3, 848.0], [81.4, 848.0], [81.5, 848.0], [81.6, 848.0], [81.7, 849.0], [81.8, 849.0], [81.9, 849.0], [82.0, 849.0], [82.1, 849.0], [82.2, 849.0], [82.3, 849.0], [82.4, 854.0], [82.5, 854.0], [82.6, 854.0], [82.7, 854.0], [82.8, 854.0], [82.9, 854.0], [83.0, 854.0], [83.1, 854.0], [83.2, 854.0], [83.3, 854.0], [83.4, 855.0], [83.5, 855.0], [83.6, 855.0], [83.7, 856.0], [83.8, 856.0], [83.9, 856.0], [84.0, 857.0], [84.1, 857.0], [84.2, 857.0], [84.3, 857.0], [84.4, 871.0], [84.5, 871.0], [84.6, 871.0], [84.7, 875.0], [84.8, 875.0], [84.9, 875.0], [85.0, 883.0], [85.1, 883.0], [85.2, 883.0], [85.3, 883.0], [85.4, 886.0], [85.5, 886.0], [85.6, 886.0], [85.7, 924.0], [85.8, 924.0], [85.9, 924.0], [86.0, 1424.0], [86.1, 1424.0], [86.2, 1424.0], [86.3, 1424.0], [86.4, 1428.0], [86.5, 1428.0], [86.6, 1428.0], [86.7, 1483.0], [86.8, 1483.0], [86.9, 1483.0], [87.0, 1485.0], [87.1, 1485.0], [87.2, 1485.0], [87.3, 1485.0], [87.4, 1486.0], [87.5, 1486.0], [87.6, 1486.0], [87.7, 1756.0], [87.8, 1756.0], [87.9, 1756.0], [88.0, 1756.0], [88.1, 1756.0], [88.2, 1756.0], [88.3, 1756.0], [88.4, 1757.0], [88.5, 1757.0], [88.6, 1757.0], [88.7, 1757.0], [88.8, 1757.0], [88.9, 1757.0], [89.0, 1760.0], [89.1, 1760.0], [89.2, 1760.0], [89.3, 1760.0], [89.4, 1761.0], [89.5, 1761.0], [89.6, 1761.0], [89.7, 1761.0], [89.8, 1761.0], [89.9, 1761.0], [90.0, 1761.0], [90.1, 1761.0], [90.2, 1761.0], [90.3, 1761.0], [90.4, 1762.0], [90.5, 1762.0], [90.6, 1762.0], [90.7, 1764.0], [90.8, 1764.0], [90.9, 1764.0], [91.0, 1782.0], [91.1, 1782.0], [91.2, 1782.0], [91.3, 1782.0], [91.4, 2367.0], [91.5, 2367.0], [91.6, 2367.0], [91.7, 2372.0], [91.8, 2372.0], [91.9, 2372.0], [92.0, 2373.0], [92.1, 2373.0], [92.2, 2373.0], [92.3, 2373.0], [92.4, 2439.0], [92.5, 2439.0], [92.6, 2439.0], [92.7, 2782.0], [92.8, 2782.0], [92.9, 2782.0], [93.0, 2786.0], [93.1, 2786.0], [93.2, 2786.0], [93.3, 2786.0], [93.4, 2788.0], [93.5, 2788.0], [93.6, 2788.0], [93.7, 2790.0], [93.8, 2790.0], [93.9, 2790.0], [94.0, 2792.0], [94.1, 2792.0], [94.2, 2792.0], [94.3, 2792.0], [94.4, 2793.0], [94.5, 2793.0], [94.6, 2793.0], [94.7, 2795.0], [94.8, 2795.0], [94.9, 2795.0], [95.0, 2796.0], [95.1, 2796.0], [95.2, 2796.0], [95.3, 2796.0], [95.4, 2803.0], [95.5, 2803.0], [95.6, 2803.0], [95.7, 2809.0], [95.8, 2809.0], [95.9, 2809.0], [96.0, 3422.0], [96.1, 3422.0], [96.2, 3422.0], [96.3, 3422.0], [96.4, 4354.0], [96.5, 4354.0], [96.6, 4354.0], [96.7, 4355.0], [96.8, 4355.0], [96.9, 4355.0], [97.0, 4355.0], [97.1, 4355.0], [97.2, 4355.0], [97.3, 4355.0], [97.4, 4360.0], [97.5, 4360.0], [97.6, 4360.0], [97.7, 4362.0], [97.8, 4362.0], [97.9, 4362.0], [98.0, 4365.0], [98.1, 4365.0], [98.2, 4365.0], [98.3, 4365.0], [98.4, 4373.0], [98.5, 4373.0], [98.6, 4373.0], [98.7, 4376.0], [98.8, 4376.0], [98.9, 4376.0], [99.0, 4377.0], [99.1, 4377.0], [99.2, 4377.0], [99.3, 4377.0], [99.4, 4378.0], [99.5, 4378.0], [99.6, 4378.0], [99.7, 4383.0], [99.8, 4383.0], [99.9, 4383.0]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 145.0, "series": [{"data": [[0.0, 54.0], [1100.0, 20.0], [2400.0, 14.0], [2500.0, 15.0], [3000.0, 15.0], [100.0, 145.0], [3400.0, 11.0], [3500.0, 15.0], [3900.0, 11.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[63200.0, 51.0], [63500.0, 34.0], [63600.0, 15.0], [63700.0, 11.0], [68900.0, 4.0], [72800.0, 4.0], [73300.0, 1.0], [73000.0, 5.0], [74300.0, 2.0], [74700.0, 4.0], [75100.0, 1.0], [75500.0, 51.0], [75400.0, 109.0], [120000.0, 8.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[2300.0, 3.0], [600.0, 11.0], [2400.0, 1.0], [700.0, 8.0], [2800.0, 2.0], [2700.0, 8.0], [200.0, 27.0], [800.0, 20.0], [3400.0, 1.0], [900.0, 1.0], [4300.0, 11.0], [300.0, 123.0], [1400.0, 5.0], [100.0, 53.0], [400.0, 12.0], [1700.0, 11.0], [500.0, 3.0]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 120000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 8.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1 500ms"], [2, "Requests having \nresponse time > 1 500ms"], [3, "Requests in error"]], "maxY": 414.0, "series": [{"data": [[0.0, 414.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 68.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1 500ms", "isController": false}, {"data": [[2.0, 410.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1 500ms", "isController": false}, {"data": [[3.0, 8.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 7.75, "minX": 1.608742735E12, "maxY": 300.0, "series": [{"data": [[1.608742742E12, 300.0], [1.608742743E12, 300.0], [1.608742807E12, 199.63636363636363], [1.608742808E12, 188.2], [1.608742809E12, 184.0], [1.60874281E12, 171.09090909090907], [1.608742811E12, 75.53435114503816], [1.608742855E12, 7.75], [1.608742735E12, 249.99776286353446], [1.608742799E12, 300.0], [1.608742736E12, 300.0], [1.6087428E12, 278.4210526315789], [1.608742737E12, 300.0], [1.608742801E12, 257.87500000000006], [1.608742738E12, 300.0], [1.608742739E12, 300.0], [1.608742803E12, 235.60000000000002], [1.60874274E12, 300.0], [1.608742804E12, 220.73333333333332], [1.608742741E12, 300.0], [1.608742805E12, 207.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608742855E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 82.0, "minX": 6.0, "maxY": 120081.0, "series": [{"data": [[173.0, 82.0], [175.0, 82.75], [176.0, 83.25], [177.0, 84.75], [181.0, 83.66666666666667], [182.0, 82.875], [189.0, 87.6], [190.0, 93.0], [196.0, 89.0], [197.0, 92.11111111111111], [203.0, 98.5], [204.0, 93.0], [205.0, 98.2], [214.0, 99.875], [231.0, 131.79999999999998], [258.0, 192.14285714285717], [259.0, 182.0], [269.0, 179.0], [271.0, 161.45454545454547], [279.0, 106.0], [281.0, 107.33333333333333], [300.0, 1494.8186528497408]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[271.5266666666666, 1003.996666666667]], "isOverall": false, "label": "GET /login-Aggregated", "isController": false}, {"data": [[6.0, 120081.0], [8.0, 120077.42857142858], [9.0, 68959.0], [10.0, 68955.0], [14.0, 70989.75], [19.0, 73773.4], [20.0, 75430.0], [24.0, 75440.25], [29.0, 75450.8], [30.0, 75459.0], [34.0, 75454.75], [39.0, 75449.2], [40.0, 75439.0], [44.0, 75442.75], [49.0, 75462.2], [50.0, 75449.0], [54.0, 75442.0], [59.0, 75441.2], [60.0, 75462.0], [67.0, 75444.5], [64.0, 75454.25], [70.0, 75429.0], [69.0, 75442.33333333333], [74.0, 75457.0], [73.0, 75457.0], [79.0, 75447.8], [83.0, 75444.0], [80.0, 75445.0], [87.0, 75435.0], [84.0, 75443.0], [90.0, 75418.0], [89.0, 75431.5], [88.0, 75433.0], [99.0, 75495.375], [98.0, 75479.0], [103.0, 75477.66666666667], [100.0, 75482.0], [104.0, 75474.0], [110.0, 75460.0], [109.0, 75472.0], [114.0, 75451.5], [119.0, 75457.2], [122.0, 75480.5], [120.0, 75452.0], [124.0, 75439.5], [135.0, 75505.0], [134.0, 75486.66666666667], [131.0, 75471.0], [130.0, 75481.0], [129.0, 75487.0], [139.0, 75493.0], [138.0, 75511.0], [149.0, 75512.0], [156.0, 75510.0], [152.0, 75504.75], [174.0, 75518.0], [173.0, 75505.0], [172.0, 75505.0], [169.0, 75504.5], [183.0, 74735.5], [179.0, 75154.0], [178.0, 75544.23076923078], [177.0, 75537.0], [189.0, 72801.5], [185.0, 73394.0], [184.0, 74326.0], [199.0, 63764.0], [198.0, 63767.0], [207.0, 63272.85714285714], [200.0, 63764.75], [222.0, 63581.125], [220.0, 63584.5], [219.0, 63585.0], [218.0, 63586.5], [237.0, 63661.44444444445], [233.0, 63663.0], [236.0, 63662.0], [254.0, 63279.0], [255.0, 63280.5], [261.0, 63279.666666666664], [260.0, 63278.0], [258.0, 63276.5], [257.0, 63274.5], [256.0, 63285.0], [280.0, 63522.666666666664], [277.0, 63527.0], [276.0, 63526.0], [275.0, 63525.0], [274.0, 63524.0], [300.0, 63204.65000000001]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[155.26333333333335, 72025.55999999998]], "isOverall": false, "label": "POST /graphql - Login-Aggregated", "isController": false}, {"data": [[145.0, 222.5], [147.0, 184.57142857142858], [152.0, 179.1111111111111], [153.0, 167.5], [157.0, 220.0], [159.0, 241.0], [156.0, 221.5], [163.0, 254.75], [165.0, 235.16666666666666], [166.0, 213.75], [171.0, 295.1666666666667], [177.0, 178.33333333333334], [178.0, 277.0], [182.0, 188.0], [184.0, 180.5], [185.0, 345.25], [186.0, 398.0], [191.0, 303.12499999999994], [197.0, 321.0], [198.0, 200.66666666666666], [207.0, 335.5], [208.0, 432.0], [219.0, 237.0], [220.0, 406.33333333333337], [245.0, 415.5], [247.0, 298.0], [261.0, 333.0], [262.0, 384.0], [264.0, 532.6666666666667], [275.0, 349.0], [276.0, 657.25], [281.0, 356.25], [284.0, 355.5], [285.0, 350.5], [287.0, 510.5], [296.0, 370.0], [297.0, 362.5], [298.0, 600.3333333333334], [300.0, 1113.0476190476193]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[253.9699999999999, 707.3266666666666]], "isOverall": false, "label": "GET /-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.608742735E12, "maxY": 1127652.0, "series": [{"data": [[1.608742742E12, 22660.0], [1.608742743E12, 22660.0], [1.608742807E12, 8888.0], [1.608742808E12, 7225.0], [1.608742809E12, 1445.0], [1.60874281E12, 63580.0], [1.608742811E12, 189295.0], [1.608742855E12, 16576.0], [1.608742735E12, 1127652.0], [1.608742799E12, 16160.0], [1.608742736E12, 43410.0], [1.6087428E12, 15352.0], [1.608742737E12, 84610.0], [1.608742801E12, 19392.0], [1.608742738E12, 91574.0], [1.608742739E12, 30900.0], [1.608742803E12, 12120.0], [1.60874274E12, 31834.0], [1.608742804E12, 12120.0], [1.608742741E12, 30900.0], [1.608742805E12, 5656.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.608742742E12, 1342.0], [1.608742743E12, 1342.0], [1.608742807E12, 7777.0], [1.608742808E12, 3535.0], [1.608742809E12, 707.0], [1.60874281E12, 31108.0], [1.608742811E12, 92617.0], [1.608742855E12, 0.0], [1.608742735E12, 53294.0], [1.608742799E12, 14140.0], [1.608742736E12, 1755.0], [1.6087428E12, 13433.0], [1.608742737E12, 4195.0], [1.608742801E12, 16968.0], [1.608742738E12, 4825.0], [1.608742739E12, 1830.0], [1.608742803E12, 10605.0], [1.60874274E12, 1287.0], [1.608742804E12, 10605.0], [1.608742741E12, 1830.0], [1.608742805E12, 4949.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608742855E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 126.63316582914578, "minX": 1.608742735E12, "maxY": 120077.875, "series": [{"data": [[1.608742742E12, 3958.5454545454545], [1.608742743E12, 3403.0], [1.608742735E12, 126.63316582914578], [1.608742737E12, 1183.6499999999999], [1.608742738E12, 2489.0689655172423], [1.608742739E12, 3026.333333333333], [1.608742741E12, 3584.733333333333]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.608742807E12, 63764.818181818184], [1.608742808E12, 72920.0], [1.608742809E12, 74326.0], [1.608742799E12, 63204.65000000001], [1.60874281E12, 75444.27272727272], [1.6087428E12, 63523.78947368421], [1.608742811E12, 75158.95419847325], [1.608742801E12, 63279.37500000001], [1.608742855E12, 120077.875], [1.608742803E12, 63662.0], [1.608742804E12, 63583.0], [1.608742805E12, 63272.85714285714]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.608742735E12, 355.22580645161264], [1.608742736E12, 1052.0], [1.608742737E12, 1928.5333333333333], [1.608742738E12, 2850.5454545454545], [1.60874274E12, 4367.090909090909]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608742855E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.608742735E12, "maxY": 75444.18181818181, "series": [{"data": [[1.608742742E12, 3958.5454545454545], [1.608742743E12, 3403.0], [1.608742735E12, 126.57286432160808], [1.608742737E12, 1183.6499999999999], [1.608742738E12, 2489.034482758621], [1.608742739E12, 3026.2666666666664], [1.608742741E12, 3584.733333333333]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.608742807E12, 63764.818181818184], [1.608742808E12, 72919.8], [1.608742809E12, 74326.0], [1.608742799E12, 63204.45], [1.60874281E12, 75444.18181818181], [1.6087428E12, 63523.78947368421], [1.608742811E12, 75158.89312977096], [1.608742801E12, 63279.37500000001], [1.608742855E12, 0.0], [1.608742803E12, 63661.933333333334], [1.608742804E12, 63583.0], [1.608742805E12, 63272.85714285714]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.608742735E12, 354.9112903225806], [1.608742736E12, 1051.5333333333335], [1.608742737E12, 1928.5333333333333], [1.608742738E12, 2850.5454545454545], [1.60874274E12, 4366.909090909091]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608742855E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.608742735E12, "maxY": 53.46666666666667, "series": [{"data": [[1.608742742E12, 0.0], [1.608742743E12, 0.0], [1.608742735E12, 0.0], [1.608742737E12, 0.0], [1.608742738E12, 0.0], [1.608742739E12, 0.0], [1.608742741E12, 0.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.608742807E12, 0.0], [1.608742808E12, 0.0], [1.608742809E12, 0.0], [1.608742799E12, 0.0], [1.60874281E12, 0.0], [1.6087428E12, 0.0], [1.608742811E12, 0.0], [1.608742801E12, 0.0], [1.608742855E12, 0.0], [1.608742803E12, 0.0], [1.608742804E12, 0.0], [1.608742805E12, 0.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.608742735E12, 51.7056451612903], [1.608742736E12, 53.46666666666667], [1.608742737E12, 43.93333333333334], [1.608742738E12, 42.363636363636374], [1.60874274E12, 40.36363636363636]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608742855E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 82.0, "minX": 1.608742735E12, "maxY": 75563.0, "series": [{"data": [[1.608742742E12, 3961.0], [1.608742743E12, 3406.0], [1.608742807E12, 63767.0], [1.608742808E12, 73394.0], [1.608742809E12, 74326.0], [1.60874281E12, 75563.0], [1.608742811E12, 75522.0], [1.608742735E12, 924.0], [1.608742799E12, 63209.0], [1.608742736E12, 1486.0], [1.6087428E12, 63528.0], [1.608742737E12, 2439.0], [1.608742801E12, 63285.0], [1.608742738E12, 3422.0], [1.608742739E12, 3029.0], [1.608742803E12, 63665.0], [1.60874274E12, 4383.0], [1.608742804E12, 63587.0], [1.608742741E12, 3588.0], [1.608742805E12, 63274.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.608742742E12, 3961.0], [1.608742743E12, 3405.8], [1.608742807E12, 63766.8], [1.608742808E12, 73394.0], [1.608742809E12, 74326.0], [1.60874281E12, 75553.0], [1.608742811E12, 75503.0], [1.608742735E12, 406.7999999999999], [1.608742799E12, 63207.9], [1.608742736E12, 1485.4], [1.6087428E12, 63527.0], [1.608742737E12, 2369.0], [1.608742801E12, 63284.0], [1.608742738E12, 2795.9], [1.608742739E12, 3029.0], [1.608742803E12, 63663.8], [1.60874274E12, 4382.0], [1.608742804E12, 63586.4], [1.608742741E12, 3588.0], [1.608742805E12, 63274.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.608742742E12, 3961.0], [1.608742743E12, 3406.0], [1.608742807E12, 63767.0], [1.608742808E12, 73394.0], [1.608742809E12, 74326.0], [1.60874281E12, 75563.0], [1.608742811E12, 75521.68], [1.608742735E12, 873.0799999999999], [1.608742799E12, 63209.0], [1.608742736E12, 1486.0], [1.6087428E12, 63528.0], [1.608742737E12, 2439.0], [1.608742801E12, 63285.0], [1.608742738E12, 3422.0], [1.608742739E12, 3029.0], [1.608742803E12, 63665.0], [1.60874274E12, 4383.0], [1.608742804E12, 63587.0], [1.608742741E12, 3588.0], [1.608742805E12, 63274.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.608742742E12, 3961.0], [1.608742743E12, 3406.0], [1.608742807E12, 63767.0], [1.608742808E12, 73394.0], [1.608742809E12, 74326.0], [1.60874281E12, 75553.75], [1.608742811E12, 75506.0], [1.608742735E12, 670.0], [1.608742799E12, 63208.95], [1.608742736E12, 1486.0], [1.6087428E12, 63528.0], [1.608742737E12, 2386.2], [1.608742801E12, 63285.0], [1.608742738E12, 2808.7], [1.608742739E12, 3029.0], [1.608742803E12, 63665.0], [1.60874274E12, 4383.0], [1.608742804E12, 63587.0], [1.608742741E12, 3588.0], [1.608742805E12, 63274.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.608742742E12, 3956.0], [1.608742743E12, 3401.0], [1.608742807E12, 63763.0], [1.608742808E12, 72800.0], [1.608742809E12, 74326.0], [1.60874281E12, 74735.0], [1.608742811E12, 68953.0], [1.608742735E12, 82.0], [1.608742799E12, 63202.0], [1.608742736E12, 838.0], [1.6087428E12, 63519.0], [1.608742737E12, 1171.0], [1.608742801E12, 63274.0], [1.608742738E12, 2467.0], [1.608742739E12, 3022.0], [1.608742803E12, 63657.0], [1.60874274E12, 4354.0], [1.608742804E12, 63580.0], [1.608742741E12, 3581.0], [1.608742805E12, 63271.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.608742742E12, 3958.0], [1.608742743E12, 3404.0], [1.608742807E12, 63765.0], [1.608742808E12, 72801.0], [1.608742809E12, 74326.0], [1.60874281E12, 75519.5], [1.608742811E12, 75454.0], [1.608742735E12, 187.0], [1.608742799E12, 63204.0], [1.608742736E12, 854.0], [1.6087428E12, 63525.0], [1.608742737E12, 1190.0], [1.608742801E12, 63279.0], [1.608742738E12, 2502.0], [1.608742739E12, 3026.0], [1.608742803E12, 63662.0], [1.60874274E12, 4365.0], [1.608742804E12, 63582.0], [1.608742741E12, 3585.0], [1.608742805E12, 63273.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608742811E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 187.0, "minX": 1.0, "maxY": 120078.0, "series": [{"data": [[131.0, 75454.0], [35.0, 1190.0], [40.0, 2502.0], [11.0, 4157.5], [44.0, 75519.5], [15.0, 3585.0], [1.0, 74326.0], [19.0, 63525.0], [20.0, 63204.0], [5.0, 72801.0], [24.0, 63279.0], [447.0, 187.0], [7.0, 63273.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 120078.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 447.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 75519.5, "series": [{"data": [[131.0, 75454.0], [35.0, 1190.0], [40.0, 2502.0], [11.0, 4157.5], [44.0, 75519.5], [15.0, 3585.0], [1.0, 74326.0], [19.0, 63525.0], [20.0, 63204.0], [5.0, 72801.0], [24.0, 63279.0], [447.0, 187.0], [7.0, 63273.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 447.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 11.0, "minX": 1.608742735E12, "maxY": 747.0, "series": [{"data": [[1.608742742E12, 11.0], [1.608742743E12, 11.0], [1.608742735E12, 747.0], [1.608742736E12, 15.0], [1.608742737E12, 35.0], [1.608742738E12, 40.0], [1.608742739E12, 15.0], [1.60874274E12, 11.0], [1.608742741E12, 15.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608742743E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.608742735E12, "maxY": 447.0, "series": [{"data": [[1.608742742E12, 11.0], [1.608742743E12, 11.0], [1.608742807E12, 11.0], [1.608742808E12, 5.0], [1.608742809E12, 1.0], [1.60874281E12, 44.0], [1.608742811E12, 131.0], [1.608742735E12, 447.0], [1.608742799E12, 20.0], [1.608742736E12, 15.0], [1.6087428E12, 19.0], [1.608742737E12, 35.0], [1.608742801E12, 24.0], [1.608742738E12, 40.0], [1.608742739E12, 15.0], [1.608742803E12, 15.0], [1.60874274E12, 11.0], [1.608742804E12, 15.0], [1.608742741E12, 15.0], [1.608742805E12, 7.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.608742855E12, 8.0]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608742855E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.608742735E12, "maxY": 248.0, "series": [{"data": [[1.608742735E12, 248.0], [1.608742736E12, 15.0], [1.608742737E12, 15.0], [1.608742738E12, 11.0], [1.60874274E12, 11.0]], "isOverall": false, "label": "GET /-success", "isController": false}, {"data": [[1.608742807E12, 11.0], [1.608742808E12, 5.0], [1.608742809E12, 1.0], [1.608742799E12, 20.0], [1.60874281E12, 44.0], [1.6087428E12, 19.0], [1.608742811E12, 131.0], [1.608742801E12, 24.0], [1.608742803E12, 15.0], [1.608742804E12, 15.0], [1.608742805E12, 7.0]], "isOverall": false, "label": "POST /graphql - Login-success", "isController": false}, {"data": [[1.608742855E12, 8.0]], "isOverall": false, "label": "POST /graphql - Login-failure", "isController": false}, {"data": [[1.608742742E12, 11.0], [1.608742743E12, 11.0], [1.608742735E12, 199.0], [1.608742737E12, 20.0], [1.608742738E12, 29.0], [1.608742739E12, 15.0], [1.608742741E12, 15.0]], "isOverall": false, "label": "GET /login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608742855E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.608742735E12, "maxY": 447.0, "series": [{"data": [[1.608742742E12, 11.0], [1.608742743E12, 11.0], [1.608742807E12, 11.0], [1.608742808E12, 5.0], [1.608742809E12, 1.0], [1.60874281E12, 44.0], [1.608742811E12, 131.0], [1.608742735E12, 447.0], [1.608742799E12, 20.0], [1.608742736E12, 15.0], [1.6087428E12, 19.0], [1.608742737E12, 35.0], [1.608742801E12, 24.0], [1.608742738E12, 40.0], [1.608742739E12, 15.0], [1.608742803E12, 15.0], [1.60874274E12, 11.0], [1.608742804E12, 15.0], [1.608742741E12, 15.0], [1.608742805E12, 7.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.608742855E12, 8.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608742855E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

