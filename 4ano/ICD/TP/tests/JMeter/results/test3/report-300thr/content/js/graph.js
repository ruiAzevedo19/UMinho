/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 65.0, "minX": 0.0, "maxY": 78751.0, "series": [{"data": [[0.0, 65.0], [0.1, 65.0], [0.2, 65.0], [0.3, 65.0], [0.4, 65.0], [0.5, 65.0], [0.6, 65.0], [0.7, 66.0], [0.8, 66.0], [0.9, 66.0], [1.0, 66.0], [1.1, 66.0], [1.2, 66.0], [1.3, 66.0], [1.4, 66.0], [1.5, 66.0], [1.6, 66.0], [1.7, 66.0], [1.8, 66.0], [1.9, 66.0], [2.0, 67.0], [2.1, 67.0], [2.2, 67.0], [2.3, 67.0], [2.4, 77.0], [2.5, 77.0], [2.6, 77.0], [2.7, 78.0], [2.8, 78.0], [2.9, 78.0], [3.0, 78.0], [3.1, 78.0], [3.2, 78.0], [3.3, 78.0], [3.4, 78.0], [3.5, 78.0], [3.6, 78.0], [3.7, 78.0], [3.8, 78.0], [3.9, 78.0], [4.0, 79.0], [4.1, 79.0], [4.2, 79.0], [4.3, 79.0], [4.4, 84.0], [4.5, 84.0], [4.6, 84.0], [4.7, 86.0], [4.8, 86.0], [4.9, 86.0], [5.0, 86.0], [5.1, 86.0], [5.2, 86.0], [5.3, 86.0], [5.4, 88.0], [5.5, 88.0], [5.6, 88.0], [5.7, 88.0], [5.8, 88.0], [5.9, 88.0], [6.0, 89.0], [6.1, 89.0], [6.2, 89.0], [6.3, 89.0], [6.4, 89.0], [6.5, 89.0], [6.6, 89.0], [6.7, 89.0], [6.8, 89.0], [6.9, 89.0], [7.0, 90.0], [7.1, 90.0], [7.2, 90.0], [7.3, 90.0], [7.4, 91.0], [7.5, 91.0], [7.6, 91.0], [7.7, 91.0], [7.8, 91.0], [7.9, 91.0], [8.0, 91.0], [8.1, 91.0], [8.2, 91.0], [8.3, 91.0], [8.4, 92.0], [8.5, 92.0], [8.6, 92.0], [8.7, 93.0], [8.8, 93.0], [8.9, 93.0], [9.0, 95.0], [9.1, 95.0], [9.2, 95.0], [9.3, 95.0], [9.4, 98.0], [9.5, 98.0], [9.6, 98.0], [9.7, 100.0], [9.8, 100.0], [9.9, 100.0], [10.0, 100.0], [10.1, 101.0], [10.2, 101.0], [10.3, 101.0], [10.4, 101.0], [10.5, 101.0], [10.6, 101.0], [10.7, 104.0], [10.8, 104.0], [10.9, 104.0], [11.0, 104.0], [11.1, 112.0], [11.2, 112.0], [11.3, 112.0], [11.4, 113.0], [11.5, 113.0], [11.6, 113.0], [11.7, 115.0], [11.8, 115.0], [11.9, 115.0], [12.0, 115.0], [12.1, 116.0], [12.2, 116.0], [12.3, 116.0], [12.4, 116.0], [12.5, 116.0], [12.6, 116.0], [12.7, 116.0], [12.8, 116.0], [12.9, 116.0], [13.0, 116.0], [13.1, 116.0], [13.2, 116.0], [13.3, 116.0], [13.4, 117.0], [13.5, 117.0], [13.6, 117.0], [13.7, 117.0], [13.8, 117.0], [13.9, 117.0], [14.0, 117.0], [14.1, 117.0], [14.2, 117.0], [14.3, 117.0], [14.4, 117.0], [14.5, 117.0], [14.6, 117.0], [14.7, 117.0], [14.8, 117.0], [14.9, 117.0], [15.0, 117.0], [15.1, 117.0], [15.2, 117.0], [15.3, 117.0], [15.4, 117.0], [15.5, 117.0], [15.6, 117.0], [15.7, 117.0], [15.8, 117.0], [15.9, 117.0], [16.0, 117.0], [16.1, 118.0], [16.2, 118.0], [16.3, 118.0], [16.4, 118.0], [16.5, 118.0], [16.6, 118.0], [16.7, 118.0], [16.8, 118.0], [16.9, 118.0], [17.0, 118.0], [17.1, 118.0], [17.2, 118.0], [17.3, 118.0], [17.4, 118.0], [17.5, 118.0], [17.6, 118.0], [17.7, 118.0], [17.8, 118.0], [17.9, 118.0], [18.0, 118.0], [18.1, 118.0], [18.2, 118.0], [18.3, 118.0], [18.4, 119.0], [18.5, 119.0], [18.6, 119.0], [18.7, 119.0], [18.8, 119.0], [18.9, 119.0], [19.0, 119.0], [19.1, 119.0], [19.2, 119.0], [19.3, 119.0], [19.4, 121.0], [19.5, 121.0], [19.6, 121.0], [19.7, 122.0], [19.8, 122.0], [19.9, 122.0], [20.0, 124.0], [20.1, 124.0], [20.2, 124.0], [20.3, 124.0], [20.4, 124.0], [20.5, 124.0], [20.6, 124.0], [20.7, 124.0], [20.8, 124.0], [20.9, 124.0], [21.0, 124.0], [21.1, 124.0], [21.2, 124.0], [21.3, 124.0], [21.4, 125.0], [21.5, 125.0], [21.6, 125.0], [21.7, 125.0], [21.8, 125.0], [21.9, 125.0], [22.0, 125.0], [22.1, 125.0], [22.2, 125.0], [22.3, 125.0], [22.4, 125.0], [22.5, 125.0], [22.6, 125.0], [22.7, 125.0], [22.8, 125.0], [22.9, 125.0], [23.0, 126.0], [23.1, 126.0], [23.2, 126.0], [23.3, 126.0], [23.4, 126.0], [23.5, 126.0], [23.6, 126.0], [23.7, 126.0], [23.8, 126.0], [23.9, 126.0], [24.0, 127.0], [24.1, 127.0], [24.2, 127.0], [24.3, 127.0], [24.4, 127.0], [24.5, 127.0], [24.6, 127.0], [24.7, 127.0], [24.8, 127.0], [24.9, 127.0], [25.0, 128.0], [25.1, 128.0], [25.2, 128.0], [25.3, 128.0], [25.4, 128.0], [25.5, 128.0], [25.6, 128.0], [25.7, 129.0], [25.8, 129.0], [25.9, 129.0], [26.0, 129.0], [26.1, 129.0], [26.2, 129.0], [26.3, 129.0], [26.4, 129.0], [26.5, 129.0], [26.6, 129.0], [26.7, 130.0], [26.8, 130.0], [26.9, 130.0], [27.0, 130.0], [27.1, 130.0], [27.2, 130.0], [27.3, 130.0], [27.4, 130.0], [27.5, 130.0], [27.6, 130.0], [27.7, 130.0], [27.8, 130.0], [27.9, 130.0], [28.0, 130.0], [28.1, 130.0], [28.2, 130.0], [28.3, 130.0], [28.4, 130.0], [28.5, 130.0], [28.6, 130.0], [28.7, 130.0], [28.8, 130.0], [28.9, 130.0], [29.0, 130.0], [29.1, 130.0], [29.2, 130.0], [29.3, 130.0], [29.4, 131.0], [29.5, 131.0], [29.6, 131.0], [29.7, 132.0], [29.8, 132.0], [29.9, 132.0], [30.0, 132.0], [30.1, 132.0], [30.2, 132.0], [30.3, 132.0], [30.4, 132.0], [30.5, 132.0], [30.6, 132.0], [30.7, 132.0], [30.8, 132.0], [30.9, 132.0], [31.0, 132.0], [31.1, 132.0], [31.2, 132.0], [31.3, 132.0], [31.4, 132.0], [31.5, 132.0], [31.6, 132.0], [31.7, 132.0], [31.8, 132.0], [31.9, 132.0], [32.0, 133.0], [32.1, 133.0], [32.2, 133.0], [32.3, 133.0], [32.4, 133.0], [32.5, 133.0], [32.6, 133.0], [32.7, 134.0], [32.8, 134.0], [32.9, 134.0], [33.0, 134.0], [33.1, 134.0], [33.2, 134.0], [33.3, 134.0], [33.4, 134.0], [33.5, 134.0], [33.6, 134.0], [33.7, 134.0], [33.8, 134.0], [33.9, 134.0], [34.0, 135.0], [34.1, 135.0], [34.2, 135.0], [34.3, 135.0], [34.4, 135.0], [34.5, 135.0], [34.6, 135.0], [34.7, 135.0], [34.8, 135.0], [34.9, 135.0], [35.0, 135.0], [35.1, 135.0], [35.2, 135.0], [35.3, 135.0], [35.4, 136.0], [35.5, 136.0], [35.6, 136.0], [35.7, 140.0], [35.8, 140.0], [35.9, 140.0], [36.0, 140.0], [36.1, 532.0], [36.2, 532.0], [36.3, 532.0], [36.4, 532.0], [36.5, 532.0], [36.6, 532.0], [36.7, 533.0], [36.8, 533.0], [36.9, 533.0], [37.0, 533.0], [37.1, 533.0], [37.2, 533.0], [37.3, 533.0], [37.4, 533.0], [37.5, 533.0], [37.6, 533.0], [37.7, 542.0], [37.8, 542.0], [37.9, 542.0], [38.0, 542.0], [38.1, 542.0], [38.2, 542.0], [38.3, 542.0], [38.4, 621.0], [38.5, 621.0], [38.6, 621.0], [38.7, 621.0], [38.8, 621.0], [38.9, 621.0], [39.0, 621.0], [39.1, 621.0], [39.2, 621.0], [39.3, 621.0], [39.4, 621.0], [39.5, 621.0], [39.6, 621.0], [39.7, 622.0], [39.8, 622.0], [39.9, 622.0], [40.0, 622.0], [40.1, 622.0], [40.2, 622.0], [40.3, 622.0], [40.4, 622.0], [40.5, 622.0], [40.6, 622.0], [40.7, 622.0], [40.8, 622.0], [40.9, 622.0], [41.0, 622.0], [41.1, 622.0], [41.2, 622.0], [41.3, 622.0], [41.4, 703.0], [41.5, 703.0], [41.6, 703.0], [41.7, 704.0], [41.8, 704.0], [41.9, 704.0], [42.0, 704.0], [42.1, 704.0], [42.2, 704.0], [42.3, 704.0], [42.4, 704.0], [42.5, 704.0], [42.6, 704.0], [42.7, 742.0], [42.8, 742.0], [42.9, 742.0], [43.0, 742.0], [43.1, 742.0], [43.2, 742.0], [43.3, 742.0], [43.4, 742.0], [43.5, 742.0], [43.6, 742.0], [43.7, 742.0], [43.8, 742.0], [43.9, 742.0], [44.0, 742.0], [44.1, 743.0], [44.2, 743.0], [44.3, 743.0], [44.4, 743.0], [44.5, 743.0], [44.6, 743.0], [44.7, 743.0], [44.8, 743.0], [44.9, 743.0], [45.0, 743.0], [45.1, 743.0], [45.2, 743.0], [45.3, 743.0], [45.4, 1927.0], [45.5, 1927.0], [45.6, 1927.0], [45.7, 1931.0], [45.8, 1931.0], [45.9, 1931.0], [46.0, 1931.0], [46.1, 1932.0], [46.2, 1932.0], [46.3, 1932.0], [46.4, 1932.0], [46.5, 1932.0], [46.6, 1932.0], [46.7, 1932.0], [46.8, 1932.0], [46.9, 1932.0], [47.0, 1932.0], [47.1, 1932.0], [47.2, 1932.0], [47.3, 1932.0], [47.4, 1935.0], [47.5, 1935.0], [47.6, 1935.0], [47.7, 1936.0], [47.8, 1936.0], [47.9, 1936.0], [48.0, 1936.0], [48.1, 1936.0], [48.2, 1936.0], [48.3, 1936.0], [48.4, 1937.0], [48.5, 1937.0], [48.6, 1937.0], [48.7, 1937.0], [48.8, 1937.0], [48.9, 1937.0], [49.0, 1937.0], [49.1, 1937.0], [49.2, 1937.0], [49.3, 1937.0], [49.4, 1937.0], [49.5, 1937.0], [49.6, 1937.0], [49.7, 1937.0], [49.8, 1937.0], [49.9, 1937.0], [50.0, 1937.0], [50.1, 2809.0], [50.2, 2809.0], [50.3, 2809.0], [50.4, 2810.0], [50.5, 2810.0], [50.6, 2810.0], [50.7, 2810.0], [50.8, 2810.0], [50.9, 2810.0], [51.0, 2810.0], [51.1, 2810.0], [51.2, 2810.0], [51.3, 2810.0], [51.4, 2872.0], [51.5, 2872.0], [51.6, 2872.0], [51.7, 2872.0], [51.8, 2872.0], [51.9, 2872.0], [52.0, 2872.0], [52.1, 2872.0], [52.2, 2872.0], [52.3, 2872.0], [52.4, 2873.0], [52.5, 2873.0], [52.6, 2873.0], [52.7, 3022.0], [52.8, 3022.0], [52.9, 3022.0], [53.0, 3022.0], [53.1, 3022.0], [53.2, 3022.0], [53.3, 3022.0], [53.4, 3023.0], [53.5, 3023.0], [53.6, 3023.0], [53.7, 3023.0], [53.8, 3023.0], [53.9, 3023.0], [54.0, 3023.0], [54.1, 3023.0], [54.2, 3023.0], [54.3, 3023.0], [54.4, 3023.0], [54.5, 3023.0], [54.6, 3023.0], [54.7, 3023.0], [54.8, 3023.0], [54.9, 3023.0], [55.0, 3023.0], [55.1, 3025.0], [55.2, 3025.0], [55.3, 3025.0], [55.4, 3025.0], [55.5, 3025.0], [55.6, 3025.0], [55.7, 3031.0], [55.8, 3031.0], [55.9, 3031.0], [56.0, 3031.0], [56.1, 3032.0], [56.2, 3032.0], [56.3, 3032.0], [56.4, 3032.0], [56.5, 3032.0], [56.6, 3032.0], [56.7, 3032.0], [56.8, 3032.0], [56.9, 3032.0], [57.0, 3032.0], [57.1, 3033.0], [57.2, 3033.0], [57.3, 3033.0], [57.4, 3033.0], [57.5, 3033.0], [57.6, 3033.0], [57.7, 3033.0], [57.8, 3033.0], [57.9, 3033.0], [58.0, 3033.0], [58.1, 3034.0], [58.2, 3034.0], [58.3, 3034.0], [58.4, 3034.0], [58.5, 3034.0], [58.6, 3034.0], [58.7, 3186.0], [58.8, 3186.0], [58.9, 3186.0], [59.0, 3186.0], [59.1, 3187.0], [59.2, 3187.0], [59.3, 3187.0], [59.4, 3188.0], [59.5, 3188.0], [59.6, 3188.0], [59.7, 3188.0], [59.8, 3188.0], [59.9, 3188.0], [60.0, 3188.0], [60.1, 3188.0], [60.2, 3188.0], [60.3, 3188.0], [60.4, 3191.0], [60.5, 3191.0], [60.6, 3191.0], [60.7, 3191.0], [60.8, 3191.0], [60.9, 3191.0], [61.0, 3191.0], [61.1, 3192.0], [61.2, 3192.0], [61.3, 3192.0], [61.4, 3192.0], [61.5, 3192.0], [61.6, 3192.0], [61.7, 3192.0], [61.8, 3192.0], [61.9, 3192.0], [62.0, 3192.0], [62.1, 3192.0], [62.2, 3192.0], [62.3, 3192.0], [62.4, 3193.0], [62.5, 3193.0], [62.6, 3193.0], [62.7, 3193.0], [62.8, 3193.0], [62.9, 3193.0], [63.0, 3193.0], [63.1, 3194.0], [63.2, 3194.0], [63.3, 3194.0], [63.4, 3194.0], [63.5, 3194.0], [63.6, 3194.0], [63.7, 3196.0], [63.8, 3196.0], [63.9, 3196.0], [64.0, 3196.0], [64.1, 3196.0], [64.2, 3196.0], [64.3, 3196.0], [64.4, 3196.0], [64.5, 3196.0], [64.6, 3196.0], [64.7, 3196.0], [64.8, 3196.0], [64.9, 3196.0], [65.0, 3196.0], [65.1, 3196.0], [65.2, 3196.0], [65.3, 3196.0], [65.4, 3196.0], [65.5, 3196.0], [65.6, 3196.0], [65.7, 3197.0], [65.8, 3197.0], [65.9, 3197.0], [66.0, 3197.0], [66.1, 3197.0], [66.2, 3197.0], [66.3, 3197.0], [66.4, 3197.0], [66.5, 3197.0], [66.6, 3197.0], [66.7, 3197.0], [66.8, 3197.0], [66.9, 3197.0], [67.0, 3197.0], [67.1, 3200.0], [67.2, 3200.0], [67.3, 3200.0], [67.4, 3209.0], [67.5, 3209.0], [67.6, 3209.0], [67.7, 3218.0], [67.8, 3218.0], [67.9, 3218.0], [68.0, 3247.0], [68.1, 3247.0], [68.2, 3247.0], [68.3, 3247.0], [68.4, 3248.0], [68.5, 3248.0], [68.6, 3248.0], [68.7, 3254.0], [68.8, 3254.0], [68.9, 3254.0], [69.0, 3254.0], [69.1, 3254.0], [69.2, 3254.0], [69.3, 3254.0], [69.4, 3254.0], [69.5, 3254.0], [69.6, 3254.0], [69.7, 3254.0], [69.8, 3254.0], [69.9, 3254.0], [70.0, 3255.0], [70.1, 3255.0], [70.2, 3255.0], [70.3, 3255.0], [70.4, 3255.0], [70.5, 3255.0], [70.6, 3255.0], [70.7, 3255.0], [70.8, 3255.0], [70.9, 3255.0], [71.0, 3255.0], [71.1, 3255.0], [71.2, 3255.0], [71.3, 3255.0], [71.4, 3256.0], [71.5, 3256.0], [71.6, 3256.0], [71.7, 3256.0], [71.8, 3256.0], [71.9, 3256.0], [72.0, 3256.0], [72.1, 3256.0], [72.2, 3256.0], [72.3, 3256.0], [72.4, 3263.0], [72.5, 3263.0], [72.6, 3263.0], [72.7, 3268.0], [72.8, 3268.0], [72.9, 3268.0], [73.0, 3268.0], [73.1, 3268.0], [73.2, 3268.0], [73.3, 3268.0], [73.4, 3269.0], [73.5, 3269.0], [73.6, 3269.0], [73.7, 3270.0], [73.8, 3270.0], [73.9, 3270.0], [74.0, 3270.0], [74.1, 3270.0], [74.2, 3270.0], [74.3, 3270.0], [74.4, 3270.0], [74.5, 3270.0], [74.6, 3270.0], [74.7, 3271.0], [74.8, 3271.0], [74.9, 3271.0], [75.0, 3273.0], [75.1, 3273.0], [75.2, 3273.0], [75.3, 3273.0], [75.4, 3274.0], [75.5, 3274.0], [75.6, 3274.0], [75.7, 3274.0], [75.8, 3274.0], [75.9, 3274.0], [76.0, 3276.0], [76.1, 3276.0], [76.2, 3276.0], [76.3, 3276.0], [76.4, 3276.0], [76.5, 3276.0], [76.6, 3276.0], [76.7, 3277.0], [76.8, 3277.0], [76.9, 3277.0], [77.0, 3277.0], [77.1, 3277.0], [77.2, 3277.0], [77.3, 3277.0], [77.4, 3277.0], [77.5, 3277.0], [77.6, 3277.0], [77.7, 3277.0], [77.8, 3277.0], [77.9, 3277.0], [78.0, 3277.0], [78.1, 3277.0], [78.2, 3277.0], [78.3, 3277.0], [78.4, 3281.0], [78.5, 3281.0], [78.6, 3281.0], [78.7, 3281.0], [78.8, 3281.0], [78.9, 3281.0], [79.0, 3281.0], [79.1, 3281.0], [79.2, 3281.0], [79.3, 3281.0], [79.4, 3282.0], [79.5, 3282.0], [79.6, 3282.0], [79.7, 3282.0], [79.8, 3282.0], [79.9, 3282.0], [80.0, 3283.0], [80.1, 3283.0], [80.2, 3283.0], [80.3, 3283.0], [80.4, 3283.0], [80.5, 3283.0], [80.6, 3283.0], [80.7, 3284.0], [80.8, 3284.0], [80.9, 3284.0], [81.0, 3284.0], [81.1, 3284.0], [81.2, 3284.0], [81.3, 3284.0], [81.4, 3285.0], [81.5, 3285.0], [81.6, 3285.0], [81.7, 3285.0], [81.8, 3285.0], [81.9, 3285.0], [82.0, 3298.0], [82.1, 3298.0], [82.2, 3298.0], [82.3, 3298.0], [82.4, 3675.0], [82.5, 3675.0], [82.6, 3675.0], [82.7, 3675.0], [82.8, 3675.0], [82.9, 3675.0], [83.0, 3676.0], [83.1, 3676.0], [83.2, 3676.0], [83.3, 3676.0], [83.4, 3676.0], [83.5, 3676.0], [83.6, 3676.0], [83.7, 3676.0], [83.8, 3676.0], [83.9, 3676.0], [84.0, 3676.0], [84.1, 3676.0], [84.2, 3676.0], [84.3, 3676.0], [84.4, 3676.0], [84.5, 3676.0], [84.6, 3676.0], [84.7, 3676.0], [84.8, 3676.0], [84.9, 3676.0], [85.0, 3676.0], [85.1, 3676.0], [85.2, 3676.0], [85.3, 3676.0], [85.4, 3677.0], [85.5, 3677.0], [85.6, 3677.0], [85.7, 3677.0], [85.8, 3677.0], [85.9, 3677.0], [86.0, 3679.0], [86.1, 3679.0], [86.2, 3679.0], [86.3, 3679.0], [86.4, 3679.0], [86.5, 3679.0], [86.6, 3679.0], [86.7, 3679.0], [86.8, 3679.0], [86.9, 3679.0], [87.0, 3680.0], [87.1, 3680.0], [87.2, 3680.0], [87.3, 3680.0], [87.4, 3681.0], [87.5, 3681.0], [87.6, 3681.0], [87.7, 3681.0], [87.8, 3681.0], [87.9, 3681.0], [88.0, 3681.0], [88.1, 3681.0], [88.2, 3681.0], [88.3, 3681.0], [88.4, 3681.0], [88.5, 3681.0], [88.6, 3681.0], [88.7, 3681.0], [88.8, 3681.0], [88.9, 3681.0], [89.0, 3681.0], [89.1, 3681.0], [89.2, 3681.0], [89.3, 3681.0], [89.4, 3681.0], [89.5, 3681.0], [89.6, 3681.0], [89.7, 3682.0], [89.8, 3682.0], [89.9, 3682.0], [90.0, 3682.0], [90.1, 3682.0], [90.2, 3682.0], [90.3, 3682.0], [90.4, 3683.0], [90.5, 3683.0], [90.6, 3683.0], [90.7, 3683.0], [90.8, 3683.0], [90.9, 3683.0], [91.0, 3683.0], [91.1, 3683.0], [91.2, 3683.0], [91.3, 3683.0], [91.4, 3684.0], [91.5, 3684.0], [91.6, 3684.0], [91.7, 3684.0], [91.8, 3684.0], [91.9, 3684.0], [92.0, 3684.0], [92.1, 3684.0], [92.2, 3684.0], [92.3, 3684.0], [92.4, 3684.0], [92.5, 3684.0], [92.6, 3684.0], [92.7, 3684.0], [92.8, 3684.0], [92.9, 3684.0], [93.0, 3684.0], [93.1, 3684.0], [93.2, 3684.0], [93.3, 3684.0], [93.4, 3684.0], [93.5, 3684.0], [93.6, 3684.0], [93.7, 3687.0], [93.8, 3687.0], [93.9, 3687.0], [94.0, 3688.0], [94.1, 3688.0], [94.2, 3688.0], [94.3, 3688.0], [94.4, 3688.0], [94.5, 3688.0], [94.6, 3688.0], [94.7, 3989.0], [94.8, 3989.0], [94.9, 3989.0], [95.0, 3991.0], [95.1, 3991.0], [95.2, 3991.0], [95.3, 3991.0], [95.4, 3992.0], [95.5, 3992.0], [95.6, 3992.0], [95.7, 3992.0], [95.8, 3992.0], [95.9, 3992.0], [96.0, 3992.0], [96.1, 3992.0], [96.2, 3992.0], [96.3, 3992.0], [96.4, 3992.0], [96.5, 3992.0], [96.6, 3992.0], [96.7, 3993.0], [96.8, 3993.0], [96.9, 3993.0], [97.0, 3993.0], [97.1, 3993.0], [97.2, 3993.0], [97.3, 3993.0], [97.4, 3993.0], [97.5, 3993.0], [97.6, 3993.0], [97.7, 3993.0], [97.8, 3993.0], [97.9, 3993.0], [98.0, 3993.0], [98.1, 3993.0], [98.2, 3993.0], [98.3, 3993.0], [98.4, 3993.0], [98.5, 3993.0], [98.6, 3993.0], [98.7, 3994.0], [98.8, 3994.0], [98.9, 3994.0], [99.0, 3994.0], [99.1, 3994.0], [99.2, 3994.0], [99.3, 3994.0], [99.4, 3996.0], [99.5, 3996.0], [99.6, 3996.0], [99.7, 4009.0], [99.8, 4009.0], [99.9, 4009.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[0.0, 44630.0], [0.1, 44630.0], [0.2, 44630.0], [0.3, 44630.0], [0.4, 44630.0], [0.5, 44630.0], [0.6, 44630.0], [0.7, 59033.0], [0.8, 59033.0], [0.9, 59033.0], [1.0, 59033.0], [1.1, 59033.0], [1.2, 59033.0], [1.3, 59033.0], [1.4, 59046.0], [1.5, 59046.0], [1.6, 59046.0], [1.7, 59047.0], [1.8, 59047.0], [1.9, 59047.0], [2.0, 59048.0], [2.1, 59048.0], [2.2, 59048.0], [2.3, 59048.0], [2.4, 59048.0], [2.5, 59048.0], [2.6, 59048.0], [2.7, 59515.0], [2.8, 59515.0], [2.9, 59515.0], [3.0, 62405.0], [3.1, 62405.0], [3.2, 62405.0], [3.3, 62405.0], [3.4, 62406.0], [3.5, 62406.0], [3.6, 62406.0], [3.7, 62407.0], [3.8, 62407.0], [3.9, 62407.0], [4.0, 62407.0], [4.1, 62407.0], [4.2, 62407.0], [4.3, 62407.0], [4.4, 62407.0], [4.5, 62407.0], [4.6, 62407.0], [4.7, 62408.0], [4.8, 62408.0], [4.9, 62408.0], [5.0, 62409.0], [5.1, 62409.0], [5.2, 62409.0], [5.3, 62409.0], [5.4, 62409.0], [5.5, 62409.0], [5.6, 62409.0], [5.7, 62409.0], [5.8, 62409.0], [5.9, 62409.0], [6.0, 62409.0], [6.1, 62409.0], [6.2, 62409.0], [6.3, 62409.0], [6.4, 62413.0], [6.5, 62413.0], [6.6, 62413.0], [6.7, 62414.0], [6.8, 62414.0], [6.9, 62414.0], [7.0, 62415.0], [7.1, 62415.0], [7.2, 62415.0], [7.3, 62415.0], [7.4, 62416.0], [7.5, 62416.0], [7.6, 62416.0], [7.7, 62416.0], [7.8, 62416.0], [7.9, 62416.0], [8.0, 62416.0], [8.1, 62416.0], [8.2, 62416.0], [8.3, 62416.0], [8.4, 62416.0], [8.5, 62416.0], [8.6, 62416.0], [8.7, 62416.0], [8.8, 62416.0], [8.9, 62416.0], [9.0, 62416.0], [9.1, 62416.0], [9.2, 62416.0], [9.3, 62416.0], [9.4, 62416.0], [9.5, 62416.0], [9.6, 62416.0], [9.7, 62416.0], [9.8, 62416.0], [9.9, 62416.0], [10.0, 62416.0], [10.1, 62416.0], [10.2, 62416.0], [10.3, 62416.0], [10.4, 62417.0], [10.5, 62417.0], [10.6, 62417.0], [10.7, 62417.0], [10.8, 62417.0], [10.9, 62417.0], [11.0, 62417.0], [11.1, 62417.0], [11.2, 62417.0], [11.3, 62417.0], [11.4, 62417.0], [11.5, 62417.0], [11.6, 62417.0], [11.7, 62417.0], [11.8, 62417.0], [11.9, 62417.0], [12.0, 62417.0], [12.1, 62417.0], [12.2, 62417.0], [12.3, 62417.0], [12.4, 62417.0], [12.5, 62417.0], [12.6, 62417.0], [12.7, 62417.0], [12.8, 62417.0], [12.9, 62417.0], [13.0, 62417.0], [13.1, 62417.0], [13.2, 62417.0], [13.3, 62417.0], [13.4, 62417.0], [13.5, 62417.0], [13.6, 62417.0], [13.7, 62417.0], [13.8, 62417.0], [13.9, 62417.0], [14.0, 62417.0], [14.1, 62417.0], [14.2, 62417.0], [14.3, 62417.0], [14.4, 62417.0], [14.5, 62417.0], [14.6, 62417.0], [14.7, 62417.0], [14.8, 62417.0], [14.9, 62417.0], [15.0, 62417.0], [15.1, 62417.0], [15.2, 62417.0], [15.3, 62417.0], [15.4, 62418.0], [15.5, 62418.0], [15.6, 62418.0], [15.7, 62418.0], [15.8, 62418.0], [15.9, 62418.0], [16.0, 62418.0], [16.1, 62418.0], [16.2, 62418.0], [16.3, 62418.0], [16.4, 62418.0], [16.5, 62418.0], [16.6, 62418.0], [16.7, 62418.0], [16.8, 62418.0], [16.9, 62418.0], [17.0, 62418.0], [17.1, 62418.0], [17.2, 62418.0], [17.3, 62418.0], [17.4, 62418.0], [17.5, 62418.0], [17.6, 62418.0], [17.7, 62418.0], [17.8, 62418.0], [17.9, 62418.0], [18.0, 62418.0], [18.1, 62418.0], [18.2, 62418.0], [18.3, 62418.0], [18.4, 62418.0], [18.5, 62418.0], [18.6, 62418.0], [18.7, 62418.0], [18.8, 62418.0], [18.9, 62418.0], [19.0, 62418.0], [19.1, 62418.0], [19.2, 62418.0], [19.3, 62418.0], [19.4, 62418.0], [19.5, 62418.0], [19.6, 62418.0], [19.7, 62418.0], [19.8, 62418.0], [19.9, 62418.0], [20.0, 62419.0], [20.1, 62419.0], [20.2, 62419.0], [20.3, 62419.0], [20.4, 62419.0], [20.5, 62419.0], [20.6, 62419.0], [20.7, 62419.0], [20.8, 62419.0], [20.9, 62419.0], [21.0, 62419.0], [21.1, 62419.0], [21.2, 62419.0], [21.3, 62419.0], [21.4, 62419.0], [21.5, 62419.0], [21.6, 62419.0], [21.7, 62419.0], [21.8, 62419.0], [21.9, 62419.0], [22.0, 62419.0], [22.1, 62419.0], [22.2, 62419.0], [22.3, 62419.0], [22.4, 62419.0], [22.5, 62419.0], [22.6, 62419.0], [22.7, 62419.0], [22.8, 62419.0], [22.9, 62419.0], [23.0, 62419.0], [23.1, 62419.0], [23.2, 62419.0], [23.3, 62419.0], [23.4, 62419.0], [23.5, 62419.0], [23.6, 62419.0], [23.7, 62420.0], [23.8, 62420.0], [23.9, 62420.0], [24.0, 62420.0], [24.1, 62420.0], [24.2, 62420.0], [24.3, 62420.0], [24.4, 62420.0], [24.5, 62420.0], [24.6, 62420.0], [24.7, 62420.0], [24.8, 62420.0], [24.9, 62420.0], [25.0, 62420.0], [25.1, 62420.0], [25.2, 62420.0], [25.3, 62420.0], [25.4, 62421.0], [25.5, 62421.0], [25.6, 62421.0], [25.7, 62421.0], [25.8, 62421.0], [25.9, 62421.0], [26.0, 62421.0], [26.1, 62421.0], [26.2, 62421.0], [26.3, 62421.0], [26.4, 62421.0], [26.5, 62421.0], [26.6, 62421.0], [26.7, 62422.0], [26.8, 62422.0], [26.9, 62422.0], [27.0, 62423.0], [27.1, 62423.0], [27.2, 62423.0], [27.3, 62423.0], [27.4, 62423.0], [27.5, 62423.0], [27.6, 62423.0], [27.7, 62424.0], [27.8, 62424.0], [27.9, 62424.0], [28.0, 62426.0], [28.1, 62426.0], [28.2, 62426.0], [28.3, 62426.0], [28.4, 62910.0], [28.5, 62910.0], [28.6, 62910.0], [28.7, 62912.0], [28.8, 62912.0], [28.9, 62912.0], [29.0, 62913.0], [29.1, 62913.0], [29.2, 62913.0], [29.3, 62913.0], [29.4, 62914.0], [29.5, 62914.0], [29.6, 62914.0], [29.7, 62914.0], [29.8, 62914.0], [29.9, 62914.0], [30.0, 62915.0], [30.1, 62915.0], [30.2, 62915.0], [30.3, 62915.0], [30.4, 62915.0], [30.5, 62915.0], [30.6, 62915.0], [30.7, 62915.0], [30.8, 62915.0], [30.9, 62915.0], [31.0, 62915.0], [31.1, 62915.0], [31.2, 62915.0], [31.3, 62915.0], [31.4, 62917.0], [31.5, 62917.0], [31.6, 62917.0], [31.7, 62917.0], [31.8, 62917.0], [31.9, 62917.0], [32.0, 62917.0], [32.1, 62917.0], [32.2, 62917.0], [32.3, 62917.0], [32.4, 62917.0], [32.5, 62917.0], [32.6, 62917.0], [32.7, 62917.0], [32.8, 62917.0], [32.9, 62917.0], [33.0, 62918.0], [33.1, 62918.0], [33.2, 62918.0], [33.3, 62918.0], [33.4, 62918.0], [33.5, 62918.0], [33.6, 62918.0], [33.7, 62918.0], [33.8, 62918.0], [33.9, 62918.0], [34.0, 62918.0], [34.1, 62918.0], [34.2, 62918.0], [34.3, 62918.0], [34.4, 62918.0], [34.5, 62918.0], [34.6, 62918.0], [34.7, 62919.0], [34.8, 62919.0], [34.9, 62919.0], [35.0, 62919.0], [35.1, 62919.0], [35.2, 62919.0], [35.3, 62919.0], [35.4, 62919.0], [35.5, 62919.0], [35.6, 62919.0], [35.7, 62923.0], [35.8, 62923.0], [35.9, 62923.0], [36.0, 62924.0], [36.1, 62924.0], [36.2, 62924.0], [36.3, 62924.0], [36.4, 62927.0], [36.5, 62927.0], [36.6, 62927.0], [36.7, 64315.0], [36.8, 64315.0], [36.9, 64315.0], [37.0, 65281.0], [37.1, 65281.0], [37.2, 65281.0], [37.3, 65281.0], [37.4, 65282.0], [37.5, 65282.0], [37.6, 65282.0], [37.7, 70434.0], [37.8, 70434.0], [37.9, 70434.0], [38.0, 70434.0], [38.1, 70435.0], [38.2, 70435.0], [38.3, 70435.0], [38.4, 70435.0], [38.5, 70435.0], [38.6, 70435.0], [38.7, 70435.0], [38.8, 70435.0], [38.9, 70435.0], [39.0, 70435.0], [39.1, 70435.0], [39.2, 70435.0], [39.3, 70435.0], [39.4, 70454.0], [39.5, 70454.0], [39.6, 70454.0], [39.7, 70530.0], [39.8, 70530.0], [39.9, 70530.0], [40.0, 70530.0], [40.1, 70531.0], [40.2, 70531.0], [40.3, 70531.0], [40.4, 70533.0], [40.5, 70533.0], [40.6, 70533.0], [40.7, 70994.0], [40.8, 70994.0], [40.9, 70994.0], [41.0, 70994.0], [41.1, 71179.0], [41.2, 71179.0], [41.3, 71179.0], [41.4, 71180.0], [41.5, 71180.0], [41.6, 71180.0], [41.7, 71369.0], [41.8, 71369.0], [41.9, 71369.0], [42.0, 71369.0], [42.1, 71369.0], [42.2, 71369.0], [42.3, 71369.0], [42.4, 71370.0], [42.5, 71370.0], [42.6, 71370.0], [42.7, 71374.0], [42.8, 71374.0], [42.9, 71374.0], [43.0, 71374.0], [43.1, 71389.0], [43.2, 71389.0], [43.3, 71389.0], [43.4, 71398.0], [43.5, 71398.0], [43.6, 71398.0], [43.7, 71398.0], [43.8, 71398.0], [43.9, 71398.0], [44.0, 71398.0], [44.1, 71435.0], [44.2, 71435.0], [44.3, 71435.0], [44.4, 71437.0], [44.5, 71437.0], [44.6, 71437.0], [44.7, 71439.0], [44.8, 71439.0], [44.9, 71439.0], [45.0, 71439.0], [45.1, 71443.0], [45.2, 71443.0], [45.3, 71443.0], [45.4, 71443.0], [45.5, 71443.0], [45.6, 71443.0], [45.7, 71444.0], [45.8, 71444.0], [45.9, 71444.0], [46.0, 71444.0], [46.1, 71454.0], [46.2, 71454.0], [46.3, 71454.0], [46.4, 72453.0], [46.5, 72453.0], [46.6, 72453.0], [46.7, 72458.0], [46.8, 72458.0], [46.9, 72458.0], [47.0, 72458.0], [47.1, 72471.0], [47.2, 72471.0], [47.3, 72471.0], [47.4, 72493.0], [47.5, 72493.0], [47.6, 72493.0], [47.7, 72494.0], [47.8, 72494.0], [47.9, 72494.0], [48.0, 72494.0], [48.1, 72494.0], [48.2, 72494.0], [48.3, 72494.0], [48.4, 72494.0], [48.5, 72494.0], [48.6, 72494.0], [48.7, 72495.0], [48.8, 72495.0], [48.9, 72495.0], [49.0, 72495.0], [49.1, 72495.0], [49.2, 72495.0], [49.3, 72495.0], [49.4, 72496.0], [49.5, 72496.0], [49.6, 72496.0], [49.7, 72496.0], [49.8, 72496.0], [49.9, 72496.0], [50.0, 72496.0], [50.1, 72541.0], [50.2, 72541.0], [50.3, 72541.0], [50.4, 74144.0], [50.5, 74144.0], [50.6, 74144.0], [50.7, 74146.0], [50.8, 74146.0], [50.9, 74146.0], [51.0, 74146.0], [51.1, 74147.0], [51.2, 74147.0], [51.3, 74147.0], [51.4, 74157.0], [51.5, 74157.0], [51.6, 74157.0], [51.7, 74168.0], [51.8, 74168.0], [51.9, 74168.0], [52.0, 74168.0], [52.1, 74174.0], [52.2, 74174.0], [52.3, 74174.0], [52.4, 74178.0], [52.5, 74178.0], [52.6, 74178.0], [52.7, 74179.0], [52.8, 74179.0], [52.9, 74179.0], [53.0, 74179.0], [53.1, 74179.0], [53.2, 74179.0], [53.3, 74179.0], [53.4, 75052.0], [53.5, 75052.0], [53.6, 75052.0], [53.7, 75052.0], [53.8, 75052.0], [53.9, 75052.0], [54.0, 75052.0], [54.1, 75052.0], [54.2, 75052.0], [54.3, 75052.0], [54.4, 75067.0], [54.5, 75067.0], [54.6, 75067.0], [54.7, 75068.0], [54.8, 75068.0], [54.9, 75068.0], [55.0, 75068.0], [55.1, 75077.0], [55.2, 75077.0], [55.3, 75077.0], [55.4, 75085.0], [55.5, 75085.0], [55.6, 75085.0], [55.7, 75085.0], [55.8, 75085.0], [55.9, 75085.0], [56.0, 75085.0], [56.1, 75085.0], [56.2, 75085.0], [56.3, 75085.0], [56.4, 76352.0], [56.5, 76352.0], [56.6, 76352.0], [56.7, 76352.0], [56.8, 76352.0], [56.9, 76352.0], [57.0, 76352.0], [57.1, 76361.0], [57.2, 76361.0], [57.3, 76361.0], [57.4, 76361.0], [57.5, 76361.0], [57.6, 76361.0], [57.7, 76368.0], [57.8, 76368.0], [57.9, 76368.0], [58.0, 76368.0], [58.1, 76368.0], [58.2, 76368.0], [58.3, 76368.0], [58.4, 76369.0], [58.5, 76369.0], [58.6, 76369.0], [58.7, 76369.0], [58.8, 76369.0], [58.9, 76369.0], [59.0, 76369.0], [59.1, 76369.0], [59.2, 76369.0], [59.3, 76369.0], [59.4, 76369.0], [59.5, 76369.0], [59.6, 76369.0], [59.7, 76379.0], [59.8, 76379.0], [59.9, 76379.0], [60.0, 76379.0], [60.1, 76380.0], [60.2, 76380.0], [60.3, 76380.0], [60.4, 76380.0], [60.5, 76380.0], [60.6, 76380.0], [60.7, 76381.0], [60.8, 76381.0], [60.9, 76381.0], [61.0, 76381.0], [61.1, 77254.0], [61.2, 77254.0], [61.3, 77254.0], [61.4, 77255.0], [61.5, 77255.0], [61.6, 77255.0], [61.7, 77257.0], [61.8, 77257.0], [61.9, 77257.0], [62.0, 77257.0], [62.1, 77778.0], [62.2, 77778.0], [62.3, 77778.0], [62.4, 77778.0], [62.5, 77778.0], [62.6, 77778.0], [62.7, 77779.0], [62.8, 77779.0], [62.9, 77779.0], [63.0, 77779.0], [63.1, 77799.0], [63.2, 77799.0], [63.3, 77799.0], [63.4, 77800.0], [63.5, 77800.0], [63.6, 77800.0], [63.7, 77800.0], [63.8, 77800.0], [63.9, 77800.0], [64.0, 77800.0], [64.1, 77800.0], [64.2, 77800.0], [64.3, 77800.0], [64.4, 77800.0], [64.5, 77800.0], [64.6, 77800.0], [64.7, 77800.0], [64.8, 77800.0], [64.9, 77800.0], [65.0, 77800.0], [65.1, 77981.0], [65.2, 77981.0], [65.3, 77981.0], [65.4, 77982.0], [65.5, 77982.0], [65.6, 77982.0], [65.7, 77987.0], [65.8, 77987.0], [65.9, 77987.0], [66.0, 77987.0], [66.1, 77996.0], [66.2, 77996.0], [66.3, 77996.0], [66.4, 77996.0], [66.5, 77996.0], [66.6, 77996.0], [66.7, 77997.0], [66.8, 77997.0], [66.9, 77997.0], [67.0, 77997.0], [67.1, 77997.0], [67.2, 77997.0], [67.3, 77997.0], [67.4, 77998.0], [67.5, 77998.0], [67.6, 77998.0], [67.7, 77998.0], [67.8, 77998.0], [67.9, 77998.0], [68.0, 77998.0], [68.1, 77998.0], [68.2, 77998.0], [68.3, 77998.0], [68.4, 77999.0], [68.5, 77999.0], [68.6, 77999.0], [68.7, 78008.0], [68.8, 78008.0], [68.9, 78008.0], [69.0, 78008.0], [69.1, 78209.0], [69.2, 78209.0], [69.3, 78209.0], [69.4, 78209.0], [69.5, 78209.0], [69.6, 78209.0], [69.7, 78210.0], [69.8, 78210.0], [69.9, 78210.0], [70.0, 78210.0], [70.1, 78210.0], [70.2, 78210.0], [70.3, 78210.0], [70.4, 78228.0], [70.5, 78228.0], [70.6, 78228.0], [70.7, 78229.0], [70.8, 78229.0], [70.9, 78229.0], [71.0, 78229.0], [71.1, 78229.0], [71.2, 78229.0], [71.3, 78229.0], [71.4, 78574.0], [71.5, 78574.0], [71.6, 78574.0], [71.7, 78575.0], [71.8, 78575.0], [71.9, 78575.0], [72.0, 78575.0], [72.1, 78576.0], [72.2, 78576.0], [72.3, 78576.0], [72.4, 78592.0], [72.5, 78592.0], [72.6, 78592.0], [72.7, 78593.0], [72.8, 78593.0], [72.9, 78593.0], [73.0, 78593.0], [73.1, 78594.0], [73.2, 78594.0], [73.3, 78594.0], [73.4, 78596.0], [73.5, 78596.0], [73.6, 78596.0], [73.7, 78597.0], [73.8, 78597.0], [73.9, 78597.0], [74.0, 78597.0], [74.1, 78597.0], [74.2, 78597.0], [74.3, 78597.0], [74.4, 78597.0], [74.5, 78597.0], [74.6, 78597.0], [74.7, 78597.0], [74.8, 78597.0], [74.9, 78597.0], [75.0, 78597.0], [75.1, 78597.0], [75.2, 78597.0], [75.3, 78597.0], [75.4, 78598.0], [75.5, 78598.0], [75.6, 78598.0], [75.7, 78598.0], [75.8, 78598.0], [75.9, 78598.0], [76.0, 78598.0], [76.1, 78598.0], [76.2, 78598.0], [76.3, 78598.0], [76.4, 78599.0], [76.5, 78599.0], [76.6, 78599.0], [76.7, 78599.0], [76.8, 78599.0], [76.9, 78599.0], [77.0, 78599.0], [77.1, 78604.0], [77.2, 78604.0], [77.3, 78604.0], [77.4, 78605.0], [77.5, 78605.0], [77.6, 78605.0], [77.7, 78605.0], [77.8, 78605.0], [77.9, 78605.0], [78.0, 78605.0], [78.1, 78606.0], [78.2, 78606.0], [78.3, 78606.0], [78.4, 78606.0], [78.5, 78606.0], [78.6, 78606.0], [78.7, 78606.0], [78.8, 78606.0], [78.9, 78606.0], [79.0, 78606.0], [79.1, 78607.0], [79.2, 78607.0], [79.3, 78607.0], [79.4, 78607.0], [79.5, 78607.0], [79.6, 78607.0], [79.7, 78619.0], [79.8, 78619.0], [79.9, 78619.0], [80.0, 78619.0], [80.1, 78619.0], [80.2, 78619.0], [80.3, 78619.0], [80.4, 78620.0], [80.5, 78620.0], [80.6, 78620.0], [80.7, 78621.0], [80.8, 78621.0], [80.9, 78621.0], [81.0, 78621.0], [81.1, 78621.0], [81.2, 78621.0], [81.3, 78621.0], [81.4, 78622.0], [81.5, 78622.0], [81.6, 78622.0], [81.7, 78622.0], [81.8, 78622.0], [81.9, 78622.0], [82.0, 78622.0], [82.1, 78622.0], [82.2, 78622.0], [82.3, 78622.0], [82.4, 78623.0], [82.5, 78623.0], [82.6, 78623.0], [82.7, 78623.0], [82.8, 78623.0], [82.9, 78623.0], [83.0, 78623.0], [83.1, 78623.0], [83.2, 78623.0], [83.3, 78623.0], [83.4, 78623.0], [83.5, 78623.0], [83.6, 78623.0], [83.7, 78624.0], [83.8, 78624.0], [83.9, 78624.0], [84.0, 78624.0], [84.1, 78624.0], [84.2, 78624.0], [84.3, 78624.0], [84.4, 78625.0], [84.5, 78625.0], [84.6, 78625.0], [84.7, 78641.0], [84.8, 78641.0], [84.9, 78641.0], [85.0, 78641.0], [85.1, 78642.0], [85.2, 78642.0], [85.3, 78642.0], [85.4, 78642.0], [85.5, 78642.0], [85.6, 78642.0], [85.7, 78645.0], [85.8, 78645.0], [85.9, 78645.0], [86.0, 78645.0], [86.1, 78645.0], [86.2, 78645.0], [86.3, 78645.0], [86.4, 78646.0], [86.5, 78646.0], [86.6, 78646.0], [86.7, 78650.0], [86.8, 78650.0], [86.9, 78650.0], [87.0, 78650.0], [87.1, 78650.0], [87.2, 78650.0], [87.3, 78650.0], [87.4, 78651.0], [87.5, 78651.0], [87.6, 78651.0], [87.7, 78652.0], [87.8, 78652.0], [87.9, 78652.0], [88.0, 78652.0], [88.1, 78662.0], [88.2, 78662.0], [88.3, 78662.0], [88.4, 78663.0], [88.5, 78663.0], [88.6, 78663.0], [88.7, 78665.0], [88.8, 78665.0], [88.9, 78665.0], [89.0, 78665.0], [89.1, 78665.0], [89.2, 78665.0], [89.3, 78665.0], [89.4, 78666.0], [89.5, 78666.0], [89.6, 78666.0], [89.7, 78666.0], [89.8, 78666.0], [89.9, 78666.0], [90.0, 78666.0], [90.1, 78666.0], [90.2, 78666.0], [90.3, 78666.0], [90.4, 78667.0], [90.5, 78667.0], [90.6, 78667.0], [90.7, 78668.0], [90.8, 78668.0], [90.9, 78668.0], [91.0, 78668.0], [91.1, 78670.0], [91.2, 78670.0], [91.3, 78670.0], [91.4, 78671.0], [91.5, 78671.0], [91.6, 78671.0], [91.7, 78671.0], [91.8, 78671.0], [91.9, 78671.0], [92.0, 78671.0], [92.1, 78671.0], [92.2, 78671.0], [92.3, 78671.0], [92.4, 78675.0], [92.5, 78675.0], [92.6, 78675.0], [92.7, 78675.0], [92.8, 78675.0], [92.9, 78675.0], [93.0, 78675.0], [93.1, 78682.0], [93.2, 78682.0], [93.3, 78682.0], [93.4, 78682.0], [93.5, 78682.0], [93.6, 78682.0], [93.7, 78684.0], [93.8, 78684.0], [93.9, 78684.0], [94.0, 78684.0], [94.1, 78684.0], [94.2, 78684.0], [94.3, 78684.0], [94.4, 78686.0], [94.5, 78686.0], [94.6, 78686.0], [94.7, 78687.0], [94.8, 78687.0], [94.9, 78687.0], [95.0, 78687.0], [95.1, 78687.0], [95.2, 78687.0], [95.3, 78687.0], [95.4, 78687.0], [95.5, 78687.0], [95.6, 78687.0], [95.7, 78690.0], [95.8, 78690.0], [95.9, 78690.0], [96.0, 78690.0], [96.1, 78690.0], [96.2, 78690.0], [96.3, 78690.0], [96.4, 78694.0], [96.5, 78694.0], [96.6, 78694.0], [96.7, 78699.0], [96.8, 78699.0], [96.9, 78699.0], [97.0, 78699.0], [97.1, 78699.0], [97.2, 78699.0], [97.3, 78699.0], [97.4, 78701.0], [97.5, 78701.0], [97.6, 78701.0], [97.7, 78701.0], [97.8, 78701.0], [97.9, 78701.0], [98.0, 78701.0], [98.1, 78711.0], [98.2, 78711.0], [98.3, 78711.0], [98.4, 78726.0], [98.5, 78726.0], [98.6, 78726.0], [98.7, 78726.0], [98.8, 78726.0], [98.9, 78726.0], [99.0, 78726.0], [99.1, 78726.0], [99.2, 78726.0], [99.3, 78726.0], [99.4, 78726.0], [99.5, 78726.0], [99.6, 78726.0], [99.7, 78751.0], [99.8, 78751.0], [99.9, 78751.0], [100.0, 78751.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[0.0, 164.0], [0.1, 164.0], [0.2, 164.0], [0.3, 164.0], [0.4, 166.0], [0.5, 166.0], [0.6, 166.0], [0.7, 166.0], [0.8, 166.0], [0.9, 166.0], [1.0, 167.0], [1.1, 167.0], [1.2, 167.0], [1.3, 167.0], [1.4, 168.0], [1.5, 168.0], [1.6, 168.0], [1.7, 169.0], [1.8, 169.0], [1.9, 169.0], [2.0, 170.0], [2.1, 170.0], [2.2, 170.0], [2.3, 170.0], [2.4, 171.0], [2.5, 171.0], [2.6, 171.0], [2.7, 171.0], [2.8, 171.0], [2.9, 171.0], [3.0, 173.0], [3.1, 173.0], [3.2, 173.0], [3.3, 173.0], [3.4, 174.0], [3.5, 174.0], [3.6, 174.0], [3.7, 176.0], [3.8, 176.0], [3.9, 176.0], [4.0, 177.0], [4.1, 177.0], [4.2, 177.0], [4.3, 177.0], [4.4, 177.0], [4.5, 177.0], [4.6, 177.0], [4.7, 178.0], [4.8, 178.0], [4.9, 178.0], [5.0, 179.0], [5.1, 179.0], [5.2, 179.0], [5.3, 179.0], [5.4, 179.0], [5.5, 179.0], [5.6, 179.0], [5.7, 181.0], [5.8, 181.0], [5.9, 181.0], [6.0, 181.0], [6.1, 181.0], [6.2, 181.0], [6.3, 181.0], [6.4, 182.0], [6.5, 182.0], [6.6, 182.0], [6.7, 184.0], [6.8, 184.0], [6.9, 184.0], [7.0, 186.0], [7.1, 186.0], [7.2, 186.0], [7.3, 186.0], [7.4, 187.0], [7.5, 187.0], [7.6, 187.0], [7.7, 187.0], [7.8, 187.0], [7.9, 187.0], [8.0, 187.0], [8.1, 187.0], [8.2, 187.0], [8.3, 187.0], [8.4, 190.0], [8.5, 190.0], [8.6, 190.0], [8.7, 191.0], [8.8, 191.0], [8.9, 191.0], [9.0, 191.0], [9.1, 191.0], [9.2, 191.0], [9.3, 191.0], [9.4, 193.0], [9.5, 193.0], [9.6, 193.0], [9.7, 194.0], [9.8, 194.0], [9.9, 194.0], [10.0, 194.0], [10.1, 194.0], [10.2, 194.0], [10.3, 194.0], [10.4, 195.0], [10.5, 195.0], [10.6, 195.0], [10.7, 195.0], [10.8, 195.0], [10.9, 195.0], [11.0, 195.0], [11.1, 195.0], [11.2, 195.0], [11.3, 195.0], [11.4, 197.0], [11.5, 197.0], [11.6, 197.0], [11.7, 198.0], [11.8, 198.0], [11.9, 198.0], [12.0, 198.0], [12.1, 198.0], [12.2, 198.0], [12.3, 198.0], [12.4, 199.0], [12.5, 199.0], [12.6, 199.0], [12.7, 202.0], [12.8, 202.0], [12.9, 202.0], [13.0, 202.0], [13.1, 202.0], [13.2, 202.0], [13.3, 202.0], [13.4, 203.0], [13.5, 203.0], [13.6, 203.0], [13.7, 204.0], [13.8, 204.0], [13.9, 204.0], [14.0, 204.0], [14.1, 204.0], [14.2, 204.0], [14.3, 204.0], [14.4, 204.0], [14.5, 204.0], [14.6, 204.0], [14.7, 206.0], [14.8, 206.0], [14.9, 206.0], [15.0, 206.0], [15.1, 206.0], [15.2, 206.0], [15.3, 206.0], [15.4, 207.0], [15.5, 207.0], [15.6, 207.0], [15.7, 216.0], [15.8, 216.0], [15.9, 216.0], [16.0, 219.0], [16.1, 219.0], [16.2, 219.0], [16.3, 219.0], [16.4, 221.0], [16.5, 221.0], [16.6, 221.0], [16.7, 221.0], [16.8, 221.0], [16.9, 221.0], [17.0, 221.0], [17.1, 221.0], [17.2, 221.0], [17.3, 221.0], [17.4, 221.0], [17.5, 221.0], [17.6, 221.0], [17.7, 222.0], [17.8, 222.0], [17.9, 222.0], [18.0, 222.0], [18.1, 222.0], [18.2, 222.0], [18.3, 222.0], [18.4, 222.0], [18.5, 222.0], [18.6, 222.0], [18.7, 222.0], [18.8, 222.0], [18.9, 222.0], [19.0, 222.0], [19.1, 222.0], [19.2, 222.0], [19.3, 222.0], [19.4, 222.0], [19.5, 222.0], [19.6, 222.0], [19.7, 223.0], [19.8, 223.0], [19.9, 223.0], [20.0, 223.0], [20.1, 223.0], [20.2, 223.0], [20.3, 223.0], [20.4, 229.0], [20.5, 229.0], [20.6, 229.0], [20.7, 229.0], [20.8, 229.0], [20.9, 229.0], [21.0, 232.0], [21.1, 232.0], [21.2, 232.0], [21.3, 232.0], [21.4, 234.0], [21.5, 234.0], [21.6, 234.0], [21.7, 234.0], [21.8, 234.0], [21.9, 234.0], [22.0, 234.0], [22.1, 234.0], [22.2, 234.0], [22.3, 234.0], [22.4, 234.0], [22.5, 234.0], [22.6, 234.0], [22.7, 234.0], [22.8, 234.0], [22.9, 234.0], [23.0, 235.0], [23.1, 235.0], [23.2, 235.0], [23.3, 235.0], [23.4, 235.0], [23.5, 235.0], [23.6, 235.0], [23.7, 236.0], [23.8, 236.0], [23.9, 236.0], [24.0, 236.0], [24.1, 236.0], [24.2, 236.0], [24.3, 236.0], [24.4, 239.0], [24.5, 239.0], [24.6, 239.0], [24.7, 239.0], [24.8, 239.0], [24.9, 239.0], [25.0, 239.0], [25.1, 239.0], [25.2, 239.0], [25.3, 239.0], [25.4, 241.0], [25.5, 241.0], [25.6, 241.0], [25.7, 241.0], [25.8, 241.0], [25.9, 241.0], [26.0, 241.0], [26.1, 242.0], [26.2, 242.0], [26.3, 242.0], [26.4, 242.0], [26.5, 242.0], [26.6, 242.0], [26.7, 242.0], [26.8, 242.0], [26.9, 242.0], [27.0, 242.0], [27.1, 242.0], [27.2, 242.0], [27.3, 242.0], [27.4, 243.0], [27.5, 243.0], [27.6, 243.0], [27.7, 243.0], [27.8, 243.0], [27.9, 243.0], [28.0, 243.0], [28.1, 243.0], [28.2, 243.0], [28.3, 243.0], [28.4, 243.0], [28.5, 243.0], [28.6, 243.0], [28.7, 243.0], [28.8, 243.0], [28.9, 243.0], [29.0, 243.0], [29.1, 248.0], [29.2, 248.0], [29.3, 248.0], [29.4, 248.0], [29.5, 248.0], [29.6, 248.0], [29.7, 248.0], [29.8, 248.0], [29.9, 248.0], [30.0, 248.0], [30.1, 249.0], [30.2, 249.0], [30.3, 249.0], [30.4, 249.0], [30.5, 249.0], [30.6, 249.0], [30.7, 249.0], [30.8, 249.0], [30.9, 249.0], [31.0, 249.0], [31.1, 249.0], [31.2, 249.0], [31.3, 249.0], [31.4, 251.0], [31.5, 251.0], [31.6, 251.0], [31.7, 252.0], [31.8, 252.0], [31.9, 252.0], [32.0, 254.0], [32.1, 254.0], [32.2, 254.0], [32.3, 254.0], [32.4, 254.0], [32.5, 254.0], [32.6, 254.0], [32.7, 255.0], [32.8, 255.0], [32.9, 255.0], [33.0, 255.0], [33.1, 255.0], [33.2, 255.0], [33.3, 255.0], [33.4, 257.0], [33.5, 257.0], [33.6, 257.0], [33.7, 257.0], [33.8, 257.0], [33.9, 257.0], [34.0, 257.0], [34.1, 257.0], [34.2, 257.0], [34.3, 257.0], [34.4, 258.0], [34.5, 258.0], [34.6, 258.0], [34.7, 258.0], [34.8, 258.0], [34.9, 258.0], [35.0, 258.0], [35.1, 258.0], [35.2, 258.0], [35.3, 258.0], [35.4, 258.0], [35.5, 258.0], [35.6, 258.0], [35.7, 258.0], [35.8, 258.0], [35.9, 258.0], [36.0, 266.0], [36.1, 266.0], [36.2, 266.0], [36.3, 266.0], [36.4, 267.0], [36.5, 267.0], [36.6, 267.0], [36.7, 272.0], [36.8, 272.0], [36.9, 272.0], [37.0, 274.0], [37.1, 274.0], [37.2, 274.0], [37.3, 274.0], [37.4, 277.0], [37.5, 277.0], [37.6, 277.0], [37.7, 279.0], [37.8, 279.0], [37.9, 279.0], [38.0, 279.0], [38.1, 281.0], [38.2, 281.0], [38.3, 281.0], [38.4, 282.0], [38.5, 282.0], [38.6, 282.0], [38.7, 283.0], [38.8, 283.0], [38.9, 283.0], [39.0, 283.0], [39.1, 284.0], [39.2, 284.0], [39.3, 284.0], [39.4, 287.0], [39.5, 287.0], [39.6, 287.0], [39.7, 289.0], [39.8, 289.0], [39.9, 289.0], [40.0, 289.0], [40.1, 291.0], [40.2, 291.0], [40.3, 291.0], [40.4, 296.0], [40.5, 296.0], [40.6, 296.0], [40.7, 296.0], [40.8, 296.0], [40.9, 296.0], [41.0, 296.0], [41.1, 299.0], [41.2, 299.0], [41.3, 299.0], [41.4, 305.0], [41.5, 305.0], [41.6, 305.0], [41.7, 309.0], [41.8, 309.0], [41.9, 309.0], [42.0, 309.0], [42.1, 316.0], [42.2, 316.0], [42.3, 316.0], [42.4, 597.0], [42.5, 597.0], [42.6, 597.0], [42.7, 609.0], [42.8, 609.0], [42.9, 609.0], [43.0, 609.0], [43.1, 612.0], [43.2, 612.0], [43.3, 612.0], [43.4, 613.0], [43.5, 613.0], [43.6, 613.0], [43.7, 617.0], [43.8, 617.0], [43.9, 617.0], [44.0, 617.0], [44.1, 621.0], [44.2, 621.0], [44.3, 621.0], [44.4, 623.0], [44.5, 623.0], [44.6, 623.0], [44.7, 626.0], [44.8, 626.0], [44.9, 626.0], [45.0, 626.0], [45.1, 636.0], [45.2, 636.0], [45.3, 636.0], [45.4, 710.0], [45.5, 710.0], [45.6, 710.0], [45.7, 713.0], [45.8, 713.0], [45.9, 713.0], [46.0, 713.0], [46.1, 716.0], [46.2, 716.0], [46.3, 716.0], [46.4, 719.0], [46.5, 719.0], [46.6, 719.0], [46.7, 720.0], [46.8, 720.0], [46.9, 720.0], [47.0, 720.0], [47.1, 723.0], [47.2, 723.0], [47.3, 723.0], [47.4, 723.0], [47.5, 723.0], [47.6, 723.0], [47.7, 726.0], [47.8, 726.0], [47.9, 726.0], [48.0, 726.0], [48.1, 726.0], [48.2, 726.0], [48.3, 726.0], [48.4, 729.0], [48.5, 729.0], [48.6, 729.0], [48.7, 734.0], [48.8, 734.0], [48.9, 734.0], [49.0, 734.0], [49.1, 738.0], [49.2, 738.0], [49.3, 738.0], [49.4, 743.0], [49.5, 743.0], [49.6, 743.0], [49.7, 747.0], [49.8, 747.0], [49.9, 747.0], [50.0, 747.0], [50.1, 933.0], [50.2, 933.0], [50.3, 933.0], [50.4, 934.0], [50.5, 934.0], [50.6, 934.0], [50.7, 936.0], [50.8, 936.0], [50.9, 936.0], [51.0, 936.0], [51.1, 938.0], [51.2, 938.0], [51.3, 938.0], [51.4, 942.0], [51.5, 942.0], [51.6, 942.0], [51.7, 947.0], [51.8, 947.0], [51.9, 947.0], [52.0, 947.0], [52.1, 951.0], [52.2, 951.0], [52.3, 951.0], [52.4, 952.0], [52.5, 952.0], [52.6, 952.0], [52.7, 954.0], [52.8, 954.0], [52.9, 954.0], [53.0, 954.0], [53.1, 1853.0], [53.2, 1853.0], [53.3, 1853.0], [53.4, 1862.0], [53.5, 1862.0], [53.6, 1862.0], [53.7, 1864.0], [53.8, 1864.0], [53.9, 1864.0], [54.0, 1864.0], [54.1, 1867.0], [54.2, 1867.0], [54.3, 1867.0], [54.4, 1869.0], [54.5, 1869.0], [54.6, 1869.0], [54.7, 1870.0], [54.8, 1870.0], [54.9, 1870.0], [55.0, 1870.0], [55.1, 1873.0], [55.2, 1873.0], [55.3, 1873.0], [55.4, 1876.0], [55.5, 1876.0], [55.6, 1876.0], [55.7, 1879.0], [55.8, 1879.0], [55.9, 1879.0], [56.0, 1879.0], [56.1, 2881.0], [56.2, 2881.0], [56.3, 2881.0], [56.4, 2885.0], [56.5, 2885.0], [56.6, 2885.0], [56.7, 2889.0], [56.8, 2889.0], [56.9, 2889.0], [57.0, 2889.0], [57.1, 2891.0], [57.2, 2891.0], [57.3, 2891.0], [57.4, 2895.0], [57.5, 2895.0], [57.6, 2895.0], [57.7, 2897.0], [57.8, 2897.0], [57.9, 2897.0], [58.0, 2897.0], [58.1, 2901.0], [58.2, 2901.0], [58.3, 2901.0], [58.4, 2904.0], [58.5, 2904.0], [58.6, 2904.0], [58.7, 2907.0], [58.8, 2907.0], [58.9, 2907.0], [59.0, 2907.0], [59.1, 2911.0], [59.2, 2911.0], [59.3, 2911.0], [59.4, 2911.0], [59.5, 2911.0], [59.6, 2911.0], [59.7, 2917.0], [59.8, 2917.0], [59.9, 2917.0], [60.0, 2917.0], [60.1, 3885.0], [60.2, 3885.0], [60.3, 3885.0], [60.4, 3886.0], [60.5, 3886.0], [60.6, 3886.0], [60.7, 3888.0], [60.8, 3888.0], [60.9, 3888.0], [61.0, 3888.0], [61.1, 3891.0], [61.2, 3891.0], [61.3, 3891.0], [61.4, 3894.0], [61.5, 3894.0], [61.6, 3894.0], [61.7, 3897.0], [61.8, 3897.0], [61.9, 3897.0], [62.0, 3897.0], [62.1, 3898.0], [62.2, 3898.0], [62.3, 3898.0], [62.4, 3899.0], [62.5, 3899.0], [62.6, 3899.0], [62.7, 3904.0], [62.8, 3904.0], [62.9, 3904.0], [63.0, 3904.0], [63.1, 3906.0], [63.2, 3906.0], [63.3, 3906.0], [63.4, 3907.0], [63.5, 3907.0], [63.6, 3907.0], [63.7, 3907.0], [63.8, 3907.0], [63.9, 3907.0], [64.0, 3907.0], [64.1, 3911.0], [64.2, 3911.0], [64.3, 3911.0], [64.4, 3917.0], [64.5, 3917.0], [64.6, 3917.0], [64.7, 3922.0], [64.8, 3922.0], [64.9, 3922.0], [65.0, 3922.0], [65.1, 3930.0], [65.2, 3930.0], [65.3, 3930.0], [65.4, 5392.0], [65.5, 5392.0], [65.6, 5392.0], [65.7, 5397.0], [65.8, 5397.0], [65.9, 5397.0], [66.0, 5397.0], [66.1, 5400.0], [66.2, 5400.0], [66.3, 5400.0], [66.4, 5403.0], [66.5, 5403.0], [66.6, 5403.0], [66.7, 5406.0], [66.8, 5406.0], [66.9, 5406.0], [67.0, 5406.0], [67.1, 5409.0], [67.2, 5409.0], [67.3, 5409.0], [67.4, 5412.0], [67.5, 5412.0], [67.6, 5412.0], [67.7, 5414.0], [67.8, 5414.0], [67.9, 5414.0], [68.0, 5414.0], [68.1, 5416.0], [68.2, 5416.0], [68.3, 5416.0], [68.4, 5421.0], [68.5, 5421.0], [68.6, 5421.0], [68.7, 5424.0], [68.8, 5424.0], [68.9, 5424.0], [69.0, 5424.0], [69.1, 5426.0], [69.2, 5426.0], [69.3, 5426.0], [69.4, 5428.0], [69.5, 5428.0], [69.6, 5428.0], [69.7, 5431.0], [69.8, 5431.0], [69.9, 5431.0], [70.0, 5431.0], [70.1, 5433.0], [70.2, 5433.0], [70.3, 5433.0], [70.4, 5434.0], [70.5, 5434.0], [70.6, 5434.0], [70.7, 5435.0], [70.8, 5435.0], [70.9, 5435.0], [71.0, 5435.0], [71.1, 5437.0], [71.2, 5437.0], [71.3, 5437.0], [71.4, 5441.0], [71.5, 5441.0], [71.6, 5441.0], [71.7, 5441.0], [71.8, 5441.0], [71.9, 5441.0], [72.0, 5441.0], [72.1, 5443.0], [72.2, 5443.0], [72.3, 5443.0], [72.4, 5443.0], [72.5, 5443.0], [72.6, 5443.0], [72.7, 5445.0], [72.8, 5445.0], [72.9, 5445.0], [73.0, 5445.0], [73.1, 5447.0], [73.2, 5447.0], [73.3, 5447.0], [73.4, 5449.0], [73.5, 5449.0], [73.6, 5449.0], [73.7, 5449.0], [73.8, 5449.0], [73.9, 5449.0], [74.0, 5449.0], [74.1, 5450.0], [74.2, 5450.0], [74.3, 5450.0], [74.4, 5451.0], [74.5, 5451.0], [74.6, 5451.0], [74.7, 5451.0], [74.8, 5451.0], [74.9, 5451.0], [75.0, 5451.0], [75.1, 5453.0], [75.2, 5453.0], [75.3, 5453.0], [75.4, 5454.0], [75.5, 5454.0], [75.6, 5454.0], [75.7, 5454.0], [75.8, 5454.0], [75.9, 5454.0], [76.0, 5454.0], [76.1, 5454.0], [76.2, 5454.0], [76.3, 5454.0], [76.4, 5455.0], [76.5, 5455.0], [76.6, 5455.0], [76.7, 5456.0], [76.8, 5456.0], [76.9, 5456.0], [77.0, 5456.0], [77.1, 5458.0], [77.2, 5458.0], [77.3, 5458.0], [77.4, 5458.0], [77.5, 5458.0], [77.6, 5458.0], [77.7, 5458.0], [77.8, 5458.0], [77.9, 5458.0], [78.0, 5458.0], [78.1, 5459.0], [78.2, 5459.0], [78.3, 5459.0], [78.4, 5460.0], [78.5, 5460.0], [78.6, 5460.0], [78.7, 5461.0], [78.8, 5461.0], [78.9, 5461.0], [79.0, 5461.0], [79.1, 5462.0], [79.2, 5462.0], [79.3, 5462.0], [79.4, 5464.0], [79.5, 5464.0], [79.6, 5464.0], [79.7, 5464.0], [79.8, 5464.0], [79.9, 5464.0], [80.0, 5464.0], [80.1, 5464.0], [80.2, 5464.0], [80.3, 5464.0], [80.4, 5465.0], [80.5, 5465.0], [80.6, 5465.0], [80.7, 5465.0], [80.8, 5465.0], [80.9, 5465.0], [81.0, 5465.0], [81.1, 5467.0], [81.2, 5467.0], [81.3, 5467.0], [81.4, 5468.0], [81.5, 5468.0], [81.6, 5468.0], [81.7, 5469.0], [81.8, 5469.0], [81.9, 5469.0], [82.0, 5469.0], [82.1, 5470.0], [82.2, 5470.0], [82.3, 5470.0], [82.4, 5475.0], [82.5, 5475.0], [82.6, 5475.0], [82.7, 5478.0], [82.8, 5478.0], [82.9, 5478.0], [83.0, 5480.0], [83.1, 5480.0], [83.2, 5480.0], [83.3, 5480.0], [83.4, 5484.0], [83.5, 5484.0], [83.6, 5484.0], [83.7, 5486.0], [83.8, 5486.0], [83.9, 5486.0], [84.0, 5487.0], [84.1, 5487.0], [84.2, 5487.0], [84.3, 5487.0], [84.4, 5490.0], [84.5, 5490.0], [84.6, 5490.0], [84.7, 5490.0], [84.8, 5490.0], [84.9, 5490.0], [85.0, 5493.0], [85.1, 5493.0], [85.2, 5493.0], [85.3, 5493.0], [85.4, 5493.0], [85.5, 5493.0], [85.6, 5493.0], [85.7, 5496.0], [85.8, 5496.0], [85.9, 5496.0], [86.0, 5497.0], [86.1, 5497.0], [86.2, 5497.0], [86.3, 5497.0], [86.4, 5499.0], [86.5, 5499.0], [86.6, 5499.0], [86.7, 5499.0], [86.8, 5499.0], [86.9, 5499.0], [87.0, 5502.0], [87.1, 5502.0], [87.2, 5502.0], [87.3, 5502.0], [87.4, 5506.0], [87.5, 5506.0], [87.6, 5506.0], [87.7, 5507.0], [87.8, 5507.0], [87.9, 5507.0], [88.0, 5510.0], [88.1, 5510.0], [88.2, 5510.0], [88.3, 5510.0], [88.4, 5514.0], [88.5, 5514.0], [88.6, 5514.0], [88.7, 5515.0], [88.8, 5515.0], [88.9, 5515.0], [89.0, 5768.0], [89.1, 5768.0], [89.2, 5768.0], [89.3, 5768.0], [89.4, 5800.0], [89.5, 5800.0], [89.6, 5800.0], [89.7, 5825.0], [89.8, 5825.0], [89.9, 5825.0], [90.0, 5834.0], [90.1, 5834.0], [90.2, 5834.0], [90.3, 5834.0], [90.4, 5870.0], [90.5, 5870.0], [90.6, 5870.0], [90.7, 5875.0], [90.8, 5875.0], [90.9, 5875.0], [91.0, 5879.0], [91.1, 5879.0], [91.2, 5879.0], [91.3, 5879.0], [91.4, 5882.0], [91.5, 5882.0], [91.6, 5882.0], [91.7, 6532.0], [91.8, 6532.0], [91.9, 6532.0], [92.0, 6534.0], [92.1, 6534.0], [92.2, 6534.0], [92.3, 6534.0], [92.4, 6539.0], [92.5, 6539.0], [92.6, 6539.0], [92.7, 6539.0], [92.8, 6539.0], [92.9, 6539.0], [93.0, 6540.0], [93.1, 6540.0], [93.2, 6540.0], [93.3, 6540.0], [93.4, 6545.0], [93.5, 6545.0], [93.6, 6545.0], [93.7, 6545.0], [93.8, 6545.0], [93.9, 6545.0], [94.0, 6546.0], [94.1, 6546.0], [94.2, 6546.0], [94.3, 6546.0], [94.4, 6556.0], [94.5, 6556.0], [94.6, 6556.0], [94.7, 6557.0], [94.8, 6557.0], [94.9, 6557.0], [95.0, 6559.0], [95.1, 6559.0], [95.2, 6559.0], [95.3, 6559.0], [95.4, 6562.0], [95.5, 6562.0], [95.6, 6562.0], [95.7, 6563.0], [95.8, 6563.0], [95.9, 6563.0], [96.0, 6567.0], [96.1, 6567.0], [96.2, 6567.0], [96.3, 6567.0], [96.4, 6567.0], [96.5, 6567.0], [96.6, 6567.0], [96.7, 6571.0], [96.8, 6571.0], [96.9, 6571.0], [97.0, 6572.0], [97.1, 6572.0], [97.2, 6572.0], [97.3, 6572.0], [97.4, 6575.0], [97.5, 6575.0], [97.6, 6575.0], [97.7, 6576.0], [97.8, 6576.0], [97.9, 6576.0], [98.0, 6579.0], [98.1, 6579.0], [98.2, 6579.0], [98.3, 6579.0], [98.4, 6581.0], [98.5, 6581.0], [98.6, 6581.0], [98.7, 6584.0], [98.8, 6584.0], [98.9, 6584.0], [99.0, 6586.0], [99.1, 6586.0], [99.2, 6586.0], [99.3, 6586.0], [99.4, 6593.0], [99.5, 6593.0], [99.6, 6593.0], [99.7, 6597.0], [99.8, 6597.0], [99.9, 6597.0]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[0.0, 418.0], [0.1, 418.0], [0.2, 418.0], [0.3, 418.0], [0.4, 418.0], [0.5, 418.0], [0.6, 418.0], [0.7, 419.0], [0.8, 419.0], [0.9, 419.0], [1.0, 419.0], [1.1, 419.0], [1.2, 419.0], [1.3, 419.0], [1.4, 431.0], [1.5, 431.0], [1.6, 431.0], [1.7, 431.0], [1.8, 431.0], [1.9, 431.0], [2.0, 431.0], [2.1, 431.0], [2.2, 431.0], [2.3, 431.0], [2.4, 440.0], [2.5, 440.0], [2.6, 440.0], [2.7, 440.0], [2.8, 440.0], [2.9, 440.0], [3.0, 440.0], [3.1, 440.0], [3.2, 440.0], [3.3, 440.0], [3.4, 478.0], [3.5, 478.0], [3.6, 478.0], [3.7, 478.0], [3.8, 478.0], [3.9, 478.0], [4.0, 486.0], [4.1, 486.0], [4.2, 486.0], [4.3, 486.0], [4.4, 495.0], [4.5, 495.0], [4.6, 495.0], [4.7, 504.0], [4.8, 504.0], [4.9, 504.0], [5.0, 504.0], [5.1, 504.0], [5.2, 504.0], [5.3, 504.0], [5.4, 504.0], [5.5, 504.0], [5.6, 504.0], [5.7, 653.0], [5.8, 653.0], [5.9, 653.0], [6.0, 653.0], [6.1, 653.0], [6.2, 653.0], [6.3, 653.0], [6.4, 654.0], [6.5, 654.0], [6.6, 654.0], [6.7, 696.0], [6.8, 696.0], [6.9, 696.0], [7.0, 697.0], [7.1, 697.0], [7.2, 697.0], [7.3, 697.0], [7.4, 697.0], [7.5, 697.0], [7.6, 697.0], [7.7, 698.0], [7.8, 698.0], [7.9, 698.0], [8.0, 698.0], [8.1, 698.0], [8.2, 698.0], [8.3, 698.0], [8.4, 698.0], [8.5, 698.0], [8.6, 698.0], [8.7, 698.0], [8.8, 698.0], [8.9, 698.0], [9.0, 699.0], [9.1, 699.0], [9.2, 699.0], [9.3, 699.0], [9.4, 709.0], [9.5, 709.0], [9.6, 709.0], [9.7, 710.0], [9.8, 710.0], [9.9, 710.0], [10.0, 710.0], [10.1, 713.0], [10.2, 713.0], [10.3, 713.0], [10.4, 716.0], [10.5, 716.0], [10.6, 716.0], [10.7, 718.0], [10.8, 718.0], [10.9, 718.0], [11.0, 718.0], [11.1, 721.0], [11.2, 721.0], [11.3, 721.0], [11.4, 721.0], [11.5, 721.0], [11.6, 721.0], [11.7, 721.0], [11.8, 721.0], [11.9, 721.0], [12.0, 721.0], [12.1, 721.0], [12.2, 721.0], [12.3, 721.0], [12.4, 726.0], [12.5, 726.0], [12.6, 726.0], [12.7, 726.0], [12.8, 726.0], [12.9, 726.0], [13.0, 726.0], [13.1, 727.0], [13.2, 727.0], [13.3, 727.0], [13.4, 727.0], [13.5, 727.0], [13.6, 727.0], [13.7, 727.0], [13.8, 727.0], [13.9, 727.0], [14.0, 727.0], [14.1, 728.0], [14.2, 728.0], [14.3, 728.0], [14.4, 728.0], [14.5, 728.0], [14.6, 728.0], [14.7, 728.0], [14.8, 728.0], [14.9, 728.0], [15.0, 728.0], [15.1, 731.0], [15.2, 731.0], [15.3, 731.0], [15.4, 731.0], [15.5, 731.0], [15.6, 731.0], [15.7, 733.0], [15.8, 733.0], [15.9, 733.0], [16.0, 733.0], [16.1, 733.0], [16.2, 733.0], [16.3, 733.0], [16.4, 734.0], [16.5, 734.0], [16.6, 734.0], [16.7, 734.0], [16.8, 734.0], [16.9, 734.0], [17.0, 734.0], [17.1, 734.0], [17.2, 734.0], [17.3, 734.0], [17.4, 737.0], [17.5, 737.0], [17.6, 737.0], [17.7, 738.0], [17.8, 738.0], [17.9, 738.0], [18.0, 743.0], [18.1, 743.0], [18.2, 743.0], [18.3, 743.0], [18.4, 745.0], [18.5, 745.0], [18.6, 745.0], [18.7, 745.0], [18.8, 745.0], [18.9, 745.0], [19.0, 746.0], [19.1, 746.0], [19.2, 746.0], [19.3, 746.0], [19.4, 746.0], [19.5, 746.0], [19.6, 746.0], [19.7, 750.0], [19.8, 750.0], [19.9, 750.0], [20.0, 750.0], [20.1, 750.0], [20.2, 750.0], [20.3, 750.0], [20.4, 750.0], [20.5, 750.0], [20.6, 750.0], [20.7, 750.0], [20.8, 750.0], [20.9, 750.0], [21.0, 750.0], [21.1, 750.0], [21.2, 750.0], [21.3, 750.0], [21.4, 754.0], [21.5, 754.0], [21.6, 754.0], [21.7, 754.0], [21.8, 754.0], [21.9, 754.0], [22.0, 754.0], [22.1, 754.0], [22.2, 754.0], [22.3, 754.0], [22.4, 755.0], [22.5, 755.0], [22.6, 755.0], [22.7, 755.0], [22.8, 755.0], [22.9, 755.0], [23.0, 755.0], [23.1, 755.0], [23.2, 755.0], [23.3, 755.0], [23.4, 756.0], [23.5, 756.0], [23.6, 756.0], [23.7, 756.0], [23.8, 756.0], [23.9, 756.0], [24.0, 756.0], [24.1, 758.0], [24.2, 758.0], [24.3, 758.0], [24.4, 758.0], [24.5, 758.0], [24.6, 758.0], [24.7, 759.0], [24.8, 759.0], [24.9, 759.0], [25.0, 759.0], [25.1, 759.0], [25.2, 759.0], [25.3, 759.0], [25.4, 759.0], [25.5, 759.0], [25.6, 759.0], [25.7, 760.0], [25.8, 760.0], [25.9, 760.0], [26.0, 760.0], [26.1, 760.0], [26.2, 760.0], [26.3, 760.0], [26.4, 761.0], [26.5, 761.0], [26.6, 761.0], [26.7, 762.0], [26.8, 762.0], [26.9, 762.0], [27.0, 762.0], [27.1, 762.0], [27.2, 762.0], [27.3, 762.0], [27.4, 762.0], [27.5, 762.0], [27.6, 762.0], [27.7, 767.0], [27.8, 767.0], [27.9, 767.0], [28.0, 767.0], [28.1, 769.0], [28.2, 769.0], [28.3, 769.0], [28.4, 769.0], [28.5, 769.0], [28.6, 769.0], [28.7, 776.0], [28.8, 776.0], [28.9, 776.0], [29.0, 776.0], [29.1, 776.0], [29.2, 776.0], [29.3, 776.0], [29.4, 776.0], [29.5, 776.0], [29.6, 776.0], [29.7, 779.0], [29.8, 779.0], [29.9, 779.0], [30.0, 779.0], [30.1, 779.0], [30.2, 779.0], [30.3, 779.0], [30.4, 780.0], [30.5, 780.0], [30.6, 780.0], [30.7, 784.0], [30.8, 784.0], [30.9, 784.0], [31.0, 784.0], [31.1, 785.0], [31.2, 785.0], [31.3, 785.0], [31.4, 785.0], [31.5, 785.0], [31.6, 785.0], [31.7, 785.0], [31.8, 785.0], [31.9, 785.0], [32.0, 785.0], [32.1, 785.0], [32.2, 785.0], [32.3, 785.0], [32.4, 785.0], [32.5, 785.0], [32.6, 785.0], [32.7, 785.0], [32.8, 785.0], [32.9, 785.0], [33.0, 788.0], [33.1, 788.0], [33.2, 788.0], [33.3, 788.0], [33.4, 788.0], [33.5, 788.0], [33.6, 788.0], [33.7, 788.0], [33.8, 788.0], [33.9, 788.0], [34.0, 788.0], [34.1, 788.0], [34.2, 788.0], [34.3, 788.0], [34.4, 788.0], [34.5, 788.0], [34.6, 788.0], [34.7, 788.0], [34.8, 788.0], [34.9, 788.0], [35.0, 788.0], [35.1, 788.0], [35.2, 788.0], [35.3, 788.0], [35.4, 789.0], [35.5, 789.0], [35.6, 789.0], [35.7, 789.0], [35.8, 789.0], [35.9, 789.0], [36.0, 789.0], [36.1, 789.0], [36.2, 789.0], [36.3, 789.0], [36.4, 789.0], [36.5, 789.0], [36.6, 789.0], [36.7, 789.0], [36.8, 789.0], [36.9, 789.0], [37.0, 789.0], [37.1, 789.0], [37.2, 789.0], [37.3, 789.0], [37.4, 789.0], [37.5, 789.0], [37.6, 789.0], [37.7, 790.0], [37.8, 790.0], [37.9, 790.0], [38.0, 790.0], [38.1, 790.0], [38.2, 790.0], [38.3, 790.0], [38.4, 790.0], [38.5, 790.0], [38.6, 790.0], [38.7, 790.0], [38.8, 790.0], [38.9, 790.0], [39.0, 790.0], [39.1, 792.0], [39.2, 792.0], [39.3, 792.0], [39.4, 792.0], [39.5, 792.0], [39.6, 792.0], [39.7, 792.0], [39.8, 792.0], [39.9, 792.0], [40.0, 792.0], [40.1, 792.0], [40.2, 792.0], [40.3, 792.0], [40.4, 792.0], [40.5, 792.0], [40.6, 792.0], [40.7, 792.0], [40.8, 792.0], [40.9, 792.0], [41.0, 792.0], [41.1, 792.0], [41.2, 792.0], [41.3, 792.0], [41.4, 792.0], [41.5, 792.0], [41.6, 792.0], [41.7, 792.0], [41.8, 792.0], [41.9, 792.0], [42.0, 792.0], [42.1, 792.0], [42.2, 792.0], [42.3, 792.0], [42.4, 793.0], [42.5, 793.0], [42.6, 793.0], [42.7, 793.0], [42.8, 793.0], [42.9, 793.0], [43.0, 793.0], [43.1, 793.0], [43.2, 793.0], [43.3, 793.0], [43.4, 793.0], [43.5, 793.0], [43.6, 793.0], [43.7, 796.0], [43.8, 796.0], [43.9, 796.0], [44.0, 796.0], [44.1, 796.0], [44.2, 796.0], [44.3, 796.0], [44.4, 798.0], [44.5, 798.0], [44.6, 798.0], [44.7, 798.0], [44.8, 798.0], [44.9, 798.0], [45.0, 798.0], [45.1, 798.0], [45.2, 798.0], [45.3, 798.0], [45.4, 798.0], [45.5, 798.0], [45.6, 798.0], [45.7, 799.0], [45.8, 799.0], [45.9, 799.0], [46.0, 799.0], [46.1, 799.0], [46.2, 799.0], [46.3, 799.0], [46.4, 799.0], [46.5, 799.0], [46.6, 799.0], [46.7, 799.0], [46.8, 799.0], [46.9, 799.0], [47.0, 799.0], [47.1, 800.0], [47.2, 800.0], [47.3, 800.0], [47.4, 800.0], [47.5, 800.0], [47.6, 800.0], [47.7, 801.0], [47.8, 801.0], [47.9, 801.0], [48.0, 801.0], [48.1, 801.0], [48.2, 801.0], [48.3, 801.0], [48.4, 801.0], [48.5, 801.0], [48.6, 801.0], [48.7, 801.0], [48.8, 801.0], [48.9, 801.0], [49.0, 801.0], [49.1, 805.0], [49.2, 805.0], [49.3, 805.0], [49.4, 805.0], [49.5, 805.0], [49.6, 805.0], [49.7, 806.0], [49.8, 806.0], [49.9, 806.0], [50.0, 806.0], [50.1, 806.0], [50.2, 806.0], [50.3, 806.0], [50.4, 806.0], [50.5, 806.0], [50.6, 806.0], [50.7, 807.0], [50.8, 807.0], [50.9, 807.0], [51.0, 807.0], [51.1, 807.0], [51.2, 807.0], [51.3, 807.0], [51.4, 817.0], [51.5, 817.0], [51.6, 817.0], [51.7, 817.0], [51.8, 817.0], [51.9, 817.0], [52.0, 817.0], [52.1, 817.0], [52.2, 817.0], [52.3, 817.0], [52.4, 818.0], [52.5, 818.0], [52.6, 818.0], [52.7, 818.0], [52.8, 818.0], [52.9, 818.0], [53.0, 818.0], [53.1, 819.0], [53.2, 819.0], [53.3, 819.0], [53.4, 820.0], [53.5, 820.0], [53.6, 820.0], [53.7, 820.0], [53.8, 820.0], [53.9, 820.0], [54.0, 820.0], [54.1, 821.0], [54.2, 821.0], [54.3, 821.0], [54.4, 821.0], [54.5, 821.0], [54.6, 821.0], [54.7, 821.0], [54.8, 821.0], [54.9, 821.0], [55.0, 821.0], [55.1, 821.0], [55.2, 821.0], [55.3, 821.0], [55.4, 822.0], [55.5, 822.0], [55.6, 822.0], [55.7, 835.0], [55.8, 835.0], [55.9, 835.0], [56.0, 835.0], [56.1, 836.0], [56.2, 836.0], [56.3, 836.0], [56.4, 837.0], [56.5, 837.0], [56.6, 837.0], [56.7, 844.0], [56.8, 844.0], [56.9, 844.0], [57.0, 844.0], [57.1, 845.0], [57.2, 845.0], [57.3, 845.0], [57.4, 846.0], [57.5, 846.0], [57.6, 846.0], [57.7, 847.0], [57.8, 847.0], [57.9, 847.0], [58.0, 847.0], [58.1, 848.0], [58.2, 848.0], [58.3, 848.0], [58.4, 849.0], [58.5, 849.0], [58.6, 849.0], [58.7, 850.0], [58.8, 850.0], [58.9, 850.0], [59.0, 850.0], [59.1, 2181.0], [59.2, 2181.0], [59.3, 2181.0], [59.4, 2182.0], [59.5, 2182.0], [59.6, 2182.0], [59.7, 2182.0], [59.8, 2182.0], [59.9, 2182.0], [60.0, 2182.0], [60.1, 6277.0], [60.2, 6277.0], [60.3, 6277.0], [60.4, 6279.0], [60.5, 6279.0], [60.6, 6279.0], [60.7, 6279.0], [60.8, 6279.0], [60.9, 6279.0], [61.0, 6279.0], [61.1, 6280.0], [61.2, 6280.0], [61.3, 6280.0], [61.4, 6281.0], [61.5, 6281.0], [61.6, 6281.0], [61.7, 6281.0], [61.8, 6281.0], [61.9, 6281.0], [62.0, 6281.0], [62.1, 6283.0], [62.2, 6283.0], [62.3, 6283.0], [62.4, 6283.0], [62.5, 6283.0], [62.6, 6283.0], [62.7, 6283.0], [62.8, 6283.0], [62.9, 6283.0], [63.0, 6283.0], [63.1, 6284.0], [63.2, 6284.0], [63.3, 6284.0], [63.4, 6288.0], [63.5, 6288.0], [63.6, 6288.0], [63.7, 6288.0], [63.8, 6288.0], [63.9, 6288.0], [64.0, 6288.0], [64.1, 6289.0], [64.2, 6289.0], [64.3, 6289.0], [64.4, 6290.0], [64.5, 6290.0], [64.6, 6290.0], [64.7, 6291.0], [64.8, 6291.0], [64.9, 6291.0], [65.0, 6291.0], [65.1, 6294.0], [65.2, 6294.0], [65.3, 6294.0], [65.4, 6295.0], [65.5, 6295.0], [65.6, 6295.0], [65.7, 6296.0], [65.8, 6296.0], [65.9, 6296.0], [66.0, 6296.0], [66.1, 6299.0], [66.2, 6299.0], [66.3, 6299.0], [66.4, 6300.0], [66.5, 6300.0], [66.6, 6300.0], [66.7, 6300.0], [66.8, 6300.0], [66.9, 6300.0], [67.0, 6300.0], [67.1, 6300.0], [67.2, 6300.0], [67.3, 6300.0], [67.4, 6300.0], [67.5, 6300.0], [67.6, 6300.0], [67.7, 6304.0], [67.8, 6304.0], [67.9, 6304.0], [68.0, 6307.0], [68.1, 6307.0], [68.2, 6307.0], [68.3, 6307.0], [68.4, 8166.0], [68.5, 8166.0], [68.6, 8166.0], [68.7, 8453.0], [68.8, 8453.0], [68.9, 8453.0], [69.0, 8454.0], [69.1, 8454.0], [69.2, 8454.0], [69.3, 8454.0], [69.4, 8455.0], [69.5, 8455.0], [69.6, 8455.0], [69.7, 8456.0], [69.8, 8456.0], [69.9, 8456.0], [70.0, 8456.0], [70.1, 8456.0], [70.2, 8456.0], [70.3, 8456.0], [70.4, 8456.0], [70.5, 8456.0], [70.6, 8456.0], [70.7, 8456.0], [70.8, 8456.0], [70.9, 8456.0], [71.0, 8457.0], [71.1, 8457.0], [71.2, 8457.0], [71.3, 8457.0], [71.4, 8458.0], [71.5, 8458.0], [71.6, 8458.0], [71.7, 8458.0], [71.8, 8458.0], [71.9, 8458.0], [72.0, 8458.0], [72.1, 8458.0], [72.2, 8458.0], [72.3, 8458.0], [72.4, 8458.0], [72.5, 8458.0], [72.6, 8458.0], [72.7, 8459.0], [72.8, 8459.0], [72.9, 8459.0], [73.0, 8459.0], [73.1, 8459.0], [73.2, 8459.0], [73.3, 8459.0], [73.4, 8459.0], [73.5, 8459.0], [73.6, 8459.0], [73.7, 8460.0], [73.8, 8460.0], [73.9, 8460.0], [74.0, 8460.0], [74.1, 8460.0], [74.2, 8460.0], [74.3, 8460.0], [74.4, 8461.0], [74.5, 8461.0], [74.6, 8461.0], [74.7, 8462.0], [74.8, 8462.0], [74.9, 8462.0], [75.0, 8462.0], [75.1, 8462.0], [75.2, 8462.0], [75.3, 8462.0], [75.4, 8462.0], [75.5, 8462.0], [75.6, 8462.0], [75.7, 8463.0], [75.8, 8463.0], [75.9, 8463.0], [76.0, 8464.0], [76.1, 8464.0], [76.2, 8464.0], [76.3, 8464.0], [76.4, 8464.0], [76.5, 8464.0], [76.6, 8464.0], [76.7, 8464.0], [76.8, 8464.0], [76.9, 8464.0], [77.0, 8465.0], [77.1, 8465.0], [77.2, 8465.0], [77.3, 8465.0], [77.4, 8465.0], [77.5, 8465.0], [77.6, 8465.0], [77.7, 8465.0], [77.8, 8465.0], [77.9, 8465.0], [78.0, 8465.0], [78.1, 8465.0], [78.2, 8465.0], [78.3, 8465.0], [78.4, 8465.0], [78.5, 8465.0], [78.6, 8465.0], [78.7, 8465.0], [78.8, 8465.0], [78.9, 8465.0], [79.0, 8465.0], [79.1, 8465.0], [79.2, 8465.0], [79.3, 8465.0], [79.4, 8466.0], [79.5, 8466.0], [79.6, 8466.0], [79.7, 8466.0], [79.8, 8466.0], [79.9, 8466.0], [80.0, 8466.0], [80.1, 8466.0], [80.2, 8466.0], [80.3, 8466.0], [80.4, 8466.0], [80.5, 8466.0], [80.6, 8466.0], [80.7, 8466.0], [80.8, 8466.0], [80.9, 8466.0], [81.0, 8467.0], [81.1, 8467.0], [81.2, 8467.0], [81.3, 8467.0], [81.4, 8467.0], [81.5, 8467.0], [81.6, 8467.0], [81.7, 8467.0], [81.8, 8467.0], [81.9, 8467.0], [82.0, 8467.0], [82.1, 8467.0], [82.2, 8467.0], [82.3, 8467.0], [82.4, 8467.0], [82.5, 8467.0], [82.6, 8467.0], [82.7, 8468.0], [82.8, 8468.0], [82.9, 8468.0], [83.0, 8468.0], [83.1, 8468.0], [83.2, 8468.0], [83.3, 8468.0], [83.4, 8469.0], [83.5, 8469.0], [83.6, 8469.0], [83.7, 8469.0], [83.8, 8469.0], [83.9, 8469.0], [84.0, 8469.0], [84.1, 8469.0], [84.2, 8469.0], [84.3, 8469.0], [84.4, 8469.0], [84.5, 8469.0], [84.6, 8469.0], [84.7, 8471.0], [84.8, 8471.0], [84.9, 8471.0], [85.0, 8471.0], [85.1, 8471.0], [85.2, 8471.0], [85.3, 8471.0], [85.4, 8473.0], [85.5, 8473.0], [85.6, 8473.0], [85.7, 8473.0], [85.8, 8473.0], [85.9, 8473.0], [86.0, 8473.0], [86.1, 8473.0], [86.2, 8473.0], [86.3, 8473.0], [86.4, 8474.0], [86.5, 8474.0], [86.6, 8474.0], [86.7, 8474.0], [86.8, 8474.0], [86.9, 8474.0], [87.0, 8474.0], [87.1, 8474.0], [87.2, 8474.0], [87.3, 8474.0], [87.4, 8474.0], [87.5, 8474.0], [87.6, 8474.0], [87.7, 8474.0], [87.8, 8474.0], [87.9, 8474.0], [88.0, 8475.0], [88.1, 8475.0], [88.2, 8475.0], [88.3, 8475.0], [88.4, 8476.0], [88.5, 8476.0], [88.6, 8476.0], [88.7, 8476.0], [88.8, 8476.0], [88.9, 8476.0], [89.0, 8476.0], [89.1, 8476.0], [89.2, 8476.0], [89.3, 8476.0], [89.4, 8476.0], [89.5, 8476.0], [89.6, 8476.0], [89.7, 8477.0], [89.8, 8477.0], [89.9, 8477.0], [90.0, 8477.0], [90.1, 8477.0], [90.2, 8477.0], [90.3, 8477.0], [90.4, 8477.0], [90.5, 8477.0], [90.6, 8477.0], [90.7, 8477.0], [90.8, 8477.0], [90.9, 8477.0], [91.0, 8477.0], [91.1, 8477.0], [91.2, 8477.0], [91.3, 8477.0], [91.4, 8477.0], [91.5, 8477.0], [91.6, 8477.0], [91.7, 8477.0], [91.8, 8477.0], [91.9, 8477.0], [92.0, 8478.0], [92.1, 8478.0], [92.2, 8478.0], [92.3, 8478.0], [92.4, 8478.0], [92.5, 8478.0], [92.6, 8478.0], [92.7, 8479.0], [92.8, 8479.0], [92.9, 8479.0], [93.0, 8480.0], [93.1, 8480.0], [93.2, 8480.0], [93.3, 8480.0], [93.4, 8480.0], [93.5, 8480.0], [93.6, 8480.0], [93.7, 8482.0], [93.8, 8482.0], [93.9, 8482.0], [94.0, 8680.0], [94.1, 8680.0], [94.2, 8680.0], [94.3, 8680.0], [94.4, 8707.0], [94.5, 8707.0], [94.6, 8707.0], [94.7, 8724.0], [94.8, 8724.0], [94.9, 8724.0], [95.0, 8724.0], [95.1, 8724.0], [95.2, 8724.0], [95.3, 8724.0], [95.4, 8725.0], [95.5, 8725.0], [95.6, 8725.0], [95.7, 8725.0], [95.8, 8725.0], [95.9, 8725.0], [96.0, 13820.0], [96.1, 13820.0], [96.2, 13820.0], [96.3, 13820.0], [96.4, 13820.0], [96.5, 13820.0], [96.6, 13820.0], [96.7, 14750.0], [96.8, 14750.0], [96.9, 14750.0], [97.0, 19529.0], [97.1, 19529.0], [97.2, 19529.0], [97.3, 19529.0], [97.4, 19989.0], [97.5, 19989.0], [97.6, 19989.0], [97.7, 19989.0], [97.8, 19989.0], [97.9, 19989.0], [98.0, 19989.0], [98.1, 19989.0], [98.2, 19989.0], [98.3, 19989.0], [98.4, 19996.0], [98.5, 19996.0], [98.6, 19996.0], [98.7, 19996.0], [98.8, 19996.0], [98.9, 19996.0], [99.0, 19997.0], [99.1, 19997.0], [99.2, 19997.0], [99.3, 19997.0], [99.4, 34265.0], [99.5, 34265.0], [99.6, 34265.0], [99.7, 34266.0], [99.8, 34266.0], [99.9, 34266.0]], "isOverall": false, "label": "POST /graphql - Page Search", "isController": false}, {"data": [[0.0, 84.0], [0.1, 84.0], [0.2, 84.0], [0.3, 84.0], [0.4, 84.0], [0.5, 84.0], [0.6, 84.0], [0.7, 84.0], [0.8, 84.0], [0.9, 84.0], [1.0, 85.0], [1.1, 85.0], [1.2, 85.0], [1.3, 85.0], [1.4, 85.0], [1.5, 85.0], [1.6, 85.0], [1.7, 85.0], [1.8, 85.0], [1.9, 85.0], [2.0, 86.0], [2.1, 86.0], [2.2, 86.0], [2.3, 86.0], [2.4, 86.0], [2.5, 86.0], [2.6, 86.0], [2.7, 86.0], [2.8, 86.0], [2.9, 86.0], [3.0, 87.0], [3.1, 87.0], [3.2, 87.0], [3.3, 87.0], [3.4, 87.0], [3.5, 87.0], [3.6, 87.0], [3.7, 89.0], [3.8, 89.0], [3.9, 89.0], [4.0, 90.0], [4.1, 90.0], [4.2, 90.0], [4.3, 90.0], [4.4, 91.0], [4.5, 91.0], [4.6, 91.0], [4.7, 92.0], [4.8, 92.0], [4.9, 92.0], [5.0, 92.0], [5.1, 92.0], [5.2, 92.0], [5.3, 92.0], [5.4, 92.0], [5.5, 92.0], [5.6, 92.0], [5.7, 93.0], [5.8, 93.0], [5.9, 93.0], [6.0, 95.0], [6.1, 95.0], [6.2, 95.0], [6.3, 95.0], [6.4, 96.0], [6.5, 96.0], [6.6, 96.0], [6.7, 96.0], [6.8, 96.0], [6.9, 96.0], [7.0, 102.0], [7.1, 102.0], [7.2, 102.0], [7.3, 102.0], [7.4, 102.0], [7.5, 102.0], [7.6, 102.0], [7.7, 102.0], [7.8, 102.0], [7.9, 102.0], [8.0, 102.0], [8.1, 102.0], [8.2, 102.0], [8.3, 102.0], [8.4, 102.0], [8.5, 102.0], [8.6, 102.0], [8.7, 103.0], [8.8, 103.0], [8.9, 103.0], [9.0, 105.0], [9.1, 105.0], [9.2, 105.0], [9.3, 105.0], [9.4, 105.0], [9.5, 105.0], [9.6, 105.0], [9.7, 105.0], [9.8, 105.0], [9.9, 105.0], [10.0, 105.0], [10.1, 105.0], [10.2, 105.0], [10.3, 105.0], [10.4, 110.0], [10.5, 110.0], [10.6, 110.0], [10.7, 110.0], [10.8, 110.0], [10.9, 110.0], [11.0, 110.0], [11.1, 110.0], [11.2, 110.0], [11.3, 110.0], [11.4, 111.0], [11.5, 111.0], [11.6, 111.0], [11.7, 111.0], [11.8, 111.0], [11.9, 111.0], [12.0, 111.0], [12.1, 111.0], [12.2, 111.0], [12.3, 111.0], [12.4, 112.0], [12.5, 112.0], [12.6, 112.0], [12.7, 112.0], [12.8, 112.0], [12.9, 112.0], [13.0, 112.0], [13.1, 112.0], [13.2, 112.0], [13.3, 112.0], [13.4, 112.0], [13.5, 112.0], [13.6, 112.0], [13.7, 115.0], [13.8, 115.0], [13.9, 115.0], [14.0, 115.0], [14.1, 115.0], [14.2, 115.0], [14.3, 115.0], [14.4, 115.0], [14.5, 115.0], [14.6, 115.0], [14.7, 115.0], [14.8, 115.0], [14.9, 115.0], [15.0, 115.0], [15.1, 115.0], [15.2, 115.0], [15.3, 115.0], [15.4, 115.0], [15.5, 115.0], [15.6, 115.0], [15.7, 115.0], [15.8, 115.0], [15.9, 115.0], [16.0, 116.0], [16.1, 116.0], [16.2, 116.0], [16.3, 116.0], [16.4, 116.0], [16.5, 116.0], [16.6, 116.0], [16.7, 116.0], [16.8, 116.0], [16.9, 116.0], [17.0, 116.0], [17.1, 116.0], [17.2, 116.0], [17.3, 116.0], [17.4, 116.0], [17.5, 116.0], [17.6, 116.0], [17.7, 116.0], [17.8, 116.0], [17.9, 116.0], [18.0, 116.0], [18.1, 116.0], [18.2, 116.0], [18.3, 116.0], [18.4, 116.0], [18.5, 116.0], [18.6, 116.0], [18.7, 116.0], [18.8, 116.0], [18.9, 116.0], [19.0, 116.0], [19.1, 116.0], [19.2, 116.0], [19.3, 116.0], [19.4, 116.0], [19.5, 116.0], [19.6, 116.0], [19.7, 117.0], [19.8, 117.0], [19.9, 117.0], [20.0, 117.0], [20.1, 117.0], [20.2, 117.0], [20.3, 117.0], [20.4, 118.0], [20.5, 118.0], [20.6, 118.0], [20.7, 118.0], [20.8, 118.0], [20.9, 118.0], [21.0, 118.0], [21.1, 118.0], [21.2, 118.0], [21.3, 118.0], [21.4, 118.0], [21.5, 118.0], [21.6, 118.0], [21.7, 118.0], [21.8, 118.0], [21.9, 118.0], [22.0, 118.0], [22.1, 119.0], [22.2, 119.0], [22.3, 119.0], [22.4, 120.0], [22.5, 120.0], [22.6, 120.0], [22.7, 120.0], [22.8, 120.0], [22.9, 120.0], [23.0, 120.0], [23.1, 120.0], [23.2, 120.0], [23.3, 120.0], [23.4, 120.0], [23.5, 120.0], [23.6, 120.0], [23.7, 120.0], [23.8, 120.0], [23.9, 120.0], [24.0, 120.0], [24.1, 120.0], [24.2, 120.0], [24.3, 120.0], [24.4, 120.0], [24.5, 120.0], [24.6, 120.0], [24.7, 120.0], [24.8, 120.0], [24.9, 120.0], [25.0, 120.0], [25.1, 120.0], [25.2, 120.0], [25.3, 120.0], [25.4, 121.0], [25.5, 121.0], [25.6, 121.0], [25.7, 121.0], [25.8, 121.0], [25.9, 121.0], [26.0, 121.0], [26.1, 121.0], [26.2, 121.0], [26.3, 121.0], [26.4, 121.0], [26.5, 121.0], [26.6, 121.0], [26.7, 121.0], [26.8, 121.0], [26.9, 121.0], [27.0, 121.0], [27.1, 121.0], [27.2, 121.0], [27.3, 121.0], [27.4, 122.0], [27.5, 122.0], [27.6, 122.0], [27.7, 122.0], [27.8, 122.0], [27.9, 122.0], [28.0, 122.0], [28.1, 122.0], [28.2, 122.0], [28.3, 122.0], [28.4, 124.0], [28.5, 124.0], [28.6, 124.0], [28.7, 124.0], [28.8, 124.0], [28.9, 124.0], [29.0, 124.0], [29.1, 124.0], [29.2, 124.0], [29.3, 124.0], [29.4, 124.0], [29.5, 124.0], [29.6, 124.0], [29.7, 125.0], [29.8, 125.0], [29.9, 125.0], [30.0, 125.0], [30.1, 125.0], [30.2, 125.0], [30.3, 125.0], [30.4, 129.0], [30.5, 129.0], [30.6, 129.0], [30.7, 131.0], [30.8, 131.0], [30.9, 131.0], [31.0, 134.0], [31.1, 134.0], [31.2, 134.0], [31.3, 134.0], [31.4, 135.0], [31.5, 135.0], [31.6, 135.0], [31.7, 138.0], [31.8, 138.0], [31.9, 138.0], [32.0, 138.0], [32.1, 138.0], [32.2, 138.0], [32.3, 138.0], [32.4, 138.0], [32.5, 138.0], [32.6, 138.0], [32.7, 138.0], [32.8, 138.0], [32.9, 138.0], [33.0, 138.0], [33.1, 138.0], [33.2, 138.0], [33.3, 138.0], [33.4, 139.0], [33.5, 139.0], [33.6, 139.0], [33.7, 139.0], [33.8, 139.0], [33.9, 139.0], [34.0, 139.0], [34.1, 139.0], [34.2, 139.0], [34.3, 139.0], [34.4, 140.0], [34.5, 140.0], [34.6, 140.0], [34.7, 143.0], [34.8, 143.0], [34.9, 143.0], [35.0, 144.0], [35.1, 144.0], [35.2, 144.0], [35.3, 144.0], [35.4, 145.0], [35.5, 145.0], [35.6, 145.0], [35.7, 145.0], [35.8, 145.0], [35.9, 145.0], [36.0, 145.0], [36.1, 145.0], [36.2, 145.0], [36.3, 145.0], [36.4, 145.0], [36.5, 145.0], [36.6, 145.0], [36.7, 145.0], [36.8, 145.0], [36.9, 145.0], [37.0, 145.0], [37.1, 145.0], [37.2, 145.0], [37.3, 145.0], [37.4, 145.0], [37.5, 145.0], [37.6, 145.0], [37.7, 146.0], [37.8, 146.0], [37.9, 146.0], [38.0, 146.0], [38.1, 160.0], [38.2, 160.0], [38.3, 160.0], [38.4, 166.0], [38.5, 166.0], [38.6, 166.0], [38.7, 167.0], [38.8, 167.0], [38.9, 167.0], [39.0, 167.0], [39.1, 167.0], [39.2, 167.0], [39.3, 167.0], [39.4, 167.0], [39.5, 167.0], [39.6, 167.0], [39.7, 167.0], [39.8, 167.0], [39.9, 167.0], [40.0, 167.0], [40.1, 168.0], [40.2, 168.0], [40.3, 168.0], [40.4, 168.0], [40.5, 168.0], [40.6, 168.0], [40.7, 168.0], [40.8, 168.0], [40.9, 168.0], [41.0, 168.0], [41.1, 168.0], [41.2, 168.0], [41.3, 168.0], [41.4, 173.0], [41.5, 173.0], [41.6, 173.0], [41.7, 176.0], [41.8, 176.0], [41.9, 176.0], [42.0, 176.0], [42.1, 177.0], [42.2, 177.0], [42.3, 177.0], [42.4, 182.0], [42.5, 182.0], [42.6, 182.0], [42.7, 183.0], [42.8, 183.0], [42.9, 183.0], [43.0, 183.0], [43.1, 185.0], [43.2, 185.0], [43.3, 185.0], [43.4, 185.0], [43.5, 185.0], [43.6, 185.0], [43.7, 186.0], [43.8, 186.0], [43.9, 186.0], [44.0, 186.0], [44.1, 186.0], [44.2, 186.0], [44.3, 186.0], [44.4, 190.0], [44.5, 190.0], [44.6, 190.0], [44.7, 191.0], [44.8, 191.0], [44.9, 191.0], [45.0, 191.0], [45.1, 191.0], [45.2, 191.0], [45.3, 191.0], [45.4, 192.0], [45.5, 192.0], [45.6, 192.0], [45.7, 192.0], [45.8, 192.0], [45.9, 192.0], [46.0, 192.0], [46.1, 194.0], [46.2, 194.0], [46.3, 194.0], [46.4, 195.0], [46.5, 195.0], [46.6, 195.0], [46.7, 195.0], [46.8, 195.0], [46.9, 195.0], [47.0, 195.0], [47.1, 197.0], [47.2, 197.0], [47.3, 197.0], [47.4, 197.0], [47.5, 197.0], [47.6, 197.0], [47.7, 198.0], [47.8, 198.0], [47.9, 198.0], [48.0, 198.0], [48.1, 198.0], [48.2, 198.0], [48.3, 198.0], [48.4, 198.0], [48.5, 198.0], [48.6, 198.0], [48.7, 198.0], [48.8, 198.0], [48.9, 198.0], [49.0, 198.0], [49.1, 198.0], [49.2, 198.0], [49.3, 198.0], [49.4, 198.0], [49.5, 198.0], [49.6, 198.0], [49.7, 199.0], [49.8, 199.0], [49.9, 199.0], [50.0, 199.0], [50.1, 199.0], [50.2, 199.0], [50.3, 199.0], [50.4, 199.0], [50.5, 199.0], [50.6, 199.0], [50.7, 199.0], [50.8, 199.0], [50.9, 199.0], [51.0, 199.0], [51.1, 200.0], [51.2, 200.0], [51.3, 200.0], [51.4, 200.0], [51.5, 200.0], [51.6, 200.0], [51.7, 200.0], [51.8, 200.0], [51.9, 200.0], [52.0, 200.0], [52.1, 201.0], [52.2, 201.0], [52.3, 201.0], [52.4, 201.0], [52.5, 201.0], [52.6, 201.0], [52.7, 202.0], [52.8, 202.0], [52.9, 202.0], [53.0, 202.0], [53.1, 202.0], [53.2, 202.0], [53.3, 202.0], [53.4, 203.0], [53.5, 203.0], [53.6, 203.0], [53.7, 203.0], [53.8, 203.0], [53.9, 203.0], [54.0, 203.0], [54.1, 203.0], [54.2, 203.0], [54.3, 203.0], [54.4, 203.0], [54.5, 203.0], [54.6, 203.0], [54.7, 203.0], [54.8, 203.0], [54.9, 203.0], [55.0, 203.0], [55.1, 204.0], [55.2, 204.0], [55.3, 204.0], [55.4, 204.0], [55.5, 204.0], [55.6, 204.0], [55.7, 204.0], [55.8, 204.0], [55.9, 204.0], [56.0, 204.0], [56.1, 204.0], [56.2, 204.0], [56.3, 204.0], [56.4, 204.0], [56.5, 204.0], [56.6, 204.0], [56.7, 204.0], [56.8, 204.0], [56.9, 204.0], [57.0, 204.0], [57.1, 204.0], [57.2, 204.0], [57.3, 204.0], [57.4, 205.0], [57.5, 205.0], [57.6, 205.0], [57.7, 205.0], [57.8, 205.0], [57.9, 205.0], [58.0, 205.0], [58.1, 205.0], [58.2, 205.0], [58.3, 205.0], [58.4, 206.0], [58.5, 206.0], [58.6, 206.0], [58.7, 206.0], [58.8, 206.0], [58.9, 206.0], [59.0, 206.0], [59.1, 206.0], [59.2, 206.0], [59.3, 206.0], [59.4, 206.0], [59.5, 206.0], [59.6, 206.0], [59.7, 206.0], [59.8, 206.0], [59.9, 206.0], [60.0, 206.0], [60.1, 207.0], [60.2, 207.0], [60.3, 207.0], [60.4, 207.0], [60.5, 207.0], [60.6, 207.0], [60.7, 207.0], [60.8, 207.0], [60.9, 207.0], [61.0, 207.0], [61.1, 207.0], [61.2, 207.0], [61.3, 207.0], [61.4, 207.0], [61.5, 207.0], [61.6, 207.0], [61.7, 208.0], [61.8, 208.0], [61.9, 208.0], [62.0, 208.0], [62.1, 208.0], [62.2, 208.0], [62.3, 208.0], [62.4, 208.0], [62.5, 208.0], [62.6, 208.0], [62.7, 208.0], [62.8, 208.0], [62.9, 208.0], [63.0, 208.0], [63.1, 209.0], [63.2, 209.0], [63.3, 209.0], [63.4, 209.0], [63.5, 209.0], [63.6, 209.0], [63.7, 209.0], [63.8, 209.0], [63.9, 209.0], [64.0, 209.0], [64.1, 209.0], [64.2, 209.0], [64.3, 209.0], [64.4, 210.0], [64.5, 210.0], [64.6, 210.0], [64.7, 210.0], [64.8, 210.0], [64.9, 210.0], [65.0, 210.0], [65.1, 210.0], [65.2, 210.0], [65.3, 210.0], [65.4, 211.0], [65.5, 211.0], [65.6, 211.0], [65.7, 211.0], [65.8, 211.0], [65.9, 211.0], [66.0, 211.0], [66.1, 212.0], [66.2, 212.0], [66.3, 212.0], [66.4, 212.0], [66.5, 212.0], [66.6, 212.0], [66.7, 212.0], [66.8, 212.0], [66.9, 212.0], [67.0, 212.0], [67.1, 212.0], [67.2, 212.0], [67.3, 212.0], [67.4, 212.0], [67.5, 212.0], [67.6, 212.0], [67.7, 213.0], [67.8, 213.0], [67.9, 213.0], [68.0, 213.0], [68.1, 213.0], [68.2, 213.0], [68.3, 213.0], [68.4, 213.0], [68.5, 213.0], [68.6, 213.0], [68.7, 213.0], [68.8, 213.0], [68.9, 213.0], [69.0, 213.0], [69.1, 213.0], [69.2, 213.0], [69.3, 213.0], [69.4, 213.0], [69.5, 213.0], [69.6, 213.0], [69.7, 214.0], [69.8, 214.0], [69.9, 214.0], [70.0, 214.0], [70.1, 215.0], [70.2, 215.0], [70.3, 215.0], [70.4, 215.0], [70.5, 215.0], [70.6, 215.0], [70.7, 215.0], [70.8, 215.0], [70.9, 215.0], [71.0, 215.0], [71.1, 216.0], [71.2, 216.0], [71.3, 216.0], [71.4, 217.0], [71.5, 217.0], [71.6, 217.0], [71.7, 217.0], [71.8, 217.0], [71.9, 217.0], [72.0, 217.0], [72.1, 217.0], [72.2, 217.0], [72.3, 217.0], [72.4, 218.0], [72.5, 218.0], [72.6, 218.0], [72.7, 218.0], [72.8, 218.0], [72.9, 218.0], [73.0, 218.0], [73.1, 218.0], [73.2, 218.0], [73.3, 218.0], [73.4, 218.0], [73.5, 218.0], [73.6, 218.0], [73.7, 218.0], [73.8, 218.0], [73.9, 218.0], [74.0, 218.0], [74.1, 219.0], [74.2, 219.0], [74.3, 219.0], [74.4, 219.0], [74.5, 219.0], [74.6, 219.0], [74.7, 219.0], [74.8, 219.0], [74.9, 219.0], [75.0, 219.0], [75.1, 219.0], [75.2, 219.0], [75.3, 219.0], [75.4, 219.0], [75.5, 219.0], [75.6, 219.0], [75.7, 219.0], [75.8, 219.0], [75.9, 219.0], [76.0, 219.0], [76.1, 220.0], [76.2, 220.0], [76.3, 220.0], [76.4, 220.0], [76.5, 220.0], [76.6, 220.0], [76.7, 220.0], [76.8, 220.0], [76.9, 220.0], [77.0, 220.0], [77.1, 220.0], [77.2, 220.0], [77.3, 220.0], [77.4, 220.0], [77.5, 220.0], [77.6, 220.0], [77.7, 220.0], [77.8, 220.0], [77.9, 220.0], [78.0, 220.0], [78.1, 220.0], [78.2, 220.0], [78.3, 220.0], [78.4, 220.0], [78.5, 220.0], [78.6, 220.0], [78.7, 220.0], [78.8, 220.0], [78.9, 220.0], [79.0, 220.0], [79.1, 221.0], [79.2, 221.0], [79.3, 221.0], [79.4, 221.0], [79.5, 221.0], [79.6, 221.0], [79.7, 221.0], [79.8, 221.0], [79.9, 221.0], [80.0, 221.0], [80.1, 221.0], [80.2, 221.0], [80.3, 221.0], [80.4, 221.0], [80.5, 221.0], [80.6, 221.0], [80.7, 221.0], [80.8, 221.0], [80.9, 221.0], [81.0, 221.0], [81.1, 221.0], [81.2, 221.0], [81.3, 221.0], [81.4, 221.0], [81.5, 221.0], [81.6, 221.0], [81.7, 222.0], [81.8, 222.0], [81.9, 222.0], [82.0, 222.0], [82.1, 222.0], [82.2, 222.0], [82.3, 222.0], [82.4, 222.0], [82.5, 222.0], [82.6, 222.0], [82.7, 222.0], [82.8, 222.0], [82.9, 222.0], [83.0, 222.0], [83.1, 223.0], [83.2, 223.0], [83.3, 223.0], [83.4, 223.0], [83.5, 223.0], [83.6, 223.0], [83.7, 223.0], [83.8, 223.0], [83.9, 223.0], [84.0, 223.0], [84.1, 223.0], [84.2, 223.0], [84.3, 223.0], [84.4, 224.0], [84.5, 224.0], [84.6, 224.0], [84.7, 224.0], [84.8, 224.0], [84.9, 224.0], [85.0, 224.0], [85.1, 224.0], [85.2, 224.0], [85.3, 224.0], [85.4, 225.0], [85.5, 225.0], [85.6, 225.0], [85.7, 225.0], [85.8, 225.0], [85.9, 225.0], [86.0, 225.0], [86.1, 225.0], [86.2, 225.0], [86.3, 225.0], [86.4, 225.0], [86.5, 225.0], [86.6, 225.0], [86.7, 225.0], [86.8, 225.0], [86.9, 225.0], [87.0, 225.0], [87.1, 226.0], [87.2, 226.0], [87.3, 226.0], [87.4, 226.0], [87.5, 226.0], [87.6, 226.0], [87.7, 226.0], [87.8, 226.0], [87.9, 226.0], [88.0, 226.0], [88.1, 227.0], [88.2, 227.0], [88.3, 227.0], [88.4, 227.0], [88.5, 227.0], [88.6, 227.0], [88.7, 227.0], [88.8, 227.0], [88.9, 227.0], [89.0, 227.0], [89.1, 228.0], [89.2, 228.0], [89.3, 228.0], [89.4, 228.0], [89.5, 228.0], [89.6, 228.0], [89.7, 228.0], [89.8, 228.0], [89.9, 228.0], [90.0, 228.0], [90.1, 229.0], [90.2, 229.0], [90.3, 229.0], [90.4, 230.0], [90.5, 230.0], [90.6, 230.0], [90.7, 230.0], [90.8, 230.0], [90.9, 230.0], [91.0, 230.0], [91.1, 230.0], [91.2, 230.0], [91.3, 230.0], [91.4, 230.0], [91.5, 230.0], [91.6, 230.0], [91.7, 230.0], [91.8, 230.0], [91.9, 230.0], [92.0, 230.0], [92.1, 230.0], [92.2, 230.0], [92.3, 230.0], [92.4, 230.0], [92.5, 230.0], [92.6, 230.0], [92.7, 230.0], [92.8, 230.0], [92.9, 230.0], [93.0, 230.0], [93.1, 230.0], [93.2, 230.0], [93.3, 230.0], [93.4, 231.0], [93.5, 231.0], [93.6, 231.0], [93.7, 231.0], [93.8, 231.0], [93.9, 231.0], [94.0, 231.0], [94.1, 231.0], [94.2, 231.0], [94.3, 231.0], [94.4, 232.0], [94.5, 232.0], [94.6, 232.0], [94.7, 233.0], [94.8, 233.0], [94.9, 233.0], [95.0, 233.0], [95.1, 233.0], [95.2, 233.0], [95.3, 233.0], [95.4, 233.0], [95.5, 233.0], [95.6, 233.0], [95.7, 234.0], [95.8, 234.0], [95.9, 234.0], [96.0, 234.0], [96.1, 234.0], [96.2, 234.0], [96.3, 234.0], [96.4, 234.0], [96.5, 234.0], [96.6, 234.0], [96.7, 235.0], [96.8, 235.0], [96.9, 235.0], [97.0, 235.0], [97.1, 235.0], [97.2, 235.0], [97.3, 235.0], [97.4, 237.0], [97.5, 237.0], [97.6, 237.0], [97.7, 237.0], [97.8, 237.0], [97.9, 237.0], [98.0, 237.0], [98.1, 282.0], [98.2, 282.0], [98.3, 282.0], [98.4, 282.0], [98.5, 282.0], [98.6, 282.0], [98.7, 305.0], [98.8, 305.0], [98.9, 305.0], [99.0, 305.0], [99.1, 314.0], [99.2, 314.0], [99.3, 314.0], [99.4, 396.0], [99.5, 396.0], [99.6, 396.0], [99.7, 397.0], [99.8, 397.0], [99.9, 397.0]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 143.0, "series": [{"data": [[0.0, 29.0], [600.0, 9.0], [700.0, 12.0], [2800.0, 8.0], [3000.0, 18.0], [3100.0, 25.0], [3200.0, 46.0], [3600.0, 37.0], [3900.0, 15.0], [4000.0, 1.0], [100.0, 79.0], [1900.0, 14.0], [500.0, 7.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[44600.0, 2.0], [59000.0, 6.0], [59500.0, 1.0], [62400.0, 76.0], [62900.0, 25.0], [64300.0, 1.0], [65200.0, 2.0], [70400.0, 6.0], [70900.0, 1.0], [72400.0, 11.0], [71100.0, 2.0], [72500.0, 1.0], [71300.0, 7.0], [71400.0, 7.0], [70500.0, 3.0], [77200.0, 3.0], [77700.0, 4.0], [77800.0, 5.0], [76300.0, 14.0], [75000.0, 9.0], [74100.0, 9.0], [78500.0, 17.0], [78600.0, 61.0], [78700.0, 8.0], [78200.0, 7.0], [77900.0, 11.0], [78000.0, 1.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[600.0, 8.0], [700.0, 14.0], [2800.0, 6.0], [2900.0, 6.0], [200.0, 86.0], [900.0, 9.0], [3800.0, 8.0], [3900.0, 8.0], [300.0, 3.0], [5300.0, 2.0], [5400.0, 63.0], [5500.0, 6.0], [5800.0, 7.0], [5700.0, 1.0], [100.0, 38.0], [6500.0, 25.0], [1800.0, 9.0], [500.0, 1.0]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[34200.0, 2.0], [8600.0, 1.0], [8700.0, 5.0], [2100.0, 3.0], [8400.0, 76.0], [600.0, 11.0], [700.0, 113.0], [800.0, 36.0], [13800.0, 2.0], [14700.0, 1.0], [19900.0, 6.0], [19500.0, 1.0], [6200.0, 19.0], [6300.0, 6.0], [400.0, 14.0], [8100.0, 1.0], [500.0, 3.0]], "isOverall": false, "label": "POST /graphql - Page Search", "isController": false}, {"data": [[0.0, 21.0], [300.0, 4.0], [100.0, 132.0], [200.0, 143.0]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 78700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 223.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 728.0, "series": [{"data": [[0.0, 549.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 223.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [[2.0, 728.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 111.8565022421526, "minX": 1.608755655E12, "maxY": 300.0, "series": [{"data": [[1.608755732E12, 300.0], [1.608755733E12, 300.0], [1.608755665E12, 300.0], [1.608755662E12, 300.0], [1.608755726E12, 300.0], [1.608755663E12, 300.0], [1.608755728E12, 300.0], [1.608755664E12, 300.0], [1.608755659E12, 300.0], [1.60875566E12, 300.0], [1.608755725E12, 300.0], [1.608755661E12, 300.0], [1.608755699E12, 300.0], [1.608755657E12, 300.0], [1.608755658E12, 300.0], [1.608755655E12, 178.08679245283028], [1.60875572E12, 300.0], [1.608755656E12, 300.0], [1.608755719E12, 300.0], [1.608755734E12, 243.95780590717297], [1.608755714E12, 300.0], [1.608755735E12, 111.8565022421526]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608755735E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 65.85714285714285, "minX": 15.0, "maxY": 72277.33333333333, "series": [{"data": [[149.0, 65.85714285714285], [154.0, 78.0], [160.0, 90.0], [161.0, 88.77777777777777], [162.0, 92.75], [173.0, 116.64285714285714], [172.0, 116.0], [181.0, 129.1666666666667], [182.0, 121.99999999999999], [183.0, 119.0], [189.0, 132.0], [191.0, 133.0], [199.0, 128.14285714285714], [200.0, 126.33333333333333], [208.0, 101.5], [222.0, 140.0], [300.0, 2877.8906249999986]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[255.82666666666665, 1882.4399999999991]], "isOverall": false, "label": "GET /login-Aggregated", "isController": false}, {"data": [[281.0, 71256.23529411764], [300.0, 71011.520295203], [298.0, 72277.33333333333]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[298.8433333333333, 71076.02000000003]], "isOverall": false, "label": "POST /graphql - Login-Aggregated", "isController": false}, {"data": [[130.0, 225.72727272727272], [131.0, 236.0], [132.0, 232.125], [133.0, 218.0], [134.0, 245.8], [135.0, 241.5], [137.0, 250.33333333333334], [138.0, 237.9285714285714], [140.0, 195.0], [143.0, 193.88888888888889], [146.0, 175.5], [147.0, 165.0], [156.0, 178.14285714285714], [157.0, 171.0], [159.0, 169.5], [173.0, 201.0], [201.0, 272.5], [205.0, 276.4], [213.0, 296.0], [215.0, 285.85714285714283], [228.0, 307.25], [300.0, 4257.323699421964], [126.0, 217.0]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[236.48333333333343, 2551.1366666666663]], "isOverall": false, "label": "GET /-Aggregated", "isController": false}, {"data": [[167.0, 4577.204081632653], [168.0, 7226.927536231882], [182.0, 721.0], [181.0, 3822.2], [191.0, 5380.8], [190.0, 8462.8], [189.0, 727.6666666666666], [198.0, 1272.8749999999998], [193.0, 755.5], [200.0, 719.5], [214.0, 737.0], [208.0, 731.1874999999999], [218.0, 753.4444444444446], [228.0, 758.1999999999999], [245.0, 792.0], [249.0, 787.8888888888889], [268.0, 798.0], [281.0, 871.777777777778], [277.0, 784.3333333333333], [300.0, 20867.166666666668], [298.0, 8635.857142857143]], "isOverall": false, "label": "POST /graphql - Page Search", "isController": false}, {"data": [[215.58666666666676, 4164.930000000002]], "isOverall": false, "label": "POST /graphql - Page Search-Aggregated", "isController": false}, {"data": [[15.0, 308.75], [19.0, 221.86666666666667], [21.0, 221.0], [33.0, 221.0], [35.0, 226.0], [36.0, 220.0], [39.0, 226.66666666666666], [38.0, 227.875], [48.0, 231.36363636363635], [56.0, 233.16666666666669], [57.0, 234.0], [95.0, 228.6], [96.0, 217.25714285714292], [109.0, 204.64285714285714], [122.0, 204.76923076923077], [139.0, 208.05882352941177], [145.0, 199.2], [157.0, 198.5], [155.0, 203.0], [154.0, 211.8], [167.0, 173.0], [166.0, 176.5], [164.0, 282.0], [162.0, 217.2], [168.0, 131.0], [182.0, 138.33333333333334], [181.0, 137.57142857142858], [190.0, 145.0], [189.0, 144.66666666666666], [199.0, 85.0], [198.0, 167.33333333333334], [193.0, 160.0], [200.0, 89.0], [214.0, 105.0], [209.0, 86.0], [208.0, 85.25000000000001], [218.0, 102.0], [228.0, 115.0], [238.0, 118.0], [235.0, 120.28571428571429], [245.0, 120.42857142857143], [249.0, 119.25], [268.0, 115.5], [262.0, 121.75], [258.0, 122.22222222222223], [287.0, 96.0], [286.0, 86.0], [285.0, 92.25], [281.0, 90.5], [279.0, 95.0], [278.0, 96.0], [277.0, 111.22222222222223], [300.0, 186.0], [298.0, 138.0], [297.0, 186.99999999999997], [290.0, 117.5], [288.0, 103.0]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page", "isController": false}, {"data": [[157.17000000000013, 176.73999999999992]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 714.0, "minX": 1.608755655E12, "maxY": 688166.0, "series": [{"data": [[1.608755732E12, 4335.0], [1.608755733E12, 115600.0], [1.608755665E12, 51500.0], [1.608755662E12, 72350.0], [1.608755726E12, 62853.0], [1.608755663E12, 32960.0], [1.608755728E12, 20200.0], [1.608755664E12, 162740.0], [1.608755659E12, 64844.0], [1.60875566E12, 224014.0], [1.608755725E12, 8670.0], [1.608755661E12, 47872.0], [1.608755699E12, 2890.0], [1.608755657E12, 54886.0], [1.608755658E12, 34728.0], [1.608755655E12, 671000.0], [1.60875572E12, 2890.0], [1.608755656E12, 69306.0], [1.608755719E12, 1445.0], [1.608755734E12, 688166.0], [1.608755714E12, 10115.0], [1.608755735E12, 526599.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.608755732E12, 2142.0], [1.608755733E12, 57120.0], [1.608755665E12, 3225.0], [1.608755662E12, 3100.0], [1.608755726E12, 54978.0], [1.608755663E12, 2064.0], [1.608755728E12, 17850.0], [1.608755664E12, 10191.0], [1.608755659E12, 3145.0], [1.60875566E12, 9965.0], [1.608755725E12, 4284.0], [1.608755661E12, 2540.0], [1.608755699E12, 1428.0], [1.608755657E12, 2922.0], [1.608755658E12, 1488.0], [1.608755655E12, 33435.0], [1.60875572E12, 1428.0], [1.608755656E12, 3825.0], [1.608755719E12, 714.0], [1.608755734E12, 460462.0], [1.608755714E12, 4998.0], [1.608755735E12, 123112.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608755735E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 124.22556390977442, "minX": 1.608755655E12, "maxY": 78638.9625, "series": [{"data": [[1.608755657E12, 1934.1428571428569], [1.608755665E12, 3680.4], [1.608755655E12, 138.46956521739128], [1.608755656E12, 683.2857142857143], [1.608755663E12, 3993.6875], [1.608755664E12, 3199.9367088607587], [1.608755659E12, 3032.666666666666], [1.60875566E12, 3023.222222222222], [1.608755661E12, 3681.166666666667]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.608755699E12, 44630.0], [1.608755732E12, 77255.33333333333], [1.608755733E12, 78638.9625], [1.60875572E12, 65281.5], [1.608755719E12, 64315.0], [1.608755726E12, 62528.23376623377], [1.608755728E12, 62917.16], [1.608755734E12, 75173.03092783508], [1.608755725E12, 70438.0], [1.608755714E12, 59110.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.608755657E12, 1868.111111111111], [1.608755658E12, 2899.0833333333335], [1.608755655E12, 296.9666666666666], [1.608755656E12, 943.0], [1.608755662E12, 6562.600000000001], [1.608755659E12, 3902.625], [1.60875566E12, 5457.281690140845], [1.608755661E12, 5841.625]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[1.608755734E12, 3958.7622950819655], [1.608755735E12, 5063.232142857142]], "isOverall": false, "label": "POST /graphql - Page Search", "isController": false}, {"data": [[1.608755734E12, 124.22556390977442], [1.608755735E12, 218.562874251497]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608755735E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 124.09022556390985, "minX": 1.608755655E12, "maxY": 78638.94999999998, "series": [{"data": [[1.608755657E12, 1934.1428571428569], [1.608755665E12, 3680.4], [1.608755655E12, 138.3739130434783], [1.608755656E12, 683.2857142857143], [1.608755663E12, 3993.4375], [1.608755664E12, 3199.9113924050625], [1.608755659E12, 3032.666666666666], [1.60875566E12, 3023.0], [1.608755661E12, 3681.166666666667]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.608755699E12, 44630.0], [1.608755732E12, 77255.33333333333], [1.608755733E12, 78638.94999999998], [1.60875572E12, 65281.0], [1.608755719E12, 64315.0], [1.608755726E12, 62528.23376623377], [1.608755728E12, 62917.12], [1.608755734E12, 75173.02061855674], [1.608755725E12, 70438.0], [1.608755714E12, 59109.71428571428]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.608755657E12, 1868.111111111111], [1.608755658E12, 2898.833333333334], [1.608755655E12, 296.5933333333334], [1.608755656E12, 943.0], [1.608755662E12, 6562.079999999999], [1.608755659E12, 3901.75], [1.60875566E12, 5456.845070422536], [1.608755661E12, 5841.625]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[1.608755734E12, 3958.7499999999995], [1.608755735E12, 5063.160714285715]], "isOverall": false, "label": "POST /graphql - Page Search", "isController": false}, {"data": [[1.608755734E12, 124.09022556390985], [1.608755735E12, 218.11976047904204]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608755735E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.608755655E12, "maxY": 98.00000000000001, "series": [{"data": [[1.608755657E12, 0.0], [1.608755665E12, 0.0], [1.608755655E12, 0.0], [1.608755656E12, 0.0], [1.608755663E12, 0.0], [1.608755664E12, 0.0], [1.608755659E12, 0.0], [1.60875566E12, 0.0], [1.608755661E12, 0.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.608755699E12, 0.0], [1.608755732E12, 0.0], [1.608755733E12, 0.0], [1.60875572E12, 0.0], [1.608755719E12, 0.0], [1.608755726E12, 0.0], [1.608755728E12, 0.0], [1.608755734E12, 0.0], [1.608755725E12, 0.0], [1.608755714E12, 0.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.608755657E12, 51.55555555555556], [1.608755658E12, 56.91666666666667], [1.608755655E12, 73.84666666666664], [1.608755656E12, 56.44444444444444], [1.608755662E12, 98.00000000000001], [1.608755659E12, 53.75000000000001], [1.60875566E12, 51.408450704225345], [1.608755661E12, 51.875]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[1.608755734E12, 54.975409836065566], [1.608755735E12, 56.94642857142858]], "isOverall": false, "label": "POST /graphql - Page Search", "isController": false}, {"data": [[1.608755734E12, 3.646616541353387], [1.608755735E12, 0.0]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608755735E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 65.0, "minX": 1.608755655E12, "maxY": 78751.0, "series": [{"data": [[1.608755732E12, 77257.0], [1.608755733E12, 78711.0], [1.608755665E12, 3688.0], [1.608755662E12, 6597.0], [1.608755726E12, 70994.0], [1.608755663E12, 4009.0], [1.608755728E12, 62927.0], [1.608755664E12, 3298.0], [1.608755659E12, 3930.0], [1.60875566E12, 5515.0], [1.608755725E12, 70454.0], [1.608755661E12, 5882.0], [1.608755699E12, 44630.0], [1.608755657E12, 1937.0], [1.608755658E12, 2917.0], [1.608755655E12, 747.0], [1.60875572E12, 65282.0], [1.608755656E12, 954.0], [1.608755719E12, 64315.0], [1.608755734E12, 78751.0], [1.608755714E12, 59515.0], [1.608755735E12, 8477.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.608755732E12, 77257.0], [1.608755733E12, 78689.7], [1.608755665E12, 3687.4], [1.608755662E12, 6588.8], [1.608755726E12, 62421.0], [1.608755663E12, 3999.9], [1.608755728E12, 62923.4], [1.608755664E12, 3282.0], [1.608755659E12, 3919.0], [1.60875566E12, 5498.8], [1.608755725E12, 70454.0], [1.608755661E12, 5878.6], [1.608755699E12, 44630.0], [1.608755657E12, 1937.0], [1.608755658E12, 2915.2], [1.608755655E12, 533.0], [1.60875572E12, 65282.0], [1.608755656E12, 950.6], [1.608755719E12, 64315.0], [1.608755734E12, 76352.0], [1.608755714E12, 59515.0], [1.608755735E12, 6295.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.608755732E12, 77257.0], [1.608755733E12, 78711.0], [1.608755665E12, 3688.0], [1.608755662E12, 6597.0], [1.608755726E12, 70994.0], [1.608755663E12, 4009.0], [1.608755728E12, 62927.0], [1.608755664E12, 3298.0], [1.608755659E12, 3930.0], [1.60875566E12, 5515.0], [1.608755725E12, 70454.0], [1.608755661E12, 5882.0], [1.608755699E12, 44630.0], [1.608755657E12, 1937.0], [1.608755658E12, 2917.0], [1.608755655E12, 739.6999999999998], [1.60875572E12, 65282.0], [1.608755656E12, 954.0], [1.608755719E12, 64315.0], [1.608755734E12, 78726.0], [1.608755714E12, 59515.0], [1.608755735E12, 8476.76]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.608755732E12, 77257.0], [1.608755733E12, 78699.0], [1.608755665E12, 3688.0], [1.608755662E12, 6595.8], [1.608755726E12, 62423.1], [1.608755663E12, 4009.0], [1.608755728E12, 62926.1], [1.608755664E12, 3284.0], [1.608755659E12, 3927.6], [1.60875566E12, 5506.95], [1.608755725E12, 70454.0], [1.608755661E12, 5881.85], [1.608755699E12, 44630.0], [1.608755657E12, 1937.0], [1.608755658E12, 2917.0], [1.608755655E12, 712.0999999999999], [1.60875572E12, 65282.0], [1.608755656E12, 952.9], [1.608755719E12, 64315.0], [1.608755734E12, 77983.25], [1.608755714E12, 59515.0], [1.608755735E12, 8465.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.608755732E12, 77254.0], [1.608755733E12, 78574.0], [1.608755665E12, 3675.0], [1.608755662E12, 6532.0], [1.608755726E12, 62405.0], [1.608755663E12, 3989.0], [1.608755728E12, 62910.0], [1.608755664E12, 2809.0], [1.608755659E12, 3031.0], [1.60875566E12, 3022.0], [1.608755725E12, 70434.0], [1.608755661E12, 3679.0], [1.608755699E12, 44630.0], [1.608755657E12, 1853.0], [1.608755658E12, 2881.0], [1.608755655E12, 65.0], [1.60875572E12, 65281.0], [1.608755656E12, 621.0], [1.608755719E12, 64315.0], [1.608755734E12, 84.0], [1.608755714E12, 59033.0], [1.608755735E12, 173.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.608755732E12, 77255.0], [1.608755733E12, 78633.0], [1.608755665E12, 3681.0], [1.608755662E12, 6563.0], [1.608755726E12, 62418.0], [1.608755663E12, 3993.0], [1.608755728E12, 62917.0], [1.608755664E12, 3254.0], [1.608755659E12, 3891.0], [1.60875566E12, 5454.0], [1.608755725E12, 70435.0], [1.608755661E12, 3683.0], [1.608755699E12, 44630.0], [1.608755657E12, 1932.0], [1.608755658E12, 2899.0], [1.608755655E12, 187.0], [1.60875572E12, 65281.5], [1.608755656E12, 742.0], [1.608755719E12, 64315.0], [1.608755734E12, 792.0], [1.608755714E12, 59047.0], [1.608755735E12, 221.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608755735E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 187.0, "minX": 1.0, "maxY": 77255.0, "series": [{"data": [[2.0, 54955.5], [12.0, 2899.0], [3.0, 77255.0], [223.0, 221.0], [265.0, 187.0], [16.0, 3993.0], [1.0, 64315.0], [79.0, 3254.0], [77.0, 62418.0], [80.0, 42044.5], [20.0, 3683.0], [23.0, 1932.0], [6.0, 70435.0], [25.0, 5231.0], [7.0, 59047.0], [474.0, 792.0], [30.0, 742.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 474.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 187.0, "minX": 1.0, "maxY": 77255.0, "series": [{"data": [[2.0, 54955.0], [12.0, 2899.0], [3.0, 77255.0], [223.0, 221.0], [265.0, 187.0], [16.0, 3993.0], [1.0, 64315.0], [79.0, 3254.0], [77.0, 62418.0], [80.0, 42044.5], [20.0, 3683.0], [23.0, 1932.0], [6.0, 70435.0], [25.0, 5227.0], [7.0, 59047.0], [474.0, 792.0], [30.0, 742.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 474.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.608755654E12, "maxY": 464.0, "series": [{"data": [[1.608755732E12, 3.0], [1.608755733E12, 80.0], [1.608755665E12, 25.0], [1.608755662E12, 25.0], [1.608755726E12, 77.0], [1.608755663E12, 16.0], [1.608755728E12, 25.0], [1.608755664E12, 79.0], [1.608755659E12, 25.0], [1.60875566E12, 80.0], [1.608755725E12, 6.0], [1.608755661E12, 20.0], [1.608755699E12, 2.0], [1.608755657E12, 23.0], [1.608755658E12, 12.0], [1.608755654E12, 101.0], [1.608755655E12, 464.0], [1.60875572E12, 2.0], [1.608755656E12, 30.0], [1.608755719E12, 1.0], [1.608755734E12, 280.0], [1.608755714E12, 7.0], [1.608755735E12, 117.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608755735E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.608755655E12, "maxY": 474.0, "series": [{"data": [[1.608755732E12, 3.0], [1.608755733E12, 80.0], [1.608755665E12, 25.0], [1.608755662E12, 25.0], [1.608755726E12, 77.0], [1.608755663E12, 16.0], [1.608755728E12, 25.0], [1.608755664E12, 79.0], [1.608755659E12, 25.0], [1.60875566E12, 80.0], [1.608755725E12, 6.0], [1.608755661E12, 20.0], [1.608755699E12, 2.0], [1.608755657E12, 23.0], [1.608755658E12, 12.0], [1.608755655E12, 265.0], [1.60875572E12, 2.0], [1.608755656E12, 30.0], [1.608755719E12, 1.0], [1.608755734E12, 474.0], [1.608755714E12, 7.0], [1.608755735E12, 223.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608755735E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.608755655E12, "maxY": 244.0, "series": [{"data": [[1.608755657E12, 9.0], [1.608755658E12, 12.0], [1.608755655E12, 150.0], [1.608755656E12, 9.0], [1.608755662E12, 25.0], [1.608755659E12, 16.0], [1.60875566E12, 71.0], [1.608755661E12, 8.0]], "isOverall": false, "label": "GET /-success", "isController": false}, {"data": [[1.608755699E12, 2.0], [1.608755732E12, 3.0], [1.608755733E12, 80.0], [1.60875572E12, 2.0], [1.608755719E12, 1.0], [1.608755726E12, 77.0], [1.608755728E12, 25.0], [1.608755734E12, 97.0], [1.608755725E12, 6.0], [1.608755714E12, 7.0]], "isOverall": false, "label": "POST /graphql - Login-success", "isController": false}, {"data": [[1.608755657E12, 14.0], [1.608755665E12, 25.0], [1.608755655E12, 115.0], [1.608755656E12, 21.0], [1.608755663E12, 16.0], [1.608755664E12, 79.0], [1.608755659E12, 9.0], [1.60875566E12, 9.0], [1.608755661E12, 12.0]], "isOverall": false, "label": "GET /login-success", "isController": false}, {"data": [[1.608755734E12, 244.0], [1.608755735E12, 56.0]], "isOverall": false, "label": "POST /graphql - Page Search-success", "isController": false}, {"data": [[1.608755734E12, 133.0], [1.608755735E12, 167.0]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608755735E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.608755655E12, "maxY": 474.0, "series": [{"data": [[1.608755732E12, 3.0], [1.608755733E12, 80.0], [1.608755665E12, 25.0], [1.608755662E12, 25.0], [1.608755726E12, 77.0], [1.608755663E12, 16.0], [1.608755728E12, 25.0], [1.608755664E12, 79.0], [1.608755659E12, 25.0], [1.60875566E12, 80.0], [1.608755725E12, 6.0], [1.608755661E12, 20.0], [1.608755699E12, 2.0], [1.608755657E12, 23.0], [1.608755658E12, 12.0], [1.608755655E12, 265.0], [1.60875572E12, 2.0], [1.608755656E12, 30.0], [1.608755719E12, 1.0], [1.608755734E12, 474.0], [1.608755714E12, 7.0], [1.608755735E12, 223.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608755735E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

