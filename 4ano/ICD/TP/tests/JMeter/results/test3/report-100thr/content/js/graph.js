/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 54.0, "minX": 0.0, "maxY": 38854.0, "series": [{"data": [[0.0, 81.0], [0.1, 81.0], [0.2, 81.0], [0.3, 81.0], [0.4, 81.0], [0.5, 81.0], [0.6, 81.0], [0.7, 81.0], [0.8, 81.0], [0.9, 81.0], [1.0, 84.0], [1.1, 84.0], [1.2, 84.0], [1.3, 84.0], [1.4, 84.0], [1.5, 84.0], [1.6, 84.0], [1.7, 84.0], [1.8, 84.0], [1.9, 84.0], [2.0, 100.0], [2.1, 100.0], [2.2, 100.0], [2.3, 100.0], [2.4, 100.0], [2.5, 100.0], [2.6, 100.0], [2.7, 100.0], [2.8, 100.0], [2.9, 100.0], [3.0, 101.0], [3.1, 101.0], [3.2, 101.0], [3.3, 101.0], [3.4, 101.0], [3.5, 101.0], [3.6, 101.0], [3.7, 101.0], [3.8, 101.0], [3.9, 101.0], [4.0, 101.0], [4.1, 101.0], [4.2, 101.0], [4.3, 101.0], [4.4, 101.0], [4.5, 101.0], [4.6, 101.0], [4.7, 101.0], [4.8, 101.0], [4.9, 101.0], [5.0, 101.0], [5.1, 101.0], [5.2, 101.0], [5.3, 101.0], [5.4, 101.0], [5.5, 101.0], [5.6, 101.0], [5.7, 101.0], [5.8, 101.0], [5.9, 101.0], [6.0, 109.0], [6.1, 109.0], [6.2, 109.0], [6.3, 109.0], [6.4, 109.0], [6.5, 109.0], [6.6, 109.0], [6.7, 109.0], [6.8, 109.0], [6.9, 109.0], [7.0, 111.0], [7.1, 111.0], [7.2, 111.0], [7.3, 111.0], [7.4, 111.0], [7.5, 111.0], [7.6, 111.0], [7.7, 111.0], [7.8, 111.0], [7.9, 111.0], [8.0, 114.0], [8.1, 114.0], [8.2, 114.0], [8.3, 114.0], [8.4, 114.0], [8.5, 114.0], [8.6, 114.0], [8.7, 114.0], [8.8, 114.0], [8.9, 114.0], [9.0, 115.0], [9.1, 115.0], [9.2, 115.0], [9.3, 115.0], [9.4, 115.0], [9.5, 115.0], [9.6, 115.0], [9.7, 115.0], [9.8, 115.0], [9.9, 115.0], [10.0, 115.0], [10.1, 115.0], [10.2, 115.0], [10.3, 115.0], [10.4, 115.0], [10.5, 115.0], [10.6, 115.0], [10.7, 115.0], [10.8, 115.0], [10.9, 115.0], [11.0, 115.0], [11.1, 115.0], [11.2, 115.0], [11.3, 115.0], [11.4, 115.0], [11.5, 115.0], [11.6, 115.0], [11.7, 115.0], [11.8, 115.0], [11.9, 115.0], [12.0, 116.0], [12.1, 116.0], [12.2, 116.0], [12.3, 116.0], [12.4, 116.0], [12.5, 116.0], [12.6, 116.0], [12.7, 116.0], [12.8, 116.0], [12.9, 116.0], [13.0, 116.0], [13.1, 116.0], [13.2, 116.0], [13.3, 116.0], [13.4, 116.0], [13.5, 116.0], [13.6, 116.0], [13.7, 116.0], [13.8, 116.0], [13.9, 116.0], [14.0, 116.0], [14.1, 116.0], [14.2, 116.0], [14.3, 116.0], [14.4, 116.0], [14.5, 116.0], [14.6, 116.0], [14.7, 116.0], [14.8, 116.0], [14.9, 116.0], [15.0, 116.0], [15.1, 116.0], [15.2, 116.0], [15.3, 116.0], [15.4, 116.0], [15.5, 116.0], [15.6, 116.0], [15.7, 116.0], [15.8, 116.0], [15.9, 116.0], [16.0, 117.0], [16.1, 117.0], [16.2, 117.0], [16.3, 117.0], [16.4, 117.0], [16.5, 117.0], [16.6, 117.0], [16.7, 117.0], [16.8, 117.0], [16.9, 117.0], [17.0, 117.0], [17.1, 117.0], [17.2, 117.0], [17.3, 117.0], [17.4, 117.0], [17.5, 117.0], [17.6, 117.0], [17.7, 117.0], [17.8, 117.0], [17.9, 117.0], [18.0, 122.0], [18.1, 122.0], [18.2, 122.0], [18.3, 122.0], [18.4, 122.0], [18.5, 122.0], [18.6, 122.0], [18.7, 122.0], [18.8, 122.0], [18.9, 122.0], [19.0, 122.0], [19.1, 122.0], [19.2, 122.0], [19.3, 122.0], [19.4, 122.0], [19.5, 122.0], [19.6, 122.0], [19.7, 122.0], [19.8, 122.0], [19.9, 122.0], [20.0, 123.0], [20.1, 123.0], [20.2, 123.0], [20.3, 123.0], [20.4, 123.0], [20.5, 123.0], [20.6, 123.0], [20.7, 123.0], [20.8, 123.0], [20.9, 123.0], [21.0, 125.0], [21.1, 125.0], [21.2, 125.0], [21.3, 125.0], [21.4, 125.0], [21.5, 125.0], [21.6, 125.0], [21.7, 125.0], [21.8, 125.0], [21.9, 125.0], [22.0, 548.0], [22.1, 548.0], [22.2, 548.0], [22.3, 548.0], [22.4, 548.0], [22.5, 548.0], [22.6, 548.0], [22.7, 548.0], [22.8, 548.0], [22.9, 548.0], [23.0, 578.0], [23.1, 578.0], [23.2, 578.0], [23.3, 578.0], [23.4, 578.0], [23.5, 578.0], [23.6, 578.0], [23.7, 578.0], [23.8, 578.0], [23.9, 578.0], [24.0, 578.0], [24.1, 578.0], [24.2, 578.0], [24.3, 578.0], [24.4, 578.0], [24.5, 578.0], [24.6, 578.0], [24.7, 578.0], [24.8, 578.0], [24.9, 578.0], [25.0, 579.0], [25.1, 579.0], [25.2, 579.0], [25.3, 579.0], [25.4, 579.0], [25.5, 579.0], [25.6, 579.0], [25.7, 579.0], [25.8, 579.0], [25.9, 579.0], [26.0, 580.0], [26.1, 580.0], [26.2, 580.0], [26.3, 580.0], [26.4, 580.0], [26.5, 580.0], [26.6, 580.0], [26.7, 580.0], [26.8, 580.0], [26.9, 580.0], [27.0, 580.0], [27.1, 580.0], [27.2, 580.0], [27.3, 580.0], [27.4, 580.0], [27.5, 580.0], [27.6, 580.0], [27.7, 580.0], [27.8, 580.0], [27.9, 580.0], [28.0, 600.0], [28.1, 600.0], [28.2, 600.0], [28.3, 600.0], [28.4, 600.0], [28.5, 600.0], [28.6, 600.0], [28.7, 600.0], [28.8, 600.0], [28.9, 600.0], [29.0, 600.0], [29.1, 600.0], [29.2, 600.0], [29.3, 600.0], [29.4, 600.0], [29.5, 600.0], [29.6, 600.0], [29.7, 600.0], [29.8, 600.0], [29.9, 600.0], [30.0, 601.0], [30.1, 601.0], [30.2, 601.0], [30.3, 601.0], [30.4, 601.0], [30.5, 601.0], [30.6, 601.0], [30.7, 601.0], [30.8, 601.0], [30.9, 601.0], [31.0, 601.0], [31.1, 601.0], [31.2, 601.0], [31.3, 601.0], [31.4, 601.0], [31.5, 601.0], [31.6, 601.0], [31.7, 601.0], [31.8, 601.0], [31.9, 601.0], [32.0, 615.0], [32.1, 615.0], [32.2, 615.0], [32.3, 615.0], [32.4, 615.0], [32.5, 615.0], [32.6, 615.0], [32.7, 615.0], [32.8, 615.0], [32.9, 615.0], [33.0, 761.0], [33.1, 761.0], [33.2, 761.0], [33.3, 761.0], [33.4, 761.0], [33.5, 761.0], [33.6, 761.0], [33.7, 761.0], [33.8, 761.0], [33.9, 761.0], [34.0, 761.0], [34.1, 761.0], [34.2, 761.0], [34.3, 761.0], [34.4, 761.0], [34.5, 761.0], [34.6, 761.0], [34.7, 761.0], [34.8, 761.0], [34.9, 761.0], [35.0, 2964.0], [35.1, 2964.0], [35.2, 2964.0], [35.3, 2964.0], [35.4, 2964.0], [35.5, 2964.0], [35.6, 2964.0], [35.7, 2964.0], [35.8, 2964.0], [35.9, 2964.0], [36.0, 2964.0], [36.1, 2964.0], [36.2, 2964.0], [36.3, 2964.0], [36.4, 2964.0], [36.5, 2964.0], [36.6, 2964.0], [36.7, 2964.0], [36.8, 2964.0], [36.9, 2964.0], [37.0, 2964.0], [37.1, 2964.0], [37.2, 2964.0], [37.3, 2964.0], [37.4, 2964.0], [37.5, 2964.0], [37.6, 2964.0], [37.7, 2964.0], [37.8, 2964.0], [37.9, 2964.0], [38.0, 2964.0], [38.1, 2964.0], [38.2, 2964.0], [38.3, 2964.0], [38.4, 2964.0], [38.5, 2964.0], [38.6, 2964.0], [38.7, 2964.0], [38.8, 2964.0], [38.9, 2964.0], [39.0, 2965.0], [39.1, 2965.0], [39.2, 2965.0], [39.3, 2965.0], [39.4, 2965.0], [39.5, 2965.0], [39.6, 2965.0], [39.7, 2965.0], [39.8, 2965.0], [39.9, 2965.0], [40.0, 2967.0], [40.1, 2967.0], [40.2, 2967.0], [40.3, 2967.0], [40.4, 2967.0], [40.5, 2967.0], [40.6, 2967.0], [40.7, 2967.0], [40.8, 2967.0], [40.9, 2967.0], [41.0, 2974.0], [41.1, 2974.0], [41.2, 2974.0], [41.3, 2974.0], [41.4, 2974.0], [41.5, 2974.0], [41.6, 2974.0], [41.7, 2974.0], [41.8, 2974.0], [41.9, 2974.0], [42.0, 2975.0], [42.1, 2975.0], [42.2, 2975.0], [42.3, 2975.0], [42.4, 2975.0], [42.5, 2975.0], [42.6, 2975.0], [42.7, 2975.0], [42.8, 2975.0], [42.9, 2975.0], [43.0, 2975.0], [43.1, 2975.0], [43.2, 2975.0], [43.3, 2975.0], [43.4, 2975.0], [43.5, 2975.0], [43.6, 2975.0], [43.7, 2975.0], [43.8, 2975.0], [43.9, 2975.0], [44.0, 2976.0], [44.1, 2976.0], [44.2, 2976.0], [44.3, 2976.0], [44.4, 2976.0], [44.5, 2976.0], [44.6, 2976.0], [44.7, 2976.0], [44.8, 2976.0], [44.9, 2976.0], [45.0, 2976.0], [45.1, 2976.0], [45.2, 2976.0], [45.3, 2976.0], [45.4, 2976.0], [45.5, 2976.0], [45.6, 2976.0], [45.7, 2976.0], [45.8, 2976.0], [45.9, 2976.0], [46.0, 2977.0], [46.1, 2977.0], [46.2, 2977.0], [46.3, 2977.0], [46.4, 2977.0], [46.5, 2977.0], [46.6, 2977.0], [46.7, 2977.0], [46.8, 2977.0], [46.9, 2977.0], [47.0, 2977.0], [47.1, 2977.0], [47.2, 2977.0], [47.3, 2977.0], [47.4, 2977.0], [47.5, 2977.0], [47.6, 2977.0], [47.7, 2977.0], [47.8, 2977.0], [47.9, 2977.0], [48.0, 2977.0], [48.1, 2977.0], [48.2, 2977.0], [48.3, 2977.0], [48.4, 2977.0], [48.5, 2977.0], [48.6, 2977.0], [48.7, 2977.0], [48.8, 2977.0], [48.9, 2977.0], [49.0, 2977.0], [49.1, 2977.0], [49.2, 2977.0], [49.3, 2977.0], [49.4, 2977.0], [49.5, 2977.0], [49.6, 2977.0], [49.7, 2977.0], [49.8, 2977.0], [49.9, 2977.0], [50.0, 2978.0], [50.1, 2978.0], [50.2, 2978.0], [50.3, 2978.0], [50.4, 2978.0], [50.5, 2978.0], [50.6, 2978.0], [50.7, 2978.0], [50.8, 2978.0], [50.9, 2978.0], [51.0, 2979.0], [51.1, 2979.0], [51.2, 2979.0], [51.3, 2979.0], [51.4, 2979.0], [51.5, 2979.0], [51.6, 2979.0], [51.7, 2979.0], [51.8, 2979.0], [51.9, 2979.0], [52.0, 2979.0], [52.1, 2979.0], [52.2, 2979.0], [52.3, 2979.0], [52.4, 2979.0], [52.5, 2979.0], [52.6, 2979.0], [52.7, 2979.0], [52.8, 2979.0], [52.9, 2979.0], [53.0, 2979.0], [53.1, 2979.0], [53.2, 2979.0], [53.3, 2979.0], [53.4, 2979.0], [53.5, 2979.0], [53.6, 2979.0], [53.7, 2979.0], [53.8, 2979.0], [53.9, 2979.0], [54.0, 2981.0], [54.1, 2981.0], [54.2, 2981.0], [54.3, 2981.0], [54.4, 2981.0], [54.5, 2981.0], [54.6, 2981.0], [54.7, 2981.0], [54.8, 2981.0], [54.9, 2981.0], [55.0, 2981.0], [55.1, 2981.0], [55.2, 2981.0], [55.3, 2981.0], [55.4, 2981.0], [55.5, 2981.0], [55.6, 2981.0], [55.7, 2981.0], [55.8, 2981.0], [55.9, 2981.0], [56.0, 2981.0], [56.1, 2981.0], [56.2, 2981.0], [56.3, 2981.0], [56.4, 2981.0], [56.5, 2981.0], [56.6, 2981.0], [56.7, 2981.0], [56.8, 2981.0], [56.9, 2981.0], [57.0, 2985.0], [57.1, 2985.0], [57.2, 2985.0], [57.3, 2985.0], [57.4, 2985.0], [57.5, 2985.0], [57.6, 2985.0], [57.7, 2985.0], [57.8, 2985.0], [57.9, 2985.0], [58.0, 2985.0], [58.1, 2985.0], [58.2, 2985.0], [58.3, 2985.0], [58.4, 2985.0], [58.5, 2985.0], [58.6, 2985.0], [58.7, 2985.0], [58.8, 2985.0], [58.9, 2985.0], [59.0, 3163.0], [59.1, 3163.0], [59.2, 3163.0], [59.3, 3163.0], [59.4, 3163.0], [59.5, 3163.0], [59.6, 3163.0], [59.7, 3163.0], [59.8, 3163.0], [59.9, 3163.0], [60.0, 3164.0], [60.1, 3164.0], [60.2, 3164.0], [60.3, 3164.0], [60.4, 3164.0], [60.5, 3164.0], [60.6, 3164.0], [60.7, 3164.0], [60.8, 3164.0], [60.9, 3164.0], [61.0, 3164.0], [61.1, 3164.0], [61.2, 3164.0], [61.3, 3164.0], [61.4, 3164.0], [61.5, 3164.0], [61.6, 3164.0], [61.7, 3164.0], [61.8, 3164.0], [61.9, 3164.0], [62.0, 3164.0], [62.1, 3164.0], [62.2, 3164.0], [62.3, 3164.0], [62.4, 3164.0], [62.5, 3164.0], [62.6, 3164.0], [62.7, 3164.0], [62.8, 3164.0], [62.9, 3164.0], [63.0, 3166.0], [63.1, 3166.0], [63.2, 3166.0], [63.3, 3166.0], [63.4, 3166.0], [63.5, 3166.0], [63.6, 3166.0], [63.7, 3166.0], [63.8, 3166.0], [63.9, 3166.0], [64.0, 3166.0], [64.1, 3166.0], [64.2, 3166.0], [64.3, 3166.0], [64.4, 3166.0], [64.5, 3166.0], [64.6, 3166.0], [64.7, 3166.0], [64.8, 3166.0], [64.9, 3166.0], [65.0, 3167.0], [65.1, 3167.0], [65.2, 3167.0], [65.3, 3167.0], [65.4, 3167.0], [65.5, 3167.0], [65.6, 3167.0], [65.7, 3167.0], [65.8, 3167.0], [65.9, 3167.0], [66.0, 3167.0], [66.1, 3167.0], [66.2, 3167.0], [66.3, 3167.0], [66.4, 3167.0], [66.5, 3167.0], [66.6, 3167.0], [66.7, 3167.0], [66.8, 3167.0], [66.9, 3167.0], [67.0, 3168.0], [67.1, 3168.0], [67.2, 3168.0], [67.3, 3168.0], [67.4, 3168.0], [67.5, 3168.0], [67.6, 3168.0], [67.7, 3168.0], [67.8, 3168.0], [67.9, 3168.0], [68.0, 3482.0], [68.1, 3482.0], [68.2, 3482.0], [68.3, 3482.0], [68.4, 3482.0], [68.5, 3482.0], [68.6, 3482.0], [68.7, 3482.0], [68.8, 3482.0], [68.9, 3482.0], [69.0, 3483.0], [69.1, 3483.0], [69.2, 3483.0], [69.3, 3483.0], [69.4, 3483.0], [69.5, 3483.0], [69.6, 3483.0], [69.7, 3483.0], [69.8, 3483.0], [69.9, 3483.0], [70.0, 3483.0], [70.1, 3483.0], [70.2, 3483.0], [70.3, 3483.0], [70.4, 3483.0], [70.5, 3483.0], [70.6, 3483.0], [70.7, 3483.0], [70.8, 3483.0], [70.9, 3483.0], [71.0, 3484.0], [71.1, 3484.0], [71.2, 3484.0], [71.3, 3484.0], [71.4, 3484.0], [71.5, 3484.0], [71.6, 3484.0], [71.7, 3484.0], [71.8, 3484.0], [71.9, 3484.0], [72.0, 3484.0], [72.1, 3484.0], [72.2, 3484.0], [72.3, 3484.0], [72.4, 3484.0], [72.5, 3484.0], [72.6, 3484.0], [72.7, 3484.0], [72.8, 3484.0], [72.9, 3484.0], [73.0, 3484.0], [73.1, 3484.0], [73.2, 3484.0], [73.3, 3484.0], [73.4, 3484.0], [73.5, 3484.0], [73.6, 3484.0], [73.7, 3484.0], [73.8, 3484.0], [73.9, 3484.0], [74.0, 3487.0], [74.1, 3487.0], [74.2, 3487.0], [74.3, 3487.0], [74.4, 3487.0], [74.5, 3487.0], [74.6, 3487.0], [74.7, 3487.0], [74.8, 3487.0], [74.9, 3487.0], [75.0, 3488.0], [75.1, 3488.0], [75.2, 3488.0], [75.3, 3488.0], [75.4, 3488.0], [75.5, 3488.0], [75.6, 3488.0], [75.7, 3488.0], [75.8, 3488.0], [75.9, 3488.0], [76.0, 3489.0], [76.1, 3489.0], [76.2, 3489.0], [76.3, 3489.0], [76.4, 3489.0], [76.5, 3489.0], [76.6, 3489.0], [76.7, 3489.0], [76.8, 3489.0], [76.9, 3489.0], [77.0, 3489.0], [77.1, 3489.0], [77.2, 3489.0], [77.3, 3489.0], [77.4, 3489.0], [77.5, 3489.0], [77.6, 3489.0], [77.7, 3489.0], [77.8, 3489.0], [77.9, 3489.0], [78.0, 3671.0], [78.1, 3671.0], [78.2, 3671.0], [78.3, 3671.0], [78.4, 3671.0], [78.5, 3671.0], [78.6, 3671.0], [78.7, 3671.0], [78.8, 3671.0], [78.9, 3671.0], [79.0, 3672.0], [79.1, 3672.0], [79.2, 3672.0], [79.3, 3672.0], [79.4, 3672.0], [79.5, 3672.0], [79.6, 3672.0], [79.7, 3672.0], [79.8, 3672.0], [79.9, 3672.0], [80.0, 3672.0], [80.1, 3672.0], [80.2, 3672.0], [80.3, 3672.0], [80.4, 3672.0], [80.5, 3672.0], [80.6, 3672.0], [80.7, 3672.0], [80.8, 3672.0], [80.9, 3672.0], [81.0, 3672.0], [81.1, 3672.0], [81.2, 3672.0], [81.3, 3672.0], [81.4, 3672.0], [81.5, 3672.0], [81.6, 3672.0], [81.7, 3672.0], [81.8, 3672.0], [81.9, 3672.0], [82.0, 3673.0], [82.1, 3673.0], [82.2, 3673.0], [82.3, 3673.0], [82.4, 3673.0], [82.5, 3673.0], [82.6, 3673.0], [82.7, 3673.0], [82.8, 3673.0], [82.9, 3673.0], [83.0, 3673.0], [83.1, 3673.0], [83.2, 3673.0], [83.3, 3673.0], [83.4, 3673.0], [83.5, 3673.0], [83.6, 3673.0], [83.7, 3673.0], [83.8, 3673.0], [83.9, 3673.0], [84.0, 3673.0], [84.1, 3673.0], [84.2, 3673.0], [84.3, 3673.0], [84.4, 3673.0], [84.5, 3673.0], [84.6, 3673.0], [84.7, 3673.0], [84.8, 3673.0], [84.9, 3673.0], [85.0, 3674.0], [85.1, 3674.0], [85.2, 3674.0], [85.3, 3674.0], [85.4, 3674.0], [85.5, 3674.0], [85.6, 3674.0], [85.7, 3674.0], [85.8, 3674.0], [85.9, 3674.0], [86.0, 3674.0], [86.1, 3674.0], [86.2, 3674.0], [86.3, 3674.0], [86.4, 3674.0], [86.5, 3674.0], [86.6, 3674.0], [86.7, 3674.0], [86.8, 3674.0], [86.9, 3674.0], [87.0, 3675.0], [87.1, 3675.0], [87.2, 3675.0], [87.3, 3675.0], [87.4, 3675.0], [87.5, 3675.0], [87.6, 3675.0], [87.7, 3675.0], [87.8, 3675.0], [87.9, 3675.0], [88.0, 3675.0], [88.1, 3675.0], [88.2, 3675.0], [88.3, 3675.0], [88.4, 3675.0], [88.5, 3675.0], [88.6, 3675.0], [88.7, 3675.0], [88.8, 3675.0], [88.9, 3675.0], [89.0, 3676.0], [89.1, 3676.0], [89.2, 3676.0], [89.3, 3676.0], [89.4, 3676.0], [89.5, 3676.0], [89.6, 3676.0], [89.7, 3676.0], [89.8, 3676.0], [89.9, 3676.0], [90.0, 3678.0], [90.1, 3678.0], [90.2, 3678.0], [90.3, 3678.0], [90.4, 3678.0], [90.5, 3678.0], [90.6, 3678.0], [90.7, 3678.0], [90.8, 3678.0], [90.9, 3678.0], [91.0, 3678.0], [91.1, 3678.0], [91.2, 3678.0], [91.3, 3678.0], [91.4, 3678.0], [91.5, 3678.0], [91.6, 3678.0], [91.7, 3678.0], [91.8, 3678.0], [91.9, 3678.0], [92.0, 3678.0], [92.1, 3678.0], [92.2, 3678.0], [92.3, 3678.0], [92.4, 3678.0], [92.5, 3678.0], [92.6, 3678.0], [92.7, 3678.0], [92.8, 3678.0], [92.9, 3678.0], [93.0, 3679.0], [93.1, 3679.0], [93.2, 3679.0], [93.3, 3679.0], [93.4, 3679.0], [93.5, 3679.0], [93.6, 3679.0], [93.7, 3679.0], [93.8, 3679.0], [93.9, 3679.0], [94.0, 3681.0], [94.1, 3681.0], [94.2, 3681.0], [94.3, 3681.0], [94.4, 3681.0], [94.5, 3681.0], [94.6, 3681.0], [94.7, 3681.0], [94.8, 3681.0], [94.9, 3681.0], [95.0, 3682.0], [95.1, 3682.0], [95.2, 3682.0], [95.3, 3682.0], [95.4, 3682.0], [95.5, 3682.0], [95.6, 3682.0], [95.7, 3682.0], [95.8, 3682.0], [95.9, 3682.0], [96.0, 3682.0], [96.1, 3682.0], [96.2, 3682.0], [96.3, 3682.0], [96.4, 3682.0], [96.5, 3682.0], [96.6, 3682.0], [96.7, 3682.0], [96.8, 3682.0], [96.9, 3682.0], [97.0, 3682.0], [97.1, 3682.0], [97.2, 3682.0], [97.3, 3682.0], [97.4, 3682.0], [97.5, 3682.0], [97.6, 3682.0], [97.7, 3682.0], [97.8, 3682.0], [97.9, 3682.0], [98.0, 3686.0], [98.1, 3686.0], [98.2, 3686.0], [98.3, 3686.0], [98.4, 3686.0], [98.5, 3686.0], [98.6, 3686.0], [98.7, 3686.0], [98.8, 3686.0], [98.9, 3686.0], [99.0, 3688.0], [99.1, 3688.0], [99.2, 3688.0], [99.3, 3688.0], [99.4, 3688.0], [99.5, 3688.0], [99.6, 3688.0], [99.7, 3688.0], [99.8, 3688.0], [99.9, 3688.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[0.0, 7422.0], [0.1, 7422.0], [0.2, 7422.0], [0.3, 7422.0], [0.4, 7422.0], [0.5, 7422.0], [0.6, 7422.0], [0.7, 7422.0], [0.8, 7422.0], [0.9, 7422.0], [1.0, 9783.0], [1.1, 9783.0], [1.2, 9783.0], [1.3, 9783.0], [1.4, 9783.0], [1.5, 9783.0], [1.6, 9783.0], [1.7, 9783.0], [1.8, 9783.0], [1.9, 9783.0], [2.0, 12825.0], [2.1, 12825.0], [2.2, 12825.0], [2.3, 12825.0], [2.4, 12825.0], [2.5, 12825.0], [2.6, 12825.0], [2.7, 12825.0], [2.8, 12825.0], [2.9, 12825.0], [3.0, 12826.0], [3.1, 12826.0], [3.2, 12826.0], [3.3, 12826.0], [3.4, 12826.0], [3.5, 12826.0], [3.6, 12826.0], [3.7, 12826.0], [3.8, 12826.0], [3.9, 12826.0], [4.0, 12827.0], [4.1, 12827.0], [4.2, 12827.0], [4.3, 12827.0], [4.4, 12827.0], [4.5, 12827.0], [4.6, 12827.0], [4.7, 12827.0], [4.8, 12827.0], [4.9, 12827.0], [5.0, 12828.0], [5.1, 12828.0], [5.2, 12828.0], [5.3, 12828.0], [5.4, 12828.0], [5.5, 12828.0], [5.6, 12828.0], [5.7, 12828.0], [5.8, 12828.0], [5.9, 12828.0], [6.0, 12828.0], [6.1, 12828.0], [6.2, 12828.0], [6.3, 12828.0], [6.4, 12828.0], [6.5, 12828.0], [6.6, 12828.0], [6.7, 12828.0], [6.8, 12828.0], [6.9, 12828.0], [7.0, 13323.0], [7.1, 13323.0], [7.2, 13323.0], [7.3, 13323.0], [7.4, 13323.0], [7.5, 13323.0], [7.6, 13323.0], [7.7, 13323.0], [7.8, 13323.0], [7.9, 13323.0], [8.0, 14488.0], [8.1, 14488.0], [8.2, 14488.0], [8.3, 14488.0], [8.4, 14488.0], [8.5, 14488.0], [8.6, 14488.0], [8.7, 14488.0], [8.8, 14488.0], [8.9, 14488.0], [9.0, 14495.0], [9.1, 14495.0], [9.2, 14495.0], [9.3, 14495.0], [9.4, 14495.0], [9.5, 14495.0], [9.6, 14495.0], [9.7, 14495.0], [9.8, 14495.0], [9.9, 14495.0], [10.0, 14495.0], [10.1, 14495.0], [10.2, 14495.0], [10.3, 14495.0], [10.4, 14495.0], [10.5, 14495.0], [10.6, 14495.0], [10.7, 14495.0], [10.8, 14495.0], [10.9, 14495.0], [11.0, 14496.0], [11.1, 14496.0], [11.2, 14496.0], [11.3, 14496.0], [11.4, 14496.0], [11.5, 14496.0], [11.6, 14496.0], [11.7, 14496.0], [11.8, 14496.0], [11.9, 14496.0], [12.0, 14497.0], [12.1, 14497.0], [12.2, 14497.0], [12.3, 14497.0], [12.4, 14497.0], [12.5, 14497.0], [12.6, 14497.0], [12.7, 14497.0], [12.8, 14497.0], [12.9, 14497.0], [13.0, 24639.0], [13.1, 24639.0], [13.2, 24639.0], [13.3, 24639.0], [13.4, 24639.0], [13.5, 24639.0], [13.6, 24639.0], [13.7, 24639.0], [13.8, 24639.0], [13.9, 24639.0], [14.0, 31545.0], [14.1, 31545.0], [14.2, 31545.0], [14.3, 31545.0], [14.4, 31545.0], [14.5, 31545.0], [14.6, 31545.0], [14.7, 31545.0], [14.8, 31545.0], [14.9, 31545.0], [15.0, 31566.0], [15.1, 31566.0], [15.2, 31566.0], [15.3, 31566.0], [15.4, 31566.0], [15.5, 31566.0], [15.6, 31566.0], [15.7, 31566.0], [15.8, 31566.0], [15.9, 31566.0], [16.0, 31566.0], [16.1, 31566.0], [16.2, 31566.0], [16.3, 31566.0], [16.4, 31566.0], [16.5, 31566.0], [16.6, 31566.0], [16.7, 31566.0], [16.8, 31566.0], [16.9, 31566.0], [17.0, 31568.0], [17.1, 31568.0], [17.2, 31568.0], [17.3, 31568.0], [17.4, 31568.0], [17.5, 31568.0], [17.6, 31568.0], [17.7, 31568.0], [17.8, 31568.0], [17.9, 31568.0], [18.0, 31568.0], [18.1, 31568.0], [18.2, 31568.0], [18.3, 31568.0], [18.4, 31568.0], [18.5, 31568.0], [18.6, 31568.0], [18.7, 31568.0], [18.8, 31568.0], [18.9, 31568.0], [19.0, 31574.0], [19.1, 31574.0], [19.2, 31574.0], [19.3, 31574.0], [19.4, 31574.0], [19.5, 31574.0], [19.6, 31574.0], [19.7, 31574.0], [19.8, 31574.0], [19.9, 31574.0], [20.0, 31575.0], [20.1, 31575.0], [20.2, 31575.0], [20.3, 31575.0], [20.4, 31575.0], [20.5, 31575.0], [20.6, 31575.0], [20.7, 31575.0], [20.8, 31575.0], [20.9, 31575.0], [21.0, 31576.0], [21.1, 31576.0], [21.2, 31576.0], [21.3, 31576.0], [21.4, 31576.0], [21.5, 31576.0], [21.6, 31576.0], [21.7, 31576.0], [21.8, 31576.0], [21.9, 31576.0], [22.0, 31577.0], [22.1, 31577.0], [22.2, 31577.0], [22.3, 31577.0], [22.4, 31577.0], [22.5, 31577.0], [22.6, 31577.0], [22.7, 31577.0], [22.8, 31577.0], [22.9, 31577.0], [23.0, 31578.0], [23.1, 31578.0], [23.2, 31578.0], [23.3, 31578.0], [23.4, 31578.0], [23.5, 31578.0], [23.6, 31578.0], [23.7, 31578.0], [23.8, 31578.0], [23.9, 31578.0], [24.0, 32281.0], [24.1, 32281.0], [24.2, 32281.0], [24.3, 32281.0], [24.4, 32281.0], [24.5, 32281.0], [24.6, 32281.0], [24.7, 32281.0], [24.8, 32281.0], [24.9, 32281.0], [25.0, 32306.0], [25.1, 32306.0], [25.2, 32306.0], [25.3, 32306.0], [25.4, 32306.0], [25.5, 32306.0], [25.6, 32306.0], [25.7, 32306.0], [25.8, 32306.0], [25.9, 32306.0], [26.0, 32307.0], [26.1, 32307.0], [26.2, 32307.0], [26.3, 32307.0], [26.4, 32307.0], [26.5, 32307.0], [26.6, 32307.0], [26.7, 32307.0], [26.8, 32307.0], [26.9, 32307.0], [27.0, 32309.0], [27.1, 32309.0], [27.2, 32309.0], [27.3, 32309.0], [27.4, 32309.0], [27.5, 32309.0], [27.6, 32309.0], [27.7, 32309.0], [27.8, 32309.0], [27.9, 32309.0], [28.0, 32309.0], [28.1, 32309.0], [28.2, 32309.0], [28.3, 32309.0], [28.4, 32309.0], [28.5, 32309.0], [28.6, 32309.0], [28.7, 32309.0], [28.8, 32309.0], [28.9, 32309.0], [29.0, 32309.0], [29.1, 32309.0], [29.2, 32309.0], [29.3, 32309.0], [29.4, 32309.0], [29.5, 32309.0], [29.6, 32309.0], [29.7, 32309.0], [29.8, 32309.0], [29.9, 32309.0], [30.0, 32320.0], [30.1, 32320.0], [30.2, 32320.0], [30.3, 32320.0], [30.4, 32320.0], [30.5, 32320.0], [30.6, 32320.0], [30.7, 32320.0], [30.8, 32320.0], [30.9, 32320.0], [31.0, 32324.0], [31.1, 32324.0], [31.2, 32324.0], [31.3, 32324.0], [31.4, 32324.0], [31.5, 32324.0], [31.6, 32324.0], [31.7, 32324.0], [31.8, 32324.0], [31.9, 32324.0], [32.0, 32324.0], [32.1, 32324.0], [32.2, 32324.0], [32.3, 32324.0], [32.4, 32324.0], [32.5, 32324.0], [32.6, 32324.0], [32.7, 32324.0], [32.8, 32324.0], [32.9, 32324.0], [33.0, 32324.0], [33.1, 32324.0], [33.2, 32324.0], [33.3, 32324.0], [33.4, 32324.0], [33.5, 32324.0], [33.6, 32324.0], [33.7, 32324.0], [33.8, 32324.0], [33.9, 32324.0], [34.0, 32326.0], [34.1, 32326.0], [34.2, 32326.0], [34.3, 32326.0], [34.4, 32326.0], [34.5, 32326.0], [34.6, 32326.0], [34.7, 32326.0], [34.8, 32326.0], [34.9, 32326.0], [35.0, 32342.0], [35.1, 32342.0], [35.2, 32342.0], [35.3, 32342.0], [35.4, 32342.0], [35.5, 32342.0], [35.6, 32342.0], [35.7, 32342.0], [35.8, 32342.0], [35.9, 32342.0], [36.0, 32343.0], [36.1, 32343.0], [36.2, 32343.0], [36.3, 32343.0], [36.4, 32343.0], [36.5, 32343.0], [36.6, 32343.0], [36.7, 32343.0], [36.8, 32343.0], [36.9, 32343.0], [37.0, 32344.0], [37.1, 32344.0], [37.2, 32344.0], [37.3, 32344.0], [37.4, 32344.0], [37.5, 32344.0], [37.6, 32344.0], [37.7, 32344.0], [37.8, 32344.0], [37.9, 32344.0], [38.0, 32346.0], [38.1, 32346.0], [38.2, 32346.0], [38.3, 32346.0], [38.4, 32346.0], [38.5, 32346.0], [38.6, 32346.0], [38.7, 32346.0], [38.8, 32346.0], [38.9, 32346.0], [39.0, 32348.0], [39.1, 32348.0], [39.2, 32348.0], [39.3, 32348.0], [39.4, 32348.0], [39.5, 32348.0], [39.6, 32348.0], [39.7, 32348.0], [39.8, 32348.0], [39.9, 32348.0], [40.0, 32354.0], [40.1, 32354.0], [40.2, 32354.0], [40.3, 32354.0], [40.4, 32354.0], [40.5, 32354.0], [40.6, 32354.0], [40.7, 32354.0], [40.8, 32354.0], [40.9, 32354.0], [41.0, 32355.0], [41.1, 32355.0], [41.2, 32355.0], [41.3, 32355.0], [41.4, 32355.0], [41.5, 32355.0], [41.6, 32355.0], [41.7, 32355.0], [41.8, 32355.0], [41.9, 32355.0], [42.0, 32355.0], [42.1, 32355.0], [42.2, 32355.0], [42.3, 32355.0], [42.4, 32355.0], [42.5, 32355.0], [42.6, 32355.0], [42.7, 32355.0], [42.8, 32355.0], [42.9, 32355.0], [43.0, 32356.0], [43.1, 32356.0], [43.2, 32356.0], [43.3, 32356.0], [43.4, 32356.0], [43.5, 32356.0], [43.6, 32356.0], [43.7, 32356.0], [43.8, 32356.0], [43.9, 32356.0], [44.0, 32378.0], [44.1, 32378.0], [44.2, 32378.0], [44.3, 32378.0], [44.4, 32378.0], [44.5, 32378.0], [44.6, 32378.0], [44.7, 32378.0], [44.8, 32378.0], [44.9, 32378.0], [45.0, 32378.0], [45.1, 32378.0], [45.2, 32378.0], [45.3, 32378.0], [45.4, 32378.0], [45.5, 32378.0], [45.6, 32378.0], [45.7, 32378.0], [45.8, 32378.0], [45.9, 32378.0], [46.0, 33931.0], [46.1, 33931.0], [46.2, 33931.0], [46.3, 33931.0], [46.4, 33931.0], [46.5, 33931.0], [46.6, 33931.0], [46.7, 33931.0], [46.8, 33931.0], [46.9, 33931.0], [47.0, 33936.0], [47.1, 33936.0], [47.2, 33936.0], [47.3, 33936.0], [47.4, 33936.0], [47.5, 33936.0], [47.6, 33936.0], [47.7, 33936.0], [47.8, 33936.0], [47.9, 33936.0], [48.0, 33938.0], [48.1, 33938.0], [48.2, 33938.0], [48.3, 33938.0], [48.4, 33938.0], [48.5, 33938.0], [48.6, 33938.0], [48.7, 33938.0], [48.8, 33938.0], [48.9, 33938.0], [49.0, 33938.0], [49.1, 33938.0], [49.2, 33938.0], [49.3, 33938.0], [49.4, 33938.0], [49.5, 33938.0], [49.6, 33938.0], [49.7, 33938.0], [49.8, 33938.0], [49.9, 33938.0], [50.0, 33944.0], [50.1, 33944.0], [50.2, 33944.0], [50.3, 33944.0], [50.4, 33944.0], [50.5, 33944.0], [50.6, 33944.0], [50.7, 33944.0], [50.8, 33944.0], [50.9, 33944.0], [51.0, 33947.0], [51.1, 33947.0], [51.2, 33947.0], [51.3, 33947.0], [51.4, 33947.0], [51.5, 33947.0], [51.6, 33947.0], [51.7, 33947.0], [51.8, 33947.0], [51.9, 33947.0], [52.0, 33948.0], [52.1, 33948.0], [52.2, 33948.0], [52.3, 33948.0], [52.4, 33948.0], [52.5, 33948.0], [52.6, 33948.0], [52.7, 33948.0], [52.8, 33948.0], [52.9, 33948.0], [53.0, 33949.0], [53.1, 33949.0], [53.2, 33949.0], [53.3, 33949.0], [53.4, 33949.0], [53.5, 33949.0], [53.6, 33949.0], [53.7, 33949.0], [53.8, 33949.0], [53.9, 33949.0], [54.0, 33949.0], [54.1, 33949.0], [54.2, 33949.0], [54.3, 33949.0], [54.4, 33949.0], [54.5, 33949.0], [54.6, 33949.0], [54.7, 33949.0], [54.8, 33949.0], [54.9, 33949.0], [55.0, 33950.0], [55.1, 33950.0], [55.2, 33950.0], [55.3, 33950.0], [55.4, 33950.0], [55.5, 33950.0], [55.6, 33950.0], [55.7, 33950.0], [55.8, 33950.0], [55.9, 33950.0], [56.0, 33954.0], [56.1, 33954.0], [56.2, 33954.0], [56.3, 33954.0], [56.4, 33954.0], [56.5, 33954.0], [56.6, 33954.0], [56.7, 33954.0], [56.8, 33954.0], [56.9, 33954.0], [57.0, 33961.0], [57.1, 33961.0], [57.2, 33961.0], [57.3, 33961.0], [57.4, 33961.0], [57.5, 33961.0], [57.6, 33961.0], [57.7, 33961.0], [57.8, 33961.0], [57.9, 33961.0], [58.0, 33963.0], [58.1, 33963.0], [58.2, 33963.0], [58.3, 33963.0], [58.4, 33963.0], [58.5, 33963.0], [58.6, 33963.0], [58.7, 33963.0], [58.8, 33963.0], [58.9, 33963.0], [59.0, 33963.0], [59.1, 33963.0], [59.2, 33963.0], [59.3, 33963.0], [59.4, 33963.0], [59.5, 33963.0], [59.6, 33963.0], [59.7, 33963.0], [59.8, 33963.0], [59.9, 33963.0], [60.0, 33964.0], [60.1, 33964.0], [60.2, 33964.0], [60.3, 33964.0], [60.4, 33964.0], [60.5, 33964.0], [60.6, 33964.0], [60.7, 33964.0], [60.8, 33964.0], [60.9, 33964.0], [61.0, 33964.0], [61.1, 33964.0], [61.2, 33964.0], [61.3, 33964.0], [61.4, 33964.0], [61.5, 33964.0], [61.6, 33964.0], [61.7, 33964.0], [61.8, 33964.0], [61.9, 33964.0], [62.0, 33978.0], [62.1, 33978.0], [62.2, 33978.0], [62.3, 33978.0], [62.4, 33978.0], [62.5, 33978.0], [62.6, 33978.0], [62.7, 33978.0], [62.8, 33978.0], [62.9, 33978.0], [63.0, 33979.0], [63.1, 33979.0], [63.2, 33979.0], [63.3, 33979.0], [63.4, 33979.0], [63.5, 33979.0], [63.6, 33979.0], [63.7, 33979.0], [63.8, 33979.0], [63.9, 33979.0], [64.0, 33984.0], [64.1, 33984.0], [64.2, 33984.0], [64.3, 33984.0], [64.4, 33984.0], [64.5, 33984.0], [64.6, 33984.0], [64.7, 33984.0], [64.8, 33984.0], [64.9, 33984.0], [65.0, 33989.0], [65.1, 33989.0], [65.2, 33989.0], [65.3, 33989.0], [65.4, 33989.0], [65.5, 33989.0], [65.6, 33989.0], [65.7, 33989.0], [65.8, 33989.0], [65.9, 33989.0], [66.0, 33993.0], [66.1, 33993.0], [66.2, 33993.0], [66.3, 33993.0], [66.4, 33993.0], [66.5, 33993.0], [66.6, 33993.0], [66.7, 33993.0], [66.8, 33993.0], [66.9, 33993.0], [67.0, 33994.0], [67.1, 33994.0], [67.2, 33994.0], [67.3, 33994.0], [67.4, 33994.0], [67.5, 33994.0], [67.6, 33994.0], [67.7, 33994.0], [67.8, 33994.0], [67.9, 33994.0], [68.0, 33994.0], [68.1, 33994.0], [68.2, 33994.0], [68.3, 33994.0], [68.4, 33994.0], [68.5, 33994.0], [68.6, 33994.0], [68.7, 33994.0], [68.8, 33994.0], [68.9, 33994.0], [69.0, 34000.0], [69.1, 34000.0], [69.2, 34000.0], [69.3, 34000.0], [69.4, 34000.0], [69.5, 34000.0], [69.6, 34000.0], [69.7, 34000.0], [69.8, 34000.0], [69.9, 34000.0], [70.0, 34818.0], [70.1, 34818.0], [70.2, 34818.0], [70.3, 34818.0], [70.4, 34818.0], [70.5, 34818.0], [70.6, 34818.0], [70.7, 34818.0], [70.8, 34818.0], [70.9, 34818.0], [71.0, 34819.0], [71.1, 34819.0], [71.2, 34819.0], [71.3, 34819.0], [71.4, 34819.0], [71.5, 34819.0], [71.6, 34819.0], [71.7, 34819.0], [71.8, 34819.0], [71.9, 34819.0], [72.0, 34821.0], [72.1, 34821.0], [72.2, 34821.0], [72.3, 34821.0], [72.4, 34821.0], [72.5, 34821.0], [72.6, 34821.0], [72.7, 34821.0], [72.8, 34821.0], [72.9, 34821.0], [73.0, 34824.0], [73.1, 34824.0], [73.2, 34824.0], [73.3, 34824.0], [73.4, 34824.0], [73.5, 34824.0], [73.6, 34824.0], [73.7, 34824.0], [73.8, 34824.0], [73.9, 34824.0], [74.0, 34824.0], [74.1, 34824.0], [74.2, 34824.0], [74.3, 34824.0], [74.4, 34824.0], [74.5, 34824.0], [74.6, 34824.0], [74.7, 34824.0], [74.8, 34824.0], [74.9, 34824.0], [75.0, 34840.0], [75.1, 34840.0], [75.2, 34840.0], [75.3, 34840.0], [75.4, 34840.0], [75.5, 34840.0], [75.6, 34840.0], [75.7, 34840.0], [75.8, 34840.0], [75.9, 34840.0], [76.0, 34843.0], [76.1, 34843.0], [76.2, 34843.0], [76.3, 34843.0], [76.4, 34843.0], [76.5, 34843.0], [76.6, 34843.0], [76.7, 34843.0], [76.8, 34843.0], [76.9, 34843.0], [77.0, 34843.0], [77.1, 34843.0], [77.2, 34843.0], [77.3, 34843.0], [77.4, 34843.0], [77.5, 34843.0], [77.6, 34843.0], [77.7, 34843.0], [77.8, 34843.0], [77.9, 34843.0], [78.0, 34847.0], [78.1, 34847.0], [78.2, 34847.0], [78.3, 34847.0], [78.4, 34847.0], [78.5, 34847.0], [78.6, 34847.0], [78.7, 34847.0], [78.8, 34847.0], [78.9, 34847.0], [79.0, 34927.0], [79.1, 34927.0], [79.2, 34927.0], [79.3, 34927.0], [79.4, 34927.0], [79.5, 34927.0], [79.6, 34927.0], [79.7, 34927.0], [79.8, 34927.0], [79.9, 34927.0], [80.0, 34927.0], [80.1, 34927.0], [80.2, 34927.0], [80.3, 34927.0], [80.4, 34927.0], [80.5, 34927.0], [80.6, 34927.0], [80.7, 34927.0], [80.8, 34927.0], [80.9, 34927.0], [81.0, 34928.0], [81.1, 34928.0], [81.2, 34928.0], [81.3, 34928.0], [81.4, 34928.0], [81.5, 34928.0], [81.6, 34928.0], [81.7, 34928.0], [81.8, 34928.0], [81.9, 34928.0], [82.0, 34932.0], [82.1, 34932.0], [82.2, 34932.0], [82.3, 34932.0], [82.4, 34932.0], [82.5, 34932.0], [82.6, 34932.0], [82.7, 34932.0], [82.8, 34932.0], [82.9, 34932.0], [83.0, 34935.0], [83.1, 34935.0], [83.2, 34935.0], [83.3, 34935.0], [83.4, 34935.0], [83.5, 34935.0], [83.6, 34935.0], [83.7, 34935.0], [83.8, 34935.0], [83.9, 34935.0], [84.0, 34936.0], [84.1, 34936.0], [84.2, 34936.0], [84.3, 34936.0], [84.4, 34936.0], [84.5, 34936.0], [84.6, 34936.0], [84.7, 34936.0], [84.8, 34936.0], [84.9, 34936.0], [85.0, 34936.0], [85.1, 34936.0], [85.2, 34936.0], [85.3, 34936.0], [85.4, 34936.0], [85.5, 34936.0], [85.6, 34936.0], [85.7, 34936.0], [85.8, 34936.0], [85.9, 34936.0], [86.0, 35215.0], [86.1, 35215.0], [86.2, 35215.0], [86.3, 35215.0], [86.4, 35215.0], [86.5, 35215.0], [86.6, 35215.0], [86.7, 35215.0], [86.8, 35215.0], [86.9, 35215.0], [87.0, 37795.0], [87.1, 37795.0], [87.2, 37795.0], [87.3, 37795.0], [87.4, 37795.0], [87.5, 37795.0], [87.6, 37795.0], [87.7, 37795.0], [87.8, 37795.0], [87.9, 37795.0], [88.0, 38195.0], [88.1, 38195.0], [88.2, 38195.0], [88.3, 38195.0], [88.4, 38195.0], [88.5, 38195.0], [88.6, 38195.0], [88.7, 38195.0], [88.8, 38195.0], [88.9, 38195.0], [89.0, 38196.0], [89.1, 38196.0], [89.2, 38196.0], [89.3, 38196.0], [89.4, 38196.0], [89.5, 38196.0], [89.6, 38196.0], [89.7, 38196.0], [89.8, 38196.0], [89.9, 38196.0], [90.0, 38623.0], [90.1, 38623.0], [90.2, 38623.0], [90.3, 38623.0], [90.4, 38623.0], [90.5, 38623.0], [90.6, 38623.0], [90.7, 38623.0], [90.8, 38623.0], [90.9, 38623.0], [91.0, 38639.0], [91.1, 38639.0], [91.2, 38639.0], [91.3, 38639.0], [91.4, 38639.0], [91.5, 38639.0], [91.6, 38639.0], [91.7, 38639.0], [91.8, 38639.0], [91.9, 38639.0], [92.0, 38642.0], [92.1, 38642.0], [92.2, 38642.0], [92.3, 38642.0], [92.4, 38642.0], [92.5, 38642.0], [92.6, 38642.0], [92.7, 38642.0], [92.8, 38642.0], [92.9, 38642.0], [93.0, 38643.0], [93.1, 38643.0], [93.2, 38643.0], [93.3, 38643.0], [93.4, 38643.0], [93.5, 38643.0], [93.6, 38643.0], [93.7, 38643.0], [93.8, 38643.0], [93.9, 38643.0], [94.0, 38721.0], [94.1, 38721.0], [94.2, 38721.0], [94.3, 38721.0], [94.4, 38721.0], [94.5, 38721.0], [94.6, 38721.0], [94.7, 38721.0], [94.8, 38721.0], [94.9, 38721.0], [95.0, 38849.0], [95.1, 38849.0], [95.2, 38849.0], [95.3, 38849.0], [95.4, 38849.0], [95.5, 38849.0], [95.6, 38849.0], [95.7, 38849.0], [95.8, 38849.0], [95.9, 38849.0], [96.0, 38853.0], [96.1, 38853.0], [96.2, 38853.0], [96.3, 38853.0], [96.4, 38853.0], [96.5, 38853.0], [96.6, 38853.0], [96.7, 38853.0], [96.8, 38853.0], [96.9, 38853.0], [97.0, 38854.0], [97.1, 38854.0], [97.2, 38854.0], [97.3, 38854.0], [97.4, 38854.0], [97.5, 38854.0], [97.6, 38854.0], [97.7, 38854.0], [97.8, 38854.0], [97.9, 38854.0], [98.0, 38854.0], [98.1, 38854.0], [98.2, 38854.0], [98.3, 38854.0], [98.4, 38854.0], [98.5, 38854.0], [98.6, 38854.0], [98.7, 38854.0], [98.8, 38854.0], [98.9, 38854.0], [99.0, 38854.0], [99.1, 38854.0], [99.2, 38854.0], [99.3, 38854.0], [99.4, 38854.0], [99.5, 38854.0], [99.6, 38854.0], [99.7, 38854.0], [99.8, 38854.0], [99.9, 38854.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[0.0, 113.0], [0.1, 113.0], [0.2, 113.0], [0.3, 113.0], [0.4, 113.0], [0.5, 113.0], [0.6, 113.0], [0.7, 113.0], [0.8, 113.0], [0.9, 113.0], [1.0, 115.0], [1.1, 115.0], [1.2, 115.0], [1.3, 115.0], [1.4, 115.0], [1.5, 115.0], [1.6, 115.0], [1.7, 115.0], [1.8, 115.0], [1.9, 115.0], [2.0, 122.0], [2.1, 122.0], [2.2, 122.0], [2.3, 122.0], [2.4, 122.0], [2.5, 122.0], [2.6, 122.0], [2.7, 122.0], [2.8, 122.0], [2.9, 122.0], [3.0, 124.0], [3.1, 124.0], [3.2, 124.0], [3.3, 124.0], [3.4, 124.0], [3.5, 124.0], [3.6, 124.0], [3.7, 124.0], [3.8, 124.0], [3.9, 124.0], [4.0, 125.0], [4.1, 125.0], [4.2, 125.0], [4.3, 125.0], [4.4, 125.0], [4.5, 125.0], [4.6, 125.0], [4.7, 125.0], [4.8, 125.0], [4.9, 125.0], [5.0, 132.0], [5.1, 132.0], [5.2, 132.0], [5.3, 132.0], [5.4, 132.0], [5.5, 132.0], [5.6, 132.0], [5.7, 132.0], [5.8, 132.0], [5.9, 132.0], [6.0, 136.0], [6.1, 136.0], [6.2, 136.0], [6.3, 136.0], [6.4, 136.0], [6.5, 136.0], [6.6, 136.0], [6.7, 136.0], [6.8, 136.0], [6.9, 136.0], [7.0, 136.0], [7.1, 136.0], [7.2, 136.0], [7.3, 136.0], [7.4, 136.0], [7.5, 136.0], [7.6, 136.0], [7.7, 136.0], [7.8, 136.0], [7.9, 136.0], [8.0, 141.0], [8.1, 141.0], [8.2, 141.0], [8.3, 141.0], [8.4, 141.0], [8.5, 141.0], [8.6, 141.0], [8.7, 141.0], [8.8, 141.0], [8.9, 141.0], [9.0, 147.0], [9.1, 147.0], [9.2, 147.0], [9.3, 147.0], [9.4, 147.0], [9.5, 147.0], [9.6, 147.0], [9.7, 147.0], [9.8, 147.0], [9.9, 147.0], [10.0, 150.0], [10.1, 150.0], [10.2, 150.0], [10.3, 150.0], [10.4, 150.0], [10.5, 150.0], [10.6, 150.0], [10.7, 150.0], [10.8, 150.0], [10.9, 150.0], [11.0, 158.0], [11.1, 158.0], [11.2, 158.0], [11.3, 158.0], [11.4, 158.0], [11.5, 158.0], [11.6, 158.0], [11.7, 158.0], [11.8, 158.0], [11.9, 158.0], [12.0, 160.0], [12.1, 160.0], [12.2, 160.0], [12.3, 160.0], [12.4, 160.0], [12.5, 160.0], [12.6, 160.0], [12.7, 160.0], [12.8, 160.0], [12.9, 160.0], [13.0, 165.0], [13.1, 165.0], [13.2, 165.0], [13.3, 165.0], [13.4, 165.0], [13.5, 165.0], [13.6, 165.0], [13.7, 165.0], [13.8, 165.0], [13.9, 165.0], [14.0, 171.0], [14.1, 171.0], [14.2, 171.0], [14.3, 171.0], [14.4, 171.0], [14.5, 171.0], [14.6, 171.0], [14.7, 171.0], [14.8, 171.0], [14.9, 171.0], [15.0, 173.0], [15.1, 173.0], [15.2, 173.0], [15.3, 173.0], [15.4, 173.0], [15.5, 173.0], [15.6, 173.0], [15.7, 173.0], [15.8, 173.0], [15.9, 173.0], [16.0, 173.0], [16.1, 173.0], [16.2, 173.0], [16.3, 173.0], [16.4, 173.0], [16.5, 173.0], [16.6, 173.0], [16.7, 173.0], [16.8, 173.0], [16.9, 173.0], [17.0, 173.0], [17.1, 173.0], [17.2, 173.0], [17.3, 173.0], [17.4, 173.0], [17.5, 173.0], [17.6, 173.0], [17.7, 173.0], [17.8, 173.0], [17.9, 173.0], [18.0, 174.0], [18.1, 174.0], [18.2, 174.0], [18.3, 174.0], [18.4, 174.0], [18.5, 174.0], [18.6, 174.0], [18.7, 174.0], [18.8, 174.0], [18.9, 174.0], [19.0, 174.0], [19.1, 174.0], [19.2, 174.0], [19.3, 174.0], [19.4, 174.0], [19.5, 174.0], [19.6, 174.0], [19.7, 174.0], [19.8, 174.0], [19.9, 174.0], [20.0, 174.0], [20.1, 174.0], [20.2, 174.0], [20.3, 174.0], [20.4, 174.0], [20.5, 174.0], [20.6, 174.0], [20.7, 174.0], [20.8, 174.0], [20.9, 174.0], [21.0, 175.0], [21.1, 175.0], [21.2, 175.0], [21.3, 175.0], [21.4, 175.0], [21.5, 175.0], [21.6, 175.0], [21.7, 175.0], [21.8, 175.0], [21.9, 175.0], [22.0, 175.0], [22.1, 175.0], [22.2, 175.0], [22.3, 175.0], [22.4, 175.0], [22.5, 175.0], [22.6, 175.0], [22.7, 175.0], [22.8, 175.0], [22.9, 175.0], [23.0, 175.0], [23.1, 175.0], [23.2, 175.0], [23.3, 175.0], [23.4, 175.0], [23.5, 175.0], [23.6, 175.0], [23.7, 175.0], [23.8, 175.0], [23.9, 175.0], [24.0, 176.0], [24.1, 176.0], [24.2, 176.0], [24.3, 176.0], [24.4, 176.0], [24.5, 176.0], [24.6, 176.0], [24.7, 176.0], [24.8, 176.0], [24.9, 176.0], [25.0, 180.0], [25.1, 180.0], [25.2, 180.0], [25.3, 180.0], [25.4, 180.0], [25.5, 180.0], [25.6, 180.0], [25.7, 180.0], [25.8, 180.0], [25.9, 180.0], [26.0, 189.0], [26.1, 189.0], [26.2, 189.0], [26.3, 189.0], [26.4, 189.0], [26.5, 189.0], [26.6, 189.0], [26.7, 189.0], [26.8, 189.0], [26.9, 189.0], [27.0, 301.0], [27.1, 301.0], [27.2, 301.0], [27.3, 301.0], [27.4, 301.0], [27.5, 301.0], [27.6, 301.0], [27.7, 301.0], [27.8, 301.0], [27.9, 301.0], [28.0, 312.0], [28.1, 312.0], [28.2, 312.0], [28.3, 312.0], [28.4, 312.0], [28.5, 312.0], [28.6, 312.0], [28.7, 312.0], [28.8, 312.0], [28.9, 312.0], [29.0, 322.0], [29.1, 322.0], [29.2, 322.0], [29.3, 322.0], [29.4, 322.0], [29.5, 322.0], [29.6, 322.0], [29.7, 322.0], [29.8, 322.0], [29.9, 322.0], [30.0, 328.0], [30.1, 328.0], [30.2, 328.0], [30.3, 328.0], [30.4, 328.0], [30.5, 328.0], [30.6, 328.0], [30.7, 328.0], [30.8, 328.0], [30.9, 328.0], [31.0, 467.0], [31.1, 467.0], [31.2, 467.0], [31.3, 467.0], [31.4, 467.0], [31.5, 467.0], [31.6, 467.0], [31.7, 467.0], [31.8, 467.0], [31.9, 467.0], [32.0, 661.0], [32.1, 661.0], [32.2, 661.0], [32.3, 661.0], [32.4, 661.0], [32.5, 661.0], [32.6, 661.0], [32.7, 661.0], [32.8, 661.0], [32.9, 661.0], [33.0, 671.0], [33.1, 671.0], [33.2, 671.0], [33.3, 671.0], [33.4, 671.0], [33.5, 671.0], [33.6, 671.0], [33.7, 671.0], [33.8, 671.0], [33.9, 671.0], [34.0, 1200.0], [34.1, 1200.0], [34.2, 1200.0], [34.3, 1200.0], [34.4, 1200.0], [34.5, 1200.0], [34.6, 1200.0], [34.7, 1200.0], [34.8, 1200.0], [34.9, 1200.0], [35.0, 1549.0], [35.1, 1549.0], [35.2, 1549.0], [35.3, 1549.0], [35.4, 1549.0], [35.5, 1549.0], [35.6, 1549.0], [35.7, 1549.0], [35.8, 1549.0], [35.9, 1549.0], [36.0, 1558.0], [36.1, 1558.0], [36.2, 1558.0], [36.3, 1558.0], [36.4, 1558.0], [36.5, 1558.0], [36.6, 1558.0], [36.7, 1558.0], [36.8, 1558.0], [36.9, 1558.0], [37.0, 1567.0], [37.1, 1567.0], [37.2, 1567.0], [37.3, 1567.0], [37.4, 1567.0], [37.5, 1567.0], [37.6, 1567.0], [37.7, 1567.0], [37.8, 1567.0], [37.9, 1567.0], [38.0, 1580.0], [38.1, 1580.0], [38.2, 1580.0], [38.3, 1580.0], [38.4, 1580.0], [38.5, 1580.0], [38.6, 1580.0], [38.7, 1580.0], [38.8, 1580.0], [38.9, 1580.0], [39.0, 1588.0], [39.1, 1588.0], [39.2, 1588.0], [39.3, 1588.0], [39.4, 1588.0], [39.5, 1588.0], [39.6, 1588.0], [39.7, 1588.0], [39.8, 1588.0], [39.9, 1588.0], [40.0, 1597.0], [40.1, 1597.0], [40.2, 1597.0], [40.3, 1597.0], [40.4, 1597.0], [40.5, 1597.0], [40.6, 1597.0], [40.7, 1597.0], [40.8, 1597.0], [40.9, 1597.0], [41.0, 1609.0], [41.1, 1609.0], [41.2, 1609.0], [41.3, 1609.0], [41.4, 1609.0], [41.5, 1609.0], [41.6, 1609.0], [41.7, 1609.0], [41.8, 1609.0], [41.9, 1609.0], [42.0, 1618.0], [42.1, 1618.0], [42.2, 1618.0], [42.3, 1618.0], [42.4, 1618.0], [42.5, 1618.0], [42.6, 1618.0], [42.7, 1618.0], [42.8, 1618.0], [42.9, 1618.0], [43.0, 1628.0], [43.1, 1628.0], [43.2, 1628.0], [43.3, 1628.0], [43.4, 1628.0], [43.5, 1628.0], [43.6, 1628.0], [43.7, 1628.0], [43.8, 1628.0], [43.9, 1628.0], [44.0, 2416.0], [44.1, 2416.0], [44.2, 2416.0], [44.3, 2416.0], [44.4, 2416.0], [44.5, 2416.0], [44.6, 2416.0], [44.7, 2416.0], [44.8, 2416.0], [44.9, 2416.0], [45.0, 2424.0], [45.1, 2424.0], [45.2, 2424.0], [45.3, 2424.0], [45.4, 2424.0], [45.5, 2424.0], [45.6, 2424.0], [45.7, 2424.0], [45.8, 2424.0], [45.9, 2424.0], [46.0, 2436.0], [46.1, 2436.0], [46.2, 2436.0], [46.3, 2436.0], [46.4, 2436.0], [46.5, 2436.0], [46.6, 2436.0], [46.7, 2436.0], [46.8, 2436.0], [46.9, 2436.0], [47.0, 2446.0], [47.1, 2446.0], [47.2, 2446.0], [47.3, 2446.0], [47.4, 2446.0], [47.5, 2446.0], [47.6, 2446.0], [47.7, 2446.0], [47.8, 2446.0], [47.9, 2446.0], [48.0, 2455.0], [48.1, 2455.0], [48.2, 2455.0], [48.3, 2455.0], [48.4, 2455.0], [48.5, 2455.0], [48.6, 2455.0], [48.7, 2455.0], [48.8, 2455.0], [48.9, 2455.0], [49.0, 2465.0], [49.1, 2465.0], [49.2, 2465.0], [49.3, 2465.0], [49.4, 2465.0], [49.5, 2465.0], [49.6, 2465.0], [49.7, 2465.0], [49.8, 2465.0], [49.9, 2465.0], [50.0, 2474.0], [50.1, 2474.0], [50.2, 2474.0], [50.3, 2474.0], [50.4, 2474.0], [50.5, 2474.0], [50.6, 2474.0], [50.7, 2474.0], [50.8, 2474.0], [50.9, 2474.0], [51.0, 2484.0], [51.1, 2484.0], [51.2, 2484.0], [51.3, 2484.0], [51.4, 2484.0], [51.5, 2484.0], [51.6, 2484.0], [51.7, 2484.0], [51.8, 2484.0], [51.9, 2484.0], [52.0, 2495.0], [52.1, 2495.0], [52.2, 2495.0], [52.3, 2495.0], [52.4, 2495.0], [52.5, 2495.0], [52.6, 2495.0], [52.7, 2495.0], [52.8, 2495.0], [52.9, 2495.0], [53.0, 2506.0], [53.1, 2506.0], [53.2, 2506.0], [53.3, 2506.0], [53.4, 2506.0], [53.5, 2506.0], [53.6, 2506.0], [53.7, 2506.0], [53.8, 2506.0], [53.9, 2506.0], [54.0, 2516.0], [54.1, 2516.0], [54.2, 2516.0], [54.3, 2516.0], [54.4, 2516.0], [54.5, 2516.0], [54.6, 2516.0], [54.7, 2516.0], [54.8, 2516.0], [54.9, 2516.0], [55.0, 2524.0], [55.1, 2524.0], [55.2, 2524.0], [55.3, 2524.0], [55.4, 2524.0], [55.5, 2524.0], [55.6, 2524.0], [55.7, 2524.0], [55.8, 2524.0], [55.9, 2524.0], [56.0, 2534.0], [56.1, 2534.0], [56.2, 2534.0], [56.3, 2534.0], [56.4, 2534.0], [56.5, 2534.0], [56.6, 2534.0], [56.7, 2534.0], [56.8, 2534.0], [56.9, 2534.0], [57.0, 2544.0], [57.1, 2544.0], [57.2, 2544.0], [57.3, 2544.0], [57.4, 2544.0], [57.5, 2544.0], [57.6, 2544.0], [57.7, 2544.0], [57.8, 2544.0], [57.9, 2544.0], [58.0, 2552.0], [58.1, 2552.0], [58.2, 2552.0], [58.3, 2552.0], [58.4, 2552.0], [58.5, 2552.0], [58.6, 2552.0], [58.7, 2552.0], [58.8, 2552.0], [58.9, 2552.0], [59.0, 2563.0], [59.1, 2563.0], [59.2, 2563.0], [59.3, 2563.0], [59.4, 2563.0], [59.5, 2563.0], [59.6, 2563.0], [59.7, 2563.0], [59.8, 2563.0], [59.9, 2563.0], [60.0, 2574.0], [60.1, 2574.0], [60.2, 2574.0], [60.3, 2574.0], [60.4, 2574.0], [60.5, 2574.0], [60.6, 2574.0], [60.7, 2574.0], [60.8, 2574.0], [60.9, 2574.0], [61.0, 2581.0], [61.1, 2581.0], [61.2, 2581.0], [61.3, 2581.0], [61.4, 2581.0], [61.5, 2581.0], [61.6, 2581.0], [61.7, 2581.0], [61.8, 2581.0], [61.9, 2581.0], [62.0, 2583.0], [62.1, 2583.0], [62.2, 2583.0], [62.3, 2583.0], [62.4, 2583.0], [62.5, 2583.0], [62.6, 2583.0], [62.7, 2583.0], [62.8, 2583.0], [62.9, 2583.0], [63.0, 2589.0], [63.1, 2589.0], [63.2, 2589.0], [63.3, 2589.0], [63.4, 2589.0], [63.5, 2589.0], [63.6, 2589.0], [63.7, 2589.0], [63.8, 2589.0], [63.9, 2589.0], [64.0, 2603.0], [64.1, 2603.0], [64.2, 2603.0], [64.3, 2603.0], [64.4, 2603.0], [64.5, 2603.0], [64.6, 2603.0], [64.7, 2603.0], [64.8, 2603.0], [64.9, 2603.0], [65.0, 2610.0], [65.1, 2610.0], [65.2, 2610.0], [65.3, 2610.0], [65.4, 2610.0], [65.5, 2610.0], [65.6, 2610.0], [65.7, 2610.0], [65.8, 2610.0], [65.9, 2610.0], [66.0, 2620.0], [66.1, 2620.0], [66.2, 2620.0], [66.3, 2620.0], [66.4, 2620.0], [66.5, 2620.0], [66.6, 2620.0], [66.7, 2620.0], [66.8, 2620.0], [66.9, 2620.0], [67.0, 2642.0], [67.1, 2642.0], [67.2, 2642.0], [67.3, 2642.0], [67.4, 2642.0], [67.5, 2642.0], [67.6, 2642.0], [67.7, 2642.0], [67.8, 2642.0], [67.9, 2642.0], [68.0, 3228.0], [68.1, 3228.0], [68.2, 3228.0], [68.3, 3228.0], [68.4, 3228.0], [68.5, 3228.0], [68.6, 3228.0], [68.7, 3228.0], [68.8, 3228.0], [68.9, 3228.0], [69.0, 3240.0], [69.1, 3240.0], [69.2, 3240.0], [69.3, 3240.0], [69.4, 3240.0], [69.5, 3240.0], [69.6, 3240.0], [69.7, 3240.0], [69.8, 3240.0], [69.9, 3240.0], [70.0, 3249.0], [70.1, 3249.0], [70.2, 3249.0], [70.3, 3249.0], [70.4, 3249.0], [70.5, 3249.0], [70.6, 3249.0], [70.7, 3249.0], [70.8, 3249.0], [70.9, 3249.0], [71.0, 3258.0], [71.1, 3258.0], [71.2, 3258.0], [71.3, 3258.0], [71.4, 3258.0], [71.5, 3258.0], [71.6, 3258.0], [71.7, 3258.0], [71.8, 3258.0], [71.9, 3258.0], [72.0, 3268.0], [72.1, 3268.0], [72.2, 3268.0], [72.3, 3268.0], [72.4, 3268.0], [72.5, 3268.0], [72.6, 3268.0], [72.7, 3268.0], [72.8, 3268.0], [72.9, 3268.0], [73.0, 3278.0], [73.1, 3278.0], [73.2, 3278.0], [73.3, 3278.0], [73.4, 3278.0], [73.5, 3278.0], [73.6, 3278.0], [73.7, 3278.0], [73.8, 3278.0], [73.9, 3278.0], [74.0, 3288.0], [74.1, 3288.0], [74.2, 3288.0], [74.3, 3288.0], [74.4, 3288.0], [74.5, 3288.0], [74.6, 3288.0], [74.7, 3288.0], [74.8, 3288.0], [74.9, 3288.0], [75.0, 3298.0], [75.1, 3298.0], [75.2, 3298.0], [75.3, 3298.0], [75.4, 3298.0], [75.5, 3298.0], [75.6, 3298.0], [75.7, 3298.0], [75.8, 3298.0], [75.9, 3298.0], [76.0, 3305.0], [76.1, 3305.0], [76.2, 3305.0], [76.3, 3305.0], [76.4, 3305.0], [76.5, 3305.0], [76.6, 3305.0], [76.7, 3305.0], [76.8, 3305.0], [76.9, 3305.0], [77.0, 3317.0], [77.1, 3317.0], [77.2, 3317.0], [77.3, 3317.0], [77.4, 3317.0], [77.5, 3317.0], [77.6, 3317.0], [77.7, 3317.0], [77.8, 3317.0], [77.9, 3317.0], [78.0, 3326.0], [78.1, 3326.0], [78.2, 3326.0], [78.3, 3326.0], [78.4, 3326.0], [78.5, 3326.0], [78.6, 3326.0], [78.7, 3326.0], [78.8, 3326.0], [78.9, 3326.0], [79.0, 3327.0], [79.1, 3327.0], [79.2, 3327.0], [79.3, 3327.0], [79.4, 3327.0], [79.5, 3327.0], [79.6, 3327.0], [79.7, 3327.0], [79.8, 3327.0], [79.9, 3327.0], [80.0, 3339.0], [80.1, 3339.0], [80.2, 3339.0], [80.3, 3339.0], [80.4, 3339.0], [80.5, 3339.0], [80.6, 3339.0], [80.7, 3339.0], [80.8, 3339.0], [80.9, 3339.0], [81.0, 3348.0], [81.1, 3348.0], [81.2, 3348.0], [81.3, 3348.0], [81.4, 3348.0], [81.5, 3348.0], [81.6, 3348.0], [81.7, 3348.0], [81.8, 3348.0], [81.9, 3348.0], [82.0, 3357.0], [82.1, 3357.0], [82.2, 3357.0], [82.3, 3357.0], [82.4, 3357.0], [82.5, 3357.0], [82.6, 3357.0], [82.7, 3357.0], [82.8, 3357.0], [82.9, 3357.0], [83.0, 3367.0], [83.1, 3367.0], [83.2, 3367.0], [83.3, 3367.0], [83.4, 3367.0], [83.5, 3367.0], [83.6, 3367.0], [83.7, 3367.0], [83.8, 3367.0], [83.9, 3367.0], [84.0, 3377.0], [84.1, 3377.0], [84.2, 3377.0], [84.3, 3377.0], [84.4, 3377.0], [84.5, 3377.0], [84.6, 3377.0], [84.7, 3377.0], [84.8, 3377.0], [84.9, 3377.0], [85.0, 3387.0], [85.1, 3387.0], [85.2, 3387.0], [85.3, 3387.0], [85.4, 3387.0], [85.5, 3387.0], [85.6, 3387.0], [85.7, 3387.0], [85.8, 3387.0], [85.9, 3387.0], [86.0, 3404.0], [86.1, 3404.0], [86.2, 3404.0], [86.3, 3404.0], [86.4, 3404.0], [86.5, 3404.0], [86.6, 3404.0], [86.7, 3404.0], [86.8, 3404.0], [86.9, 3404.0], [87.0, 3408.0], [87.1, 3408.0], [87.2, 3408.0], [87.3, 3408.0], [87.4, 3408.0], [87.5, 3408.0], [87.6, 3408.0], [87.7, 3408.0], [87.8, 3408.0], [87.9, 3408.0], [88.0, 3416.0], [88.1, 3416.0], [88.2, 3416.0], [88.3, 3416.0], [88.4, 3416.0], [88.5, 3416.0], [88.6, 3416.0], [88.7, 3416.0], [88.8, 3416.0], [88.9, 3416.0], [89.0, 3439.0], [89.1, 3439.0], [89.2, 3439.0], [89.3, 3439.0], [89.4, 3439.0], [89.5, 3439.0], [89.6, 3439.0], [89.7, 3439.0], [89.8, 3439.0], [89.9, 3439.0], [90.0, 4154.0], [90.1, 4154.0], [90.2, 4154.0], [90.3, 4154.0], [90.4, 4154.0], [90.5, 4154.0], [90.6, 4154.0], [90.7, 4154.0], [90.8, 4154.0], [90.9, 4154.0], [91.0, 4165.0], [91.1, 4165.0], [91.2, 4165.0], [91.3, 4165.0], [91.4, 4165.0], [91.5, 4165.0], [91.6, 4165.0], [91.7, 4165.0], [91.8, 4165.0], [91.9, 4165.0], [92.0, 4175.0], [92.1, 4175.0], [92.2, 4175.0], [92.3, 4175.0], [92.4, 4175.0], [92.5, 4175.0], [92.6, 4175.0], [92.7, 4175.0], [92.8, 4175.0], [92.9, 4175.0], [93.0, 4183.0], [93.1, 4183.0], [93.2, 4183.0], [93.3, 4183.0], [93.4, 4183.0], [93.5, 4183.0], [93.6, 4183.0], [93.7, 4183.0], [93.8, 4183.0], [93.9, 4183.0], [94.0, 4195.0], [94.1, 4195.0], [94.2, 4195.0], [94.3, 4195.0], [94.4, 4195.0], [94.5, 4195.0], [94.6, 4195.0], [94.7, 4195.0], [94.8, 4195.0], [94.9, 4195.0], [95.0, 4205.0], [95.1, 4205.0], [95.2, 4205.0], [95.3, 4205.0], [95.4, 4205.0], [95.5, 4205.0], [95.6, 4205.0], [95.7, 4205.0], [95.8, 4205.0], [95.9, 4205.0], [96.0, 4213.0], [96.1, 4213.0], [96.2, 4213.0], [96.3, 4213.0], [96.4, 4213.0], [96.5, 4213.0], [96.6, 4213.0], [96.7, 4213.0], [96.8, 4213.0], [96.9, 4213.0], [97.0, 4224.0], [97.1, 4224.0], [97.2, 4224.0], [97.3, 4224.0], [97.4, 4224.0], [97.5, 4224.0], [97.6, 4224.0], [97.7, 4224.0], [97.8, 4224.0], [97.9, 4224.0], [98.0, 4237.0], [98.1, 4237.0], [98.2, 4237.0], [98.3, 4237.0], [98.4, 4237.0], [98.5, 4237.0], [98.6, 4237.0], [98.7, 4237.0], [98.8, 4237.0], [98.9, 4237.0], [99.0, 4243.0], [99.1, 4243.0], [99.2, 4243.0], [99.3, 4243.0], [99.4, 4243.0], [99.5, 4243.0], [99.6, 4243.0], [99.7, 4243.0], [99.8, 4243.0], [99.9, 4243.0]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[0.0, 168.0], [0.1, 168.0], [0.2, 168.0], [0.3, 168.0], [0.4, 168.0], [0.5, 168.0], [0.6, 168.0], [0.7, 168.0], [0.8, 168.0], [0.9, 168.0], [1.0, 168.0], [1.1, 168.0], [1.2, 168.0], [1.3, 168.0], [1.4, 168.0], [1.5, 168.0], [1.6, 168.0], [1.7, 168.0], [1.8, 168.0], [1.9, 168.0], [2.0, 174.0], [2.1, 174.0], [2.2, 174.0], [2.3, 174.0], [2.4, 174.0], [2.5, 174.0], [2.6, 174.0], [2.7, 174.0], [2.8, 174.0], [2.9, 174.0], [3.0, 180.0], [3.1, 180.0], [3.2, 180.0], [3.3, 180.0], [3.4, 180.0], [3.5, 180.0], [3.6, 180.0], [3.7, 180.0], [3.8, 180.0], [3.9, 180.0], [4.0, 180.0], [4.1, 180.0], [4.2, 180.0], [4.3, 180.0], [4.4, 180.0], [4.5, 180.0], [4.6, 180.0], [4.7, 180.0], [4.8, 180.0], [4.9, 180.0], [5.0, 181.0], [5.1, 181.0], [5.2, 181.0], [5.3, 181.0], [5.4, 181.0], [5.5, 181.0], [5.6, 181.0], [5.7, 181.0], [5.8, 181.0], [5.9, 181.0], [6.0, 182.0], [6.1, 182.0], [6.2, 182.0], [6.3, 182.0], [6.4, 182.0], [6.5, 182.0], [6.6, 182.0], [6.7, 182.0], [6.8, 182.0], [6.9, 182.0], [7.0, 185.0], [7.1, 185.0], [7.2, 185.0], [7.3, 185.0], [7.4, 185.0], [7.5, 185.0], [7.6, 185.0], [7.7, 185.0], [7.8, 185.0], [7.9, 185.0], [8.0, 185.0], [8.1, 185.0], [8.2, 185.0], [8.3, 185.0], [8.4, 185.0], [8.5, 185.0], [8.6, 185.0], [8.7, 185.0], [8.8, 185.0], [8.9, 185.0], [9.0, 185.0], [9.1, 185.0], [9.2, 185.0], [9.3, 185.0], [9.4, 185.0], [9.5, 185.0], [9.6, 185.0], [9.7, 185.0], [9.8, 185.0], [9.9, 185.0], [10.0, 186.0], [10.1, 186.0], [10.2, 186.0], [10.3, 186.0], [10.4, 186.0], [10.5, 186.0], [10.6, 186.0], [10.7, 186.0], [10.8, 186.0], [10.9, 186.0], [11.0, 186.0], [11.1, 186.0], [11.2, 186.0], [11.3, 186.0], [11.4, 186.0], [11.5, 186.0], [11.6, 186.0], [11.7, 186.0], [11.8, 186.0], [11.9, 186.0], [12.0, 188.0], [12.1, 188.0], [12.2, 188.0], [12.3, 188.0], [12.4, 188.0], [12.5, 188.0], [12.6, 188.0], [12.7, 188.0], [12.8, 188.0], [12.9, 188.0], [13.0, 192.0], [13.1, 192.0], [13.2, 192.0], [13.3, 192.0], [13.4, 192.0], [13.5, 192.0], [13.6, 192.0], [13.7, 192.0], [13.8, 192.0], [13.9, 192.0], [14.0, 192.0], [14.1, 192.0], [14.2, 192.0], [14.3, 192.0], [14.4, 192.0], [14.5, 192.0], [14.6, 192.0], [14.7, 192.0], [14.8, 192.0], [14.9, 192.0], [15.0, 193.0], [15.1, 193.0], [15.2, 193.0], [15.3, 193.0], [15.4, 193.0], [15.5, 193.0], [15.6, 193.0], [15.7, 193.0], [15.8, 193.0], [15.9, 193.0], [16.0, 199.0], [16.1, 199.0], [16.2, 199.0], [16.3, 199.0], [16.4, 199.0], [16.5, 199.0], [16.6, 199.0], [16.7, 199.0], [16.8, 199.0], [16.9, 199.0], [17.0, 199.0], [17.1, 199.0], [17.2, 199.0], [17.3, 199.0], [17.4, 199.0], [17.5, 199.0], [17.6, 199.0], [17.7, 199.0], [17.8, 199.0], [17.9, 199.0], [18.0, 199.0], [18.1, 199.0], [18.2, 199.0], [18.3, 199.0], [18.4, 199.0], [18.5, 199.0], [18.6, 199.0], [18.7, 199.0], [18.8, 199.0], [18.9, 199.0], [19.0, 199.0], [19.1, 199.0], [19.2, 199.0], [19.3, 199.0], [19.4, 199.0], [19.5, 199.0], [19.6, 199.0], [19.7, 199.0], [19.8, 199.0], [19.9, 199.0], [20.0, 200.0], [20.1, 200.0], [20.2, 200.0], [20.3, 200.0], [20.4, 200.0], [20.5, 200.0], [20.6, 200.0], [20.7, 200.0], [20.8, 200.0], [20.9, 200.0], [21.0, 200.0], [21.1, 200.0], [21.2, 200.0], [21.3, 200.0], [21.4, 200.0], [21.5, 200.0], [21.6, 200.0], [21.7, 200.0], [21.8, 200.0], [21.9, 200.0], [22.0, 200.0], [22.1, 200.0], [22.2, 200.0], [22.3, 200.0], [22.4, 200.0], [22.5, 200.0], [22.6, 200.0], [22.7, 200.0], [22.8, 200.0], [22.9, 200.0], [23.0, 206.0], [23.1, 206.0], [23.2, 206.0], [23.3, 206.0], [23.4, 206.0], [23.5, 206.0], [23.6, 206.0], [23.7, 206.0], [23.8, 206.0], [23.9, 206.0], [24.0, 206.0], [24.1, 206.0], [24.2, 206.0], [24.3, 206.0], [24.4, 206.0], [24.5, 206.0], [24.6, 206.0], [24.7, 206.0], [24.8, 206.0], [24.9, 206.0], [25.0, 206.0], [25.1, 206.0], [25.2, 206.0], [25.3, 206.0], [25.4, 206.0], [25.5, 206.0], [25.6, 206.0], [25.7, 206.0], [25.8, 206.0], [25.9, 206.0], [26.0, 208.0], [26.1, 208.0], [26.2, 208.0], [26.3, 208.0], [26.4, 208.0], [26.5, 208.0], [26.6, 208.0], [26.7, 208.0], [26.8, 208.0], [26.9, 208.0], [27.0, 209.0], [27.1, 209.0], [27.2, 209.0], [27.3, 209.0], [27.4, 209.0], [27.5, 209.0], [27.6, 209.0], [27.7, 209.0], [27.8, 209.0], [27.9, 209.0], [28.0, 216.0], [28.1, 216.0], [28.2, 216.0], [28.3, 216.0], [28.4, 216.0], [28.5, 216.0], [28.6, 216.0], [28.7, 216.0], [28.8, 216.0], [28.9, 216.0], [29.0, 217.0], [29.1, 217.0], [29.2, 217.0], [29.3, 217.0], [29.4, 217.0], [29.5, 217.0], [29.6, 217.0], [29.7, 217.0], [29.8, 217.0], [29.9, 217.0], [30.0, 217.0], [30.1, 217.0], [30.2, 217.0], [30.3, 217.0], [30.4, 217.0], [30.5, 217.0], [30.6, 217.0], [30.7, 217.0], [30.8, 217.0], [30.9, 217.0], [31.0, 217.0], [31.1, 217.0], [31.2, 217.0], [31.3, 217.0], [31.4, 217.0], [31.5, 217.0], [31.6, 217.0], [31.7, 217.0], [31.8, 217.0], [31.9, 217.0], [32.0, 219.0], [32.1, 219.0], [32.2, 219.0], [32.3, 219.0], [32.4, 219.0], [32.5, 219.0], [32.6, 219.0], [32.7, 219.0], [32.8, 219.0], [32.9, 219.0], [33.0, 219.0], [33.1, 219.0], [33.2, 219.0], [33.3, 219.0], [33.4, 219.0], [33.5, 219.0], [33.6, 219.0], [33.7, 219.0], [33.8, 219.0], [33.9, 219.0], [34.0, 225.0], [34.1, 225.0], [34.2, 225.0], [34.3, 225.0], [34.4, 225.0], [34.5, 225.0], [34.6, 225.0], [34.7, 225.0], [34.8, 225.0], [34.9, 225.0], [35.0, 227.0], [35.1, 227.0], [35.2, 227.0], [35.3, 227.0], [35.4, 227.0], [35.5, 227.0], [35.6, 227.0], [35.7, 227.0], [35.8, 227.0], [35.9, 227.0], [36.0, 229.0], [36.1, 229.0], [36.2, 229.0], [36.3, 229.0], [36.4, 229.0], [36.5, 229.0], [36.6, 229.0], [36.7, 229.0], [36.8, 229.0], [36.9, 229.0], [37.0, 231.0], [37.1, 231.0], [37.2, 231.0], [37.3, 231.0], [37.4, 231.0], [37.5, 231.0], [37.6, 231.0], [37.7, 231.0], [37.8, 231.0], [37.9, 231.0], [38.0, 231.0], [38.1, 231.0], [38.2, 231.0], [38.3, 231.0], [38.4, 231.0], [38.5, 231.0], [38.6, 231.0], [38.7, 231.0], [38.8, 231.0], [38.9, 231.0], [39.0, 232.0], [39.1, 232.0], [39.2, 232.0], [39.3, 232.0], [39.4, 232.0], [39.5, 232.0], [39.6, 232.0], [39.7, 232.0], [39.8, 232.0], [39.9, 232.0], [40.0, 242.0], [40.1, 242.0], [40.2, 242.0], [40.3, 242.0], [40.4, 242.0], [40.5, 242.0], [40.6, 242.0], [40.7, 242.0], [40.8, 242.0], [40.9, 242.0], [41.0, 247.0], [41.1, 247.0], [41.2, 247.0], [41.3, 247.0], [41.4, 247.0], [41.5, 247.0], [41.6, 247.0], [41.7, 247.0], [41.8, 247.0], [41.9, 247.0], [42.0, 250.0], [42.1, 250.0], [42.2, 250.0], [42.3, 250.0], [42.4, 250.0], [42.5, 250.0], [42.6, 250.0], [42.7, 250.0], [42.8, 250.0], [42.9, 250.0], [43.0, 250.0], [43.1, 250.0], [43.2, 250.0], [43.3, 250.0], [43.4, 250.0], [43.5, 250.0], [43.6, 250.0], [43.7, 250.0], [43.8, 250.0], [43.9, 250.0], [44.0, 250.0], [44.1, 250.0], [44.2, 250.0], [44.3, 250.0], [44.4, 250.0], [44.5, 250.0], [44.6, 250.0], [44.7, 250.0], [44.8, 250.0], [44.9, 250.0], [45.0, 251.0], [45.1, 251.0], [45.2, 251.0], [45.3, 251.0], [45.4, 251.0], [45.5, 251.0], [45.6, 251.0], [45.7, 251.0], [45.8, 251.0], [45.9, 251.0], [46.0, 252.0], [46.1, 252.0], [46.2, 252.0], [46.3, 252.0], [46.4, 252.0], [46.5, 252.0], [46.6, 252.0], [46.7, 252.0], [46.8, 252.0], [46.9, 252.0], [47.0, 256.0], [47.1, 256.0], [47.2, 256.0], [47.3, 256.0], [47.4, 256.0], [47.5, 256.0], [47.6, 256.0], [47.7, 256.0], [47.8, 256.0], [47.9, 256.0], [48.0, 257.0], [48.1, 257.0], [48.2, 257.0], [48.3, 257.0], [48.4, 257.0], [48.5, 257.0], [48.6, 257.0], [48.7, 257.0], [48.8, 257.0], [48.9, 257.0], [49.0, 257.0], [49.1, 257.0], [49.2, 257.0], [49.3, 257.0], [49.4, 257.0], [49.5, 257.0], [49.6, 257.0], [49.7, 257.0], [49.8, 257.0], [49.9, 257.0], [50.0, 263.0], [50.1, 263.0], [50.2, 263.0], [50.3, 263.0], [50.4, 263.0], [50.5, 263.0], [50.6, 263.0], [50.7, 263.0], [50.8, 263.0], [50.9, 263.0], [51.0, 265.0], [51.1, 265.0], [51.2, 265.0], [51.3, 265.0], [51.4, 265.0], [51.5, 265.0], [51.6, 265.0], [51.7, 265.0], [51.8, 265.0], [51.9, 265.0], [52.0, 266.0], [52.1, 266.0], [52.2, 266.0], [52.3, 266.0], [52.4, 266.0], [52.5, 266.0], [52.6, 266.0], [52.7, 266.0], [52.8, 266.0], [52.9, 266.0], [53.0, 268.0], [53.1, 268.0], [53.2, 268.0], [53.3, 268.0], [53.4, 268.0], [53.5, 268.0], [53.6, 268.0], [53.7, 268.0], [53.8, 268.0], [53.9, 268.0], [54.0, 269.0], [54.1, 269.0], [54.2, 269.0], [54.3, 269.0], [54.4, 269.0], [54.5, 269.0], [54.6, 269.0], [54.7, 269.0], [54.8, 269.0], [54.9, 269.0], [55.0, 269.0], [55.1, 269.0], [55.2, 269.0], [55.3, 269.0], [55.4, 269.0], [55.5, 269.0], [55.6, 269.0], [55.7, 269.0], [55.8, 269.0], [55.9, 269.0], [56.0, 271.0], [56.1, 271.0], [56.2, 271.0], [56.3, 271.0], [56.4, 271.0], [56.5, 271.0], [56.6, 271.0], [56.7, 271.0], [56.8, 271.0], [56.9, 271.0], [57.0, 271.0], [57.1, 271.0], [57.2, 271.0], [57.3, 271.0], [57.4, 271.0], [57.5, 271.0], [57.6, 271.0], [57.7, 271.0], [57.8, 271.0], [57.9, 271.0], [58.0, 272.0], [58.1, 272.0], [58.2, 272.0], [58.3, 272.0], [58.4, 272.0], [58.5, 272.0], [58.6, 272.0], [58.7, 272.0], [58.8, 272.0], [58.9, 272.0], [59.0, 272.0], [59.1, 272.0], [59.2, 272.0], [59.3, 272.0], [59.4, 272.0], [59.5, 272.0], [59.6, 272.0], [59.7, 272.0], [59.8, 272.0], [59.9, 272.0], [60.0, 282.0], [60.1, 282.0], [60.2, 282.0], [60.3, 282.0], [60.4, 282.0], [60.5, 282.0], [60.6, 282.0], [60.7, 282.0], [60.8, 282.0], [60.9, 282.0], [61.0, 284.0], [61.1, 284.0], [61.2, 284.0], [61.3, 284.0], [61.4, 284.0], [61.5, 284.0], [61.6, 284.0], [61.7, 284.0], [61.8, 284.0], [61.9, 284.0], [62.0, 288.0], [62.1, 288.0], [62.2, 288.0], [62.3, 288.0], [62.4, 288.0], [62.5, 288.0], [62.6, 288.0], [62.7, 288.0], [62.8, 288.0], [62.9, 288.0], [63.0, 289.0], [63.1, 289.0], [63.2, 289.0], [63.3, 289.0], [63.4, 289.0], [63.5, 289.0], [63.6, 289.0], [63.7, 289.0], [63.8, 289.0], [63.9, 289.0], [64.0, 289.0], [64.1, 289.0], [64.2, 289.0], [64.3, 289.0], [64.4, 289.0], [64.5, 289.0], [64.6, 289.0], [64.7, 289.0], [64.8, 289.0], [64.9, 289.0], [65.0, 289.0], [65.1, 289.0], [65.2, 289.0], [65.3, 289.0], [65.4, 289.0], [65.5, 289.0], [65.6, 289.0], [65.7, 289.0], [65.8, 289.0], [65.9, 289.0], [66.0, 294.0], [66.1, 294.0], [66.2, 294.0], [66.3, 294.0], [66.4, 294.0], [66.5, 294.0], [66.6, 294.0], [66.7, 294.0], [66.8, 294.0], [66.9, 294.0], [67.0, 301.0], [67.1, 301.0], [67.2, 301.0], [67.3, 301.0], [67.4, 301.0], [67.5, 301.0], [67.6, 301.0], [67.7, 301.0], [67.8, 301.0], [67.9, 301.0], [68.0, 304.0], [68.1, 304.0], [68.2, 304.0], [68.3, 304.0], [68.4, 304.0], [68.5, 304.0], [68.6, 304.0], [68.7, 304.0], [68.8, 304.0], [68.9, 304.0], [69.0, 316.0], [69.1, 316.0], [69.2, 316.0], [69.3, 316.0], [69.4, 316.0], [69.5, 316.0], [69.6, 316.0], [69.7, 316.0], [69.8, 316.0], [69.9, 316.0], [70.0, 378.0], [70.1, 378.0], [70.2, 378.0], [70.3, 378.0], [70.4, 378.0], [70.5, 378.0], [70.6, 378.0], [70.7, 378.0], [70.8, 378.0], [70.9, 378.0], [71.0, 389.0], [71.1, 389.0], [71.2, 389.0], [71.3, 389.0], [71.4, 389.0], [71.5, 389.0], [71.6, 389.0], [71.7, 389.0], [71.8, 389.0], [71.9, 389.0], [72.0, 389.0], [72.1, 389.0], [72.2, 389.0], [72.3, 389.0], [72.4, 389.0], [72.5, 389.0], [72.6, 389.0], [72.7, 389.0], [72.8, 389.0], [72.9, 389.0], [73.0, 390.0], [73.1, 390.0], [73.2, 390.0], [73.3, 390.0], [73.4, 390.0], [73.5, 390.0], [73.6, 390.0], [73.7, 390.0], [73.8, 390.0], [73.9, 390.0], [74.0, 392.0], [74.1, 392.0], [74.2, 392.0], [74.3, 392.0], [74.4, 392.0], [74.5, 392.0], [74.6, 392.0], [74.7, 392.0], [74.8, 392.0], [74.9, 392.0], [75.0, 392.0], [75.1, 392.0], [75.2, 392.0], [75.3, 392.0], [75.4, 392.0], [75.5, 392.0], [75.6, 392.0], [75.7, 392.0], [75.8, 392.0], [75.9, 392.0], [76.0, 394.0], [76.1, 394.0], [76.2, 394.0], [76.3, 394.0], [76.4, 394.0], [76.5, 394.0], [76.6, 394.0], [76.7, 394.0], [76.8, 394.0], [76.9, 394.0], [77.0, 395.0], [77.1, 395.0], [77.2, 395.0], [77.3, 395.0], [77.4, 395.0], [77.5, 395.0], [77.6, 395.0], [77.7, 395.0], [77.8, 395.0], [77.9, 395.0], [78.0, 4559.0], [78.1, 4559.0], [78.2, 4559.0], [78.3, 4559.0], [78.4, 4559.0], [78.5, 4559.0], [78.6, 4559.0], [78.7, 4559.0], [78.8, 4559.0], [78.9, 4559.0], [79.0, 4823.0], [79.1, 4823.0], [79.2, 4823.0], [79.3, 4823.0], [79.4, 4823.0], [79.5, 4823.0], [79.6, 4823.0], [79.7, 4823.0], [79.8, 4823.0], [79.9, 4823.0], [80.0, 4825.0], [80.1, 4825.0], [80.2, 4825.0], [80.3, 4825.0], [80.4, 4825.0], [80.5, 4825.0], [80.6, 4825.0], [80.7, 4825.0], [80.8, 4825.0], [80.9, 4825.0], [81.0, 4825.0], [81.1, 4825.0], [81.2, 4825.0], [81.3, 4825.0], [81.4, 4825.0], [81.5, 4825.0], [81.6, 4825.0], [81.7, 4825.0], [81.8, 4825.0], [81.9, 4825.0], [82.0, 4828.0], [82.1, 4828.0], [82.2, 4828.0], [82.3, 4828.0], [82.4, 4828.0], [82.5, 4828.0], [82.6, 4828.0], [82.7, 4828.0], [82.8, 4828.0], [82.9, 4828.0], [83.0, 4832.0], [83.1, 4832.0], [83.2, 4832.0], [83.3, 4832.0], [83.4, 4832.0], [83.5, 4832.0], [83.6, 4832.0], [83.7, 4832.0], [83.8, 4832.0], [83.9, 4832.0], [84.0, 4835.0], [84.1, 4835.0], [84.2, 4835.0], [84.3, 4835.0], [84.4, 4835.0], [84.5, 4835.0], [84.6, 4835.0], [84.7, 4835.0], [84.8, 4835.0], [84.9, 4835.0], [85.0, 4839.0], [85.1, 4839.0], [85.2, 4839.0], [85.3, 4839.0], [85.4, 4839.0], [85.5, 4839.0], [85.6, 4839.0], [85.7, 4839.0], [85.8, 4839.0], [85.9, 4839.0], [86.0, 15016.0], [86.1, 15016.0], [86.2, 15016.0], [86.3, 15016.0], [86.4, 15016.0], [86.5, 15016.0], [86.6, 15016.0], [86.7, 15016.0], [86.8, 15016.0], [86.9, 15016.0], [87.0, 18090.0], [87.1, 18090.0], [87.2, 18090.0], [87.3, 18090.0], [87.4, 18090.0], [87.5, 18090.0], [87.6, 18090.0], [87.7, 18090.0], [87.8, 18090.0], [87.9, 18090.0], [88.0, 25080.0], [88.1, 25080.0], [88.2, 25080.0], [88.3, 25080.0], [88.4, 25080.0], [88.5, 25080.0], [88.6, 25080.0], [88.7, 25080.0], [88.8, 25080.0], [88.9, 25080.0], [89.0, 25081.0], [89.1, 25081.0], [89.2, 25081.0], [89.3, 25081.0], [89.4, 25081.0], [89.5, 25081.0], [89.6, 25081.0], [89.7, 25081.0], [89.8, 25081.0], [89.9, 25081.0], [90.0, 25083.0], [90.1, 25083.0], [90.2, 25083.0], [90.3, 25083.0], [90.4, 25083.0], [90.5, 25083.0], [90.6, 25083.0], [90.7, 25083.0], [90.8, 25083.0], [90.9, 25083.0], [91.0, 25083.0], [91.1, 25083.0], [91.2, 25083.0], [91.3, 25083.0], [91.4, 25083.0], [91.5, 25083.0], [91.6, 25083.0], [91.7, 25083.0], [91.8, 25083.0], [91.9, 25083.0], [92.0, 25084.0], [92.1, 25084.0], [92.2, 25084.0], [92.3, 25084.0], [92.4, 25084.0], [92.5, 25084.0], [92.6, 25084.0], [92.7, 25084.0], [92.8, 25084.0], [92.9, 25084.0], [93.0, 26237.0], [93.1, 26237.0], [93.2, 26237.0], [93.3, 26237.0], [93.4, 26237.0], [93.5, 26237.0], [93.6, 26237.0], [93.7, 26237.0], [93.8, 26237.0], [93.9, 26237.0], [94.0, 26731.0], [94.1, 26731.0], [94.2, 26731.0], [94.3, 26731.0], [94.4, 26731.0], [94.5, 26731.0], [94.6, 26731.0], [94.7, 26731.0], [94.8, 26731.0], [94.9, 26731.0], [95.0, 26731.0], [95.1, 26731.0], [95.2, 26731.0], [95.3, 26731.0], [95.4, 26731.0], [95.5, 26731.0], [95.6, 26731.0], [95.7, 26731.0], [95.8, 26731.0], [95.9, 26731.0], [96.0, 26732.0], [96.1, 26732.0], [96.2, 26732.0], [96.3, 26732.0], [96.4, 26732.0], [96.5, 26732.0], [96.6, 26732.0], [96.7, 26732.0], [96.8, 26732.0], [96.9, 26732.0], [97.0, 26733.0], [97.1, 26733.0], [97.2, 26733.0], [97.3, 26733.0], [97.4, 26733.0], [97.5, 26733.0], [97.6, 26733.0], [97.7, 26733.0], [97.8, 26733.0], [97.9, 26733.0], [98.0, 26734.0], [98.1, 26734.0], [98.2, 26734.0], [98.3, 26734.0], [98.4, 26734.0], [98.5, 26734.0], [98.6, 26734.0], [98.7, 26734.0], [98.8, 26734.0], [98.9, 26734.0], [99.0, 29688.0], [99.1, 29688.0], [99.2, 29688.0], [99.3, 29688.0], [99.4, 29688.0], [99.5, 29688.0], [99.6, 29688.0], [99.7, 29688.0], [99.8, 29688.0], [99.9, 29688.0]], "isOverall": false, "label": "POST /graphql - Page Search", "isController": false}, {"data": [[0.0, 54.0], [0.1, 54.0], [0.2, 54.0], [0.3, 54.0], [0.4, 54.0], [0.5, 54.0], [0.6, 54.0], [0.7, 54.0], [0.8, 54.0], [0.9, 54.0], [1.0, 55.0], [1.1, 55.0], [1.2, 55.0], [1.3, 55.0], [1.4, 55.0], [1.5, 55.0], [1.6, 55.0], [1.7, 55.0], [1.8, 55.0], [1.9, 55.0], [2.0, 55.0], [2.1, 55.0], [2.2, 55.0], [2.3, 55.0], [2.4, 55.0], [2.5, 55.0], [2.6, 55.0], [2.7, 55.0], [2.8, 55.0], [2.9, 55.0], [3.0, 55.0], [3.1, 55.0], [3.2, 55.0], [3.3, 55.0], [3.4, 55.0], [3.5, 55.0], [3.6, 55.0], [3.7, 55.0], [3.8, 55.0], [3.9, 55.0], [4.0, 55.0], [4.1, 55.0], [4.2, 55.0], [4.3, 55.0], [4.4, 55.0], [4.5, 55.0], [4.6, 55.0], [4.7, 55.0], [4.8, 55.0], [4.9, 55.0], [5.0, 55.0], [5.1, 55.0], [5.2, 55.0], [5.3, 55.0], [5.4, 55.0], [5.5, 55.0], [5.6, 55.0], [5.7, 55.0], [5.8, 55.0], [5.9, 55.0], [6.0, 55.0], [6.1, 55.0], [6.2, 55.0], [6.3, 55.0], [6.4, 55.0], [6.5, 55.0], [6.6, 55.0], [6.7, 55.0], [6.8, 55.0], [6.9, 55.0], [7.0, 55.0], [7.1, 55.0], [7.2, 55.0], [7.3, 55.0], [7.4, 55.0], [7.5, 55.0], [7.6, 55.0], [7.7, 55.0], [7.8, 55.0], [7.9, 55.0], [8.0, 55.0], [8.1, 55.0], [8.2, 55.0], [8.3, 55.0], [8.4, 55.0], [8.5, 55.0], [8.6, 55.0], [8.7, 55.0], [8.8, 55.0], [8.9, 55.0], [9.0, 56.0], [9.1, 56.0], [9.2, 56.0], [9.3, 56.0], [9.4, 56.0], [9.5, 56.0], [9.6, 56.0], [9.7, 56.0], [9.8, 56.0], [9.9, 56.0], [10.0, 58.0], [10.1, 58.0], [10.2, 58.0], [10.3, 58.0], [10.4, 58.0], [10.5, 58.0], [10.6, 58.0], [10.7, 58.0], [10.8, 58.0], [10.9, 58.0], [11.0, 59.0], [11.1, 59.0], [11.2, 59.0], [11.3, 59.0], [11.4, 59.0], [11.5, 59.0], [11.6, 59.0], [11.7, 59.0], [11.8, 59.0], [11.9, 59.0], [12.0, 59.0], [12.1, 59.0], [12.2, 59.0], [12.3, 59.0], [12.4, 59.0], [12.5, 59.0], [12.6, 59.0], [12.7, 59.0], [12.8, 59.0], [12.9, 59.0], [13.0, 59.0], [13.1, 59.0], [13.2, 59.0], [13.3, 59.0], [13.4, 59.0], [13.5, 59.0], [13.6, 59.0], [13.7, 59.0], [13.8, 59.0], [13.9, 59.0], [14.0, 59.0], [14.1, 59.0], [14.2, 59.0], [14.3, 59.0], [14.4, 59.0], [14.5, 59.0], [14.6, 59.0], [14.7, 59.0], [14.8, 59.0], [14.9, 59.0], [15.0, 59.0], [15.1, 59.0], [15.2, 59.0], [15.3, 59.0], [15.4, 59.0], [15.5, 59.0], [15.6, 59.0], [15.7, 59.0], [15.8, 59.0], [15.9, 59.0], [16.0, 63.0], [16.1, 63.0], [16.2, 63.0], [16.3, 63.0], [16.4, 63.0], [16.5, 63.0], [16.6, 63.0], [16.7, 63.0], [16.8, 63.0], [16.9, 63.0], [17.0, 80.0], [17.1, 80.0], [17.2, 80.0], [17.3, 80.0], [17.4, 80.0], [17.5, 80.0], [17.6, 80.0], [17.7, 80.0], [17.8, 80.0], [17.9, 80.0], [18.0, 84.0], [18.1, 84.0], [18.2, 84.0], [18.3, 84.0], [18.4, 84.0], [18.5, 84.0], [18.6, 84.0], [18.7, 84.0], [18.8, 84.0], [18.9, 84.0], [19.0, 84.0], [19.1, 84.0], [19.2, 84.0], [19.3, 84.0], [19.4, 84.0], [19.5, 84.0], [19.6, 84.0], [19.7, 84.0], [19.8, 84.0], [19.9, 84.0], [20.0, 85.0], [20.1, 85.0], [20.2, 85.0], [20.3, 85.0], [20.4, 85.0], [20.5, 85.0], [20.6, 85.0], [20.7, 85.0], [20.8, 85.0], [20.9, 85.0], [21.0, 86.0], [21.1, 86.0], [21.2, 86.0], [21.3, 86.0], [21.4, 86.0], [21.5, 86.0], [21.6, 86.0], [21.7, 86.0], [21.8, 86.0], [21.9, 86.0], [22.0, 86.0], [22.1, 86.0], [22.2, 86.0], [22.3, 86.0], [22.4, 86.0], [22.5, 86.0], [22.6, 86.0], [22.7, 86.0], [22.8, 86.0], [22.9, 86.0], [23.0, 86.0], [23.1, 86.0], [23.2, 86.0], [23.3, 86.0], [23.4, 86.0], [23.5, 86.0], [23.6, 86.0], [23.7, 86.0], [23.8, 86.0], [23.9, 86.0], [24.0, 87.0], [24.1, 87.0], [24.2, 87.0], [24.3, 87.0], [24.4, 87.0], [24.5, 87.0], [24.6, 87.0], [24.7, 87.0], [24.8, 87.0], [24.9, 87.0], [25.0, 87.0], [25.1, 87.0], [25.2, 87.0], [25.3, 87.0], [25.4, 87.0], [25.5, 87.0], [25.6, 87.0], [25.7, 87.0], [25.8, 87.0], [25.9, 87.0], [26.0, 88.0], [26.1, 88.0], [26.2, 88.0], [26.3, 88.0], [26.4, 88.0], [26.5, 88.0], [26.6, 88.0], [26.7, 88.0], [26.8, 88.0], [26.9, 88.0], [27.0, 90.0], [27.1, 90.0], [27.2, 90.0], [27.3, 90.0], [27.4, 90.0], [27.5, 90.0], [27.6, 90.0], [27.7, 90.0], [27.8, 90.0], [27.9, 90.0], [28.0, 90.0], [28.1, 90.0], [28.2, 90.0], [28.3, 90.0], [28.4, 90.0], [28.5, 90.0], [28.6, 90.0], [28.7, 90.0], [28.8, 90.0], [28.9, 90.0], [29.0, 90.0], [29.1, 90.0], [29.2, 90.0], [29.3, 90.0], [29.4, 90.0], [29.5, 90.0], [29.6, 90.0], [29.7, 90.0], [29.8, 90.0], [29.9, 90.0], [30.0, 95.0], [30.1, 95.0], [30.2, 95.0], [30.3, 95.0], [30.4, 95.0], [30.5, 95.0], [30.6, 95.0], [30.7, 95.0], [30.8, 95.0], [30.9, 95.0], [31.0, 95.0], [31.1, 95.0], [31.2, 95.0], [31.3, 95.0], [31.4, 95.0], [31.5, 95.0], [31.6, 95.0], [31.7, 95.0], [31.8, 95.0], [31.9, 95.0], [32.0, 96.0], [32.1, 96.0], [32.2, 96.0], [32.3, 96.0], [32.4, 96.0], [32.5, 96.0], [32.6, 96.0], [32.7, 96.0], [32.8, 96.0], [32.9, 96.0], [33.0, 96.0], [33.1, 96.0], [33.2, 96.0], [33.3, 96.0], [33.4, 96.0], [33.5, 96.0], [33.6, 96.0], [33.7, 96.0], [33.8, 96.0], [33.9, 96.0], [34.0, 96.0], [34.1, 96.0], [34.2, 96.0], [34.3, 96.0], [34.4, 96.0], [34.5, 96.0], [34.6, 96.0], [34.7, 96.0], [34.8, 96.0], [34.9, 96.0], [35.0, 96.0], [35.1, 96.0], [35.2, 96.0], [35.3, 96.0], [35.4, 96.0], [35.5, 96.0], [35.6, 96.0], [35.7, 96.0], [35.8, 96.0], [35.9, 96.0], [36.0, 97.0], [36.1, 97.0], [36.2, 97.0], [36.3, 97.0], [36.4, 97.0], [36.5, 97.0], [36.6, 97.0], [36.7, 97.0], [36.8, 97.0], [36.9, 97.0], [37.0, 98.0], [37.1, 98.0], [37.2, 98.0], [37.3, 98.0], [37.4, 98.0], [37.5, 98.0], [37.6, 98.0], [37.7, 98.0], [37.8, 98.0], [37.9, 98.0], [38.0, 103.0], [38.1, 103.0], [38.2, 103.0], [38.3, 103.0], [38.4, 103.0], [38.5, 103.0], [38.6, 103.0], [38.7, 103.0], [38.8, 103.0], [38.9, 103.0], [39.0, 103.0], [39.1, 103.0], [39.2, 103.0], [39.3, 103.0], [39.4, 103.0], [39.5, 103.0], [39.6, 103.0], [39.7, 103.0], [39.8, 103.0], [39.9, 103.0], [40.0, 104.0], [40.1, 104.0], [40.2, 104.0], [40.3, 104.0], [40.4, 104.0], [40.5, 104.0], [40.6, 104.0], [40.7, 104.0], [40.8, 104.0], [40.9, 104.0], [41.0, 105.0], [41.1, 105.0], [41.2, 105.0], [41.3, 105.0], [41.4, 105.0], [41.5, 105.0], [41.6, 105.0], [41.7, 105.0], [41.8, 105.0], [41.9, 105.0], [42.0, 105.0], [42.1, 105.0], [42.2, 105.0], [42.3, 105.0], [42.4, 105.0], [42.5, 105.0], [42.6, 105.0], [42.7, 105.0], [42.8, 105.0], [42.9, 105.0], [43.0, 105.0], [43.1, 105.0], [43.2, 105.0], [43.3, 105.0], [43.4, 105.0], [43.5, 105.0], [43.6, 105.0], [43.7, 105.0], [43.8, 105.0], [43.9, 105.0], [44.0, 105.0], [44.1, 105.0], [44.2, 105.0], [44.3, 105.0], [44.4, 105.0], [44.5, 105.0], [44.6, 105.0], [44.7, 105.0], [44.8, 105.0], [44.9, 105.0], [45.0, 106.0], [45.1, 106.0], [45.2, 106.0], [45.3, 106.0], [45.4, 106.0], [45.5, 106.0], [45.6, 106.0], [45.7, 106.0], [45.8, 106.0], [45.9, 106.0], [46.0, 108.0], [46.1, 108.0], [46.2, 108.0], [46.3, 108.0], [46.4, 108.0], [46.5, 108.0], [46.6, 108.0], [46.7, 108.0], [46.8, 108.0], [46.9, 108.0], [47.0, 109.0], [47.1, 109.0], [47.2, 109.0], [47.3, 109.0], [47.4, 109.0], [47.5, 109.0], [47.6, 109.0], [47.7, 109.0], [47.8, 109.0], [47.9, 109.0], [48.0, 115.0], [48.1, 115.0], [48.2, 115.0], [48.3, 115.0], [48.4, 115.0], [48.5, 115.0], [48.6, 115.0], [48.7, 115.0], [48.8, 115.0], [48.9, 115.0], [49.0, 115.0], [49.1, 115.0], [49.2, 115.0], [49.3, 115.0], [49.4, 115.0], [49.5, 115.0], [49.6, 115.0], [49.7, 115.0], [49.8, 115.0], [49.9, 115.0], [50.0, 116.0], [50.1, 116.0], [50.2, 116.0], [50.3, 116.0], [50.4, 116.0], [50.5, 116.0], [50.6, 116.0], [50.7, 116.0], [50.8, 116.0], [50.9, 116.0], [51.0, 116.0], [51.1, 116.0], [51.2, 116.0], [51.3, 116.0], [51.4, 116.0], [51.5, 116.0], [51.6, 116.0], [51.7, 116.0], [51.8, 116.0], [51.9, 116.0], [52.0, 117.0], [52.1, 117.0], [52.2, 117.0], [52.3, 117.0], [52.4, 117.0], [52.5, 117.0], [52.6, 117.0], [52.7, 117.0], [52.8, 117.0], [52.9, 117.0], [53.0, 118.0], [53.1, 118.0], [53.2, 118.0], [53.3, 118.0], [53.4, 118.0], [53.5, 118.0], [53.6, 118.0], [53.7, 118.0], [53.8, 118.0], [53.9, 118.0], [54.0, 118.0], [54.1, 118.0], [54.2, 118.0], [54.3, 118.0], [54.4, 118.0], [54.5, 118.0], [54.6, 118.0], [54.7, 118.0], [54.8, 118.0], [54.9, 118.0], [55.0, 119.0], [55.1, 119.0], [55.2, 119.0], [55.3, 119.0], [55.4, 119.0], [55.5, 119.0], [55.6, 119.0], [55.7, 119.0], [55.8, 119.0], [55.9, 119.0], [56.0, 119.0], [56.1, 119.0], [56.2, 119.0], [56.3, 119.0], [56.4, 119.0], [56.5, 119.0], [56.6, 119.0], [56.7, 119.0], [56.8, 119.0], [56.9, 119.0], [57.0, 119.0], [57.1, 119.0], [57.2, 119.0], [57.3, 119.0], [57.4, 119.0], [57.5, 119.0], [57.6, 119.0], [57.7, 119.0], [57.8, 119.0], [57.9, 119.0], [58.0, 119.0], [58.1, 119.0], [58.2, 119.0], [58.3, 119.0], [58.4, 119.0], [58.5, 119.0], [58.6, 119.0], [58.7, 119.0], [58.8, 119.0], [58.9, 119.0], [59.0, 119.0], [59.1, 119.0], [59.2, 119.0], [59.3, 119.0], [59.4, 119.0], [59.5, 119.0], [59.6, 119.0], [59.7, 119.0], [59.8, 119.0], [59.9, 119.0], [60.0, 120.0], [60.1, 120.0], [60.2, 120.0], [60.3, 120.0], [60.4, 120.0], [60.5, 120.0], [60.6, 120.0], [60.7, 120.0], [60.8, 120.0], [60.9, 120.0], [61.0, 120.0], [61.1, 120.0], [61.2, 120.0], [61.3, 120.0], [61.4, 120.0], [61.5, 120.0], [61.6, 120.0], [61.7, 120.0], [61.8, 120.0], [61.9, 120.0], [62.0, 120.0], [62.1, 120.0], [62.2, 120.0], [62.3, 120.0], [62.4, 120.0], [62.5, 120.0], [62.6, 120.0], [62.7, 120.0], [62.8, 120.0], [62.9, 120.0], [63.0, 120.0], [63.1, 120.0], [63.2, 120.0], [63.3, 120.0], [63.4, 120.0], [63.5, 120.0], [63.6, 120.0], [63.7, 120.0], [63.8, 120.0], [63.9, 120.0], [64.0, 121.0], [64.1, 121.0], [64.2, 121.0], [64.3, 121.0], [64.4, 121.0], [64.5, 121.0], [64.6, 121.0], [64.7, 121.0], [64.8, 121.0], [64.9, 121.0], [65.0, 121.0], [65.1, 121.0], [65.2, 121.0], [65.3, 121.0], [65.4, 121.0], [65.5, 121.0], [65.6, 121.0], [65.7, 121.0], [65.8, 121.0], [65.9, 121.0], [66.0, 121.0], [66.1, 121.0], [66.2, 121.0], [66.3, 121.0], [66.4, 121.0], [66.5, 121.0], [66.6, 121.0], [66.7, 121.0], [66.8, 121.0], [66.9, 121.0], [67.0, 121.0], [67.1, 121.0], [67.2, 121.0], [67.3, 121.0], [67.4, 121.0], [67.5, 121.0], [67.6, 121.0], [67.7, 121.0], [67.8, 121.0], [67.9, 121.0], [68.0, 122.0], [68.1, 122.0], [68.2, 122.0], [68.3, 122.0], [68.4, 122.0], [68.5, 122.0], [68.6, 122.0], [68.7, 122.0], [68.8, 122.0], [68.9, 122.0], [69.0, 122.0], [69.1, 122.0], [69.2, 122.0], [69.3, 122.0], [69.4, 122.0], [69.5, 122.0], [69.6, 122.0], [69.7, 122.0], [69.8, 122.0], [69.9, 122.0], [70.0, 122.0], [70.1, 122.0], [70.2, 122.0], [70.3, 122.0], [70.4, 122.0], [70.5, 122.0], [70.6, 122.0], [70.7, 122.0], [70.8, 122.0], [70.9, 122.0], [71.0, 122.0], [71.1, 122.0], [71.2, 122.0], [71.3, 122.0], [71.4, 122.0], [71.5, 122.0], [71.6, 122.0], [71.7, 122.0], [71.8, 122.0], [71.9, 122.0], [72.0, 123.0], [72.1, 123.0], [72.2, 123.0], [72.3, 123.0], [72.4, 123.0], [72.5, 123.0], [72.6, 123.0], [72.7, 123.0], [72.8, 123.0], [72.9, 123.0], [73.0, 123.0], [73.1, 123.0], [73.2, 123.0], [73.3, 123.0], [73.4, 123.0], [73.5, 123.0], [73.6, 123.0], [73.7, 123.0], [73.8, 123.0], [73.9, 123.0], [74.0, 123.0], [74.1, 123.0], [74.2, 123.0], [74.3, 123.0], [74.4, 123.0], [74.5, 123.0], [74.6, 123.0], [74.7, 123.0], [74.8, 123.0], [74.9, 123.0], [75.0, 123.0], [75.1, 123.0], [75.2, 123.0], [75.3, 123.0], [75.4, 123.0], [75.5, 123.0], [75.6, 123.0], [75.7, 123.0], [75.8, 123.0], [75.9, 123.0], [76.0, 123.0], [76.1, 123.0], [76.2, 123.0], [76.3, 123.0], [76.4, 123.0], [76.5, 123.0], [76.6, 123.0], [76.7, 123.0], [76.8, 123.0], [76.9, 123.0], [77.0, 123.0], [77.1, 123.0], [77.2, 123.0], [77.3, 123.0], [77.4, 123.0], [77.5, 123.0], [77.6, 123.0], [77.7, 123.0], [77.8, 123.0], [77.9, 123.0], [78.0, 124.0], [78.1, 124.0], [78.2, 124.0], [78.3, 124.0], [78.4, 124.0], [78.5, 124.0], [78.6, 124.0], [78.7, 124.0], [78.8, 124.0], [78.9, 124.0], [79.0, 124.0], [79.1, 124.0], [79.2, 124.0], [79.3, 124.0], [79.4, 124.0], [79.5, 124.0], [79.6, 124.0], [79.7, 124.0], [79.8, 124.0], [79.9, 124.0], [80.0, 124.0], [80.1, 124.0], [80.2, 124.0], [80.3, 124.0], [80.4, 124.0], [80.5, 124.0], [80.6, 124.0], [80.7, 124.0], [80.8, 124.0], [80.9, 124.0], [81.0, 125.0], [81.1, 125.0], [81.2, 125.0], [81.3, 125.0], [81.4, 125.0], [81.5, 125.0], [81.6, 125.0], [81.7, 125.0], [81.8, 125.0], [81.9, 125.0], [82.0, 126.0], [82.1, 126.0], [82.2, 126.0], [82.3, 126.0], [82.4, 126.0], [82.5, 126.0], [82.6, 126.0], [82.7, 126.0], [82.8, 126.0], [82.9, 126.0], [83.0, 126.0], [83.1, 126.0], [83.2, 126.0], [83.3, 126.0], [83.4, 126.0], [83.5, 126.0], [83.6, 126.0], [83.7, 126.0], [83.8, 126.0], [83.9, 126.0], [84.0, 126.0], [84.1, 126.0], [84.2, 126.0], [84.3, 126.0], [84.4, 126.0], [84.5, 126.0], [84.6, 126.0], [84.7, 126.0], [84.8, 126.0], [84.9, 126.0], [85.0, 127.0], [85.1, 127.0], [85.2, 127.0], [85.3, 127.0], [85.4, 127.0], [85.5, 127.0], [85.6, 127.0], [85.7, 127.0], [85.8, 127.0], [85.9, 127.0], [86.0, 127.0], [86.1, 127.0], [86.2, 127.0], [86.3, 127.0], [86.4, 127.0], [86.5, 127.0], [86.6, 127.0], [86.7, 127.0], [86.8, 127.0], [86.9, 127.0], [87.0, 129.0], [87.1, 129.0], [87.2, 129.0], [87.3, 129.0], [87.4, 129.0], [87.5, 129.0], [87.6, 129.0], [87.7, 129.0], [87.8, 129.0], [87.9, 129.0], [88.0, 129.0], [88.1, 129.0], [88.2, 129.0], [88.3, 129.0], [88.4, 129.0], [88.5, 129.0], [88.6, 129.0], [88.7, 129.0], [88.8, 129.0], [88.9, 129.0], [89.0, 137.0], [89.1, 137.0], [89.2, 137.0], [89.3, 137.0], [89.4, 137.0], [89.5, 137.0], [89.6, 137.0], [89.7, 137.0], [89.8, 137.0], [89.9, 137.0], [90.0, 138.0], [90.1, 138.0], [90.2, 138.0], [90.3, 138.0], [90.4, 138.0], [90.5, 138.0], [90.6, 138.0], [90.7, 138.0], [90.8, 138.0], [90.9, 138.0], [91.0, 138.0], [91.1, 138.0], [91.2, 138.0], [91.3, 138.0], [91.4, 138.0], [91.5, 138.0], [91.6, 138.0], [91.7, 138.0], [91.8, 138.0], [91.9, 138.0], [92.0, 139.0], [92.1, 139.0], [92.2, 139.0], [92.3, 139.0], [92.4, 139.0], [92.5, 139.0], [92.6, 139.0], [92.7, 139.0], [92.8, 139.0], [92.9, 139.0], [93.0, 139.0], [93.1, 139.0], [93.2, 139.0], [93.3, 139.0], [93.4, 139.0], [93.5, 139.0], [93.6, 139.0], [93.7, 139.0], [93.8, 139.0], [93.9, 139.0], [94.0, 140.0], [94.1, 140.0], [94.2, 140.0], [94.3, 140.0], [94.4, 140.0], [94.5, 140.0], [94.6, 140.0], [94.7, 140.0], [94.8, 140.0], [94.9, 140.0], [95.0, 145.0], [95.1, 145.0], [95.2, 145.0], [95.3, 145.0], [95.4, 145.0], [95.5, 145.0], [95.6, 145.0], [95.7, 145.0], [95.8, 145.0], [95.9, 145.0], [96.0, 145.0], [96.1, 145.0], [96.2, 145.0], [96.3, 145.0], [96.4, 145.0], [96.5, 145.0], [96.6, 145.0], [96.7, 145.0], [96.8, 145.0], [96.9, 145.0], [97.0, 146.0], [97.1, 146.0], [97.2, 146.0], [97.3, 146.0], [97.4, 146.0], [97.5, 146.0], [97.6, 146.0], [97.7, 146.0], [97.8, 146.0], [97.9, 146.0], [98.0, 148.0], [98.1, 148.0], [98.2, 148.0], [98.3, 148.0], [98.4, 148.0], [98.5, 148.0], [98.6, 148.0], [98.7, 148.0], [98.8, 148.0], [98.9, 148.0], [99.0, 7314.0], [99.1, 7314.0], [99.2, 7314.0], [99.3, 7314.0], [99.4, 7314.0], [99.5, 7314.0], [99.6, 7314.0], [99.7, 7314.0], [99.8, 7314.0], [99.9, 7314.0]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 61.0, "series": [{"data": [[0.0, 2.0], [600.0, 5.0], [700.0, 2.0], [2900.0, 24.0], [3100.0, 9.0], [100.0, 20.0], [3400.0, 10.0], [3600.0, 22.0], [500.0, 6.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[34800.0, 9.0], [33900.0, 23.0], [34000.0, 1.0], [34900.0, 7.0], [35200.0, 1.0], [9700.0, 1.0], [38800.0, 5.0], [38600.0, 4.0], [38700.0, 1.0], [37700.0, 1.0], [38100.0, 2.0], [12800.0, 5.0], [13300.0, 1.0], [14400.0, 5.0], [24600.0, 1.0], [7400.0, 1.0], [31500.0, 10.0], [32200.0, 1.0], [32300.0, 21.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[600.0, 2.0], [2400.0, 9.0], [2500.0, 11.0], [2600.0, 4.0], [3300.0, 10.0], [3200.0, 8.0], [3400.0, 4.0], [4200.0, 5.0], [4100.0, 5.0], [300.0, 4.0], [1200.0, 1.0], [1500.0, 6.0], [100.0, 27.0], [400.0, 1.0], [1600.0, 3.0]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[18000.0, 1.0], [4500.0, 1.0], [4800.0, 7.0], [300.0, 11.0], [25000.0, 5.0], [26200.0, 1.0], [200.0, 47.0], [100.0, 20.0], [26700.0, 5.0], [29600.0, 1.0], [15000.0, 1.0]], "isOverall": false, "label": "POST /graphql - Page Search", "isController": false}, {"data": [[0.0, 38.0], [100.0, 61.0], [7300.0, 1.0]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 38800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 16.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 253.0, "series": [{"data": [[0.0, 231.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 16.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [[2.0, 253.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 44.73770491803278, "minX": 1.608755406E12, "maxY": 100.0, "series": [{"data": [[1.608755411E12, 100.0], [1.608755413E12, 100.0], [1.60875543E12, 100.0], [1.608755409E12, 100.0], [1.60875541E12, 100.0], [1.608755431E12, 100.0], [1.608755406E12, 44.73770491803278], [1.608755407E12, 100.0], [1.608755408E12, 100.0], [1.608755446E12, 62.60693641618498], [1.608755445E12, 94.75728155339807], [1.608755419E12, 100.0], [1.60875542E12, 100.0], [1.608755441E12, 99.0], [1.608755439E12, 100.0], [1.608755414E12, 100.0], [1.608755415E12, 100.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608755446E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 55.16666666666667, "minX": 4.0, "maxY": 36829.44, "series": [{"data": [[38.0, 100.5], [39.0, 115.7], [40.0, 122.0], [41.0, 104.375], [100.0, 2866.8974358974365]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[86.74, 2260.5500000000006]], "isOverall": false, "label": "GET /login-Aggregated", "isController": false}, {"data": [[87.0, 32340.071428571424], [86.0, 31704.083333333332], [91.0, 32308.0], [99.0, 36829.44], [98.0, 34052.933333333334], [100.0, 13698.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[95.2, 31288.46]], "isOverall": false, "label": "POST /graphql - Login-Aggregated", "isController": false}, {"data": [[33.0, 118.5], [78.0, 467.0], [41.0, 180.0], [42.0, 167.5], [100.0, 2833.5294117647054], [27.0, 167.71428571428572], [29.0, 136.5], [30.0, 130.5], [61.0, 315.75], [31.0, 118.5]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[79.55, 1986.1599999999999]], "isOverall": false, "label": "GET /-Aggregated", "isController": false}, {"data": [[46.0, 181.66666666666666], [58.0, 180.0], [66.0, 188.66666666666669], [64.0, 181.5], [72.0, 208.5], [79.0, 253.0], [78.0, 219.45000000000002], [77.0, 193.5], [87.0, 4828.0], [86.0, 892.375], [85.0, 271.3529411764706], [99.0, 26249.75], [98.0, 15016.0], [100.0, 18090.0]], "isOverall": false, "label": "POST /graphql - Page Search", "isController": false}, {"data": [[81.33000000000001, 4057.5800000000004]], "isOverall": false, "label": "POST /graphql - Page Search-Aggregated", "isController": false}, {"data": [[41.0, 114.85714285714285], [46.0, 124.6], [49.0, 124.33333333333333], [56.0, 123.0], [58.0, 122.375], [67.0, 122.0], [66.0, 122.0], [65.0, 116.0], [64.0, 120.16666666666667], [4.0, 57.0], [74.0, 105.5], [72.0, 115.0], [78.0, 103.0], [77.0, 96.66666666666667], [87.0, 115.0], [86.0, 85.0], [85.0, 88.14285714285714], [91.0, 146.0], [93.0, 133.0], [99.0, 123.0], [98.0, 138.2], [100.0, 7314.0], [7.0, 57.0], [13.0, 55.16666666666667], [17.0, 59.0], [27.0, 90.0]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page", "isController": false}, {"data": [[53.300000000000004, 176.27000000000007]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 645.0, "minX": 1.608755406E12, "maxY": 315897.0, "series": [{"data": [[1.608755411E12, 49440.0], [1.608755413E12, 46765.0], [1.60875543E12, 1445.0], [1.608755409E12, 63668.0], [1.60875541E12, 47480.0], [1.608755431E12, 645.0], [1.608755406E12, 154016.0], [1.608755407E12, 45420.0], [1.608755408E12, 69456.0], [1.608755446E12, 315897.0], [1.608755445E12, 151431.0], [1.608755419E12, 8670.0], [1.60875542E12, 7225.0], [1.608755441E12, 11560.0], [1.608755439E12, 2937.0], [1.608755414E12, 20600.0], [1.608755415E12, 1445.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.608755411E12, 3096.0], [1.608755413E12, 3552.0], [1.60875543E12, 714.0], [1.608755409E12, 2728.0], [1.60875541E12, 2401.0], [1.608755431E12, 1286.0], [1.608755406E12, 7699.0], [1.608755407E12, 2272.0], [1.608755408E12, 2976.0], [1.608755446E12, 186542.0], [1.608755445E12, 88336.0], [1.608755419E12, 4284.0], [1.60875542E12, 3570.0], [1.608755441E12, 5712.0], [1.608755439E12, 928.0], [1.608755414E12, 1290.0], [1.608755415E12, 714.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608755446E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 99.23255813953492, "minX": 1.608755406E12, "maxY": 34967.0, "series": [{"data": [[1.608755411E12, 2975.0], [1.608755413E12, 3677.0], [1.60875541E12, 3165.4444444444443], [1.608755406E12, 197.48148148148147], [1.608755407E12, 635.875], [1.608755414E12, 3485.2999999999997]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.608755413E12, 7422.0], [1.608755445E12, 34394.05797101447], [1.608755419E12, 12909.5], [1.60875543E12, 24639.0], [1.60875542E12, 14494.2], [1.608755441E12, 34967.0], [1.608755446E12, 31572.0], [1.608755415E12, 9783.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.608755409E12, 3328.3636363636365], [1.60875541E12, 4199.4], [1.608755406E12, 213.76470588235296], [1.608755407E12, 1549.4000000000003], [1.608755408E12, 2526.4999999999995]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[1.608755445E12, 17541.85714285714], [1.608755431E12, 18090.0], [1.608755446E12, 247.29487179487182]], "isOverall": false, "label": "POST /graphql - Page Search", "isController": false}, {"data": [[1.608755445E12, 136.84615384615384], [1.608755439E12, 7314.0], [1.608755446E12, 99.23255813953492]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608755446E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 98.9767441860465, "minX": 1.608755406E12, "maxY": 34967.0, "series": [{"data": [[1.608755411E12, 2974.958333333333], [1.608755413E12, 3676.863636363636], [1.60875541E12, 3165.4444444444443], [1.608755406E12, 197.48148148148147], [1.608755407E12, 635.875], [1.608755414E12, 3485.2999999999997]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.608755413E12, 7422.0], [1.608755445E12, 34394.04347826087], [1.608755419E12, 12909.5], [1.60875543E12, 24639.0], [1.60875542E12, 14494.2], [1.608755441E12, 34967.0], [1.608755446E12, 31571.88888888889], [1.608755415E12, 9783.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.608755409E12, 3328.136363636364], [1.60875541E12, 4199.4], [1.608755406E12, 213.2647058823529], [1.608755407E12, 1549.1], [1.608755408E12, 2526.0416666666665]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[1.608755445E12, 17541.714285714286], [1.608755431E12, 18089.0], [1.608755446E12, 247.2692307692307]], "isOverall": false, "label": "POST /graphql - Page Search", "isController": false}, {"data": [[1.608755445E12, 136.53846153846155], [1.608755439E12, 7314.0], [1.608755446E12, 98.9767441860465]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608755446E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.608755406E12, "maxY": 101.95833333333333, "series": [{"data": [[1.608755411E12, 0.0], [1.608755413E12, 0.0], [1.60875541E12, 0.0], [1.608755406E12, 0.0], [1.608755407E12, 0.0], [1.608755414E12, 0.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.608755413E12, 0.0], [1.608755445E12, 0.0], [1.608755419E12, 0.0], [1.60875543E12, 0.0], [1.60875542E12, 0.0], [1.608755441E12, 0.0], [1.608755446E12, 0.0], [1.608755415E12, 0.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.608755409E12, 51.45454545454545], [1.60875541E12, 51.699999999999996], [1.608755406E12, 71.14705882352942], [1.608755407E12, 54.8], [1.608755408E12, 101.95833333333333]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[1.608755445E12, 0.0], [1.608755431E12, 0.0], [1.608755446E12, 0.0]], "isOverall": false, "label": "POST /graphql - Page Search", "isController": false}, {"data": [[1.608755445E12, 0.0], [1.608755439E12, 0.0], [1.608755446E12, 0.0]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608755446E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 54.0, "minX": 1.608755406E12, "maxY": 38854.0, "series": [{"data": [[1.608755411E12, 2985.0], [1.608755413E12, 7422.0], [1.60875543E12, 24639.0], [1.608755409E12, 3439.0], [1.60875541E12, 4243.0], [1.608755431E12, 18090.0], [1.608755406E12, 671.0], [1.608755407E12, 1628.0], [1.608755408E12, 2642.0], [1.608755446E12, 31578.0], [1.608755445E12, 38854.0], [1.608755419E12, 13323.0], [1.60875542E12, 14497.0], [1.608755441E12, 35215.0], [1.608755439E12, 7314.0], [1.608755414E12, 3489.0], [1.608755415E12, 9783.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.608755411E12, 2983.0], [1.608755413E12, 3687.2], [1.60875543E12, 24639.0], [1.608755409E12, 3413.6], [1.60875541E12, 4237.0], [1.608755431E12, 18090.0], [1.608755406E12, 578.0], [1.608755407E12, 1619.0], [1.608755408E12, 2615.0], [1.608755446E12, 353.19999999999965], [1.608755445E12, 38452.200000000004], [1.608755419E12, 13323.0], [1.60875542E12, 14497.0], [1.608755441E12, 35215.0], [1.608755439E12, 7314.0], [1.608755414E12, 3489.0], [1.608755415E12, 9783.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.608755411E12, 2985.0], [1.608755413E12, 7422.0], [1.60875543E12, 24639.0], [1.608755409E12, 3439.0], [1.60875541E12, 4243.0], [1.608755431E12, 18090.0], [1.608755406E12, 671.0], [1.608755407E12, 1628.0], [1.608755408E12, 2642.0], [1.608755446E12, 31577.26], [1.608755445E12, 38854.0], [1.608755419E12, 13323.0], [1.60875542E12, 14497.0], [1.608755441E12, 35215.0], [1.608755439E12, 7314.0], [1.608755414E12, 3489.0], [1.608755415E12, 9783.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.608755411E12, 2985.0], [1.608755413E12, 6675.19999999999], [1.60875543E12, 24639.0], [1.608755409E12, 3435.5499999999997], [1.60875541E12, 4243.0], [1.608755431E12, 18090.0], [1.608755406E12, 580.0], [1.608755407E12, 1628.0], [1.608755408E12, 2636.5], [1.608755446E12, 31566.0], [1.608755445E12, 38823.4], [1.608755419E12, 13323.0], [1.60875542E12, 14497.0], [1.608755441E12, 35215.0], [1.608755439E12, 7314.0], [1.608755414E12, 3489.0], [1.608755415E12, 9783.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.608755411E12, 2964.0], [1.608755413E12, 3671.0], [1.60875543E12, 24639.0], [1.608755409E12, 3228.0], [1.60875541E12, 3163.0], [1.608755431E12, 18090.0], [1.608755406E12, 81.0], [1.608755407E12, 548.0], [1.608755408E12, 2416.0], [1.608755446E12, 54.0], [1.608755445E12, 115.0], [1.608755419E12, 12825.0], [1.60875542E12, 14488.0], [1.608755441E12, 34927.0], [1.608755439E12, 7314.0], [1.608755414E12, 3482.0], [1.608755415E12, 9783.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.608755411E12, 2977.0], [1.608755413E12, 3676.0], [1.60875543E12, 24639.0], [1.608755409E12, 3326.5], [1.60875541E12, 4154.0], [1.608755431E12, 18090.0], [1.608755406E12, 141.0], [1.608755407E12, 1374.5], [1.608755408E12, 2529.0], [1.608755446E12, 168.0], [1.608755445E12, 32354.0], [1.608755419E12, 12827.5], [1.60875542E12, 14495.0], [1.608755441E12, 34933.5], [1.608755439E12, 7314.0], [1.608755414E12, 3484.0], [1.608755415E12, 9783.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608755446E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 141.0, "minX": 1.0, "maxY": 34933.5, "series": [{"data": [[8.0, 34933.5], [10.0, 3484.0], [173.0, 168.0], [61.0, 141.0], [1.0, 13936.5], [18.0, 1374.5], [19.0, 4154.0], [5.0, 14495.0], [22.0, 3326.5], [23.0, 3676.0], [24.0, 2803.0], [6.0, 12827.5], [103.0, 32354.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 173.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 141.0, "minX": 1.0, "maxY": 34933.5, "series": [{"data": [[8.0, 34933.5], [10.0, 3484.0], [173.0, 168.0], [61.0, 141.0], [1.0, 13936.0], [18.0, 1374.0], [19.0, 4154.0], [5.0, 14495.0], [22.0, 3326.5], [23.0, 3676.0], [24.0, 2803.0], [6.0, 12827.5], [103.0, 32354.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 173.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.608755405E12, "maxY": 142.0, "series": [{"data": [[1.608755411E12, 24.0], [1.608755413E12, 23.0], [1.60875543E12, 1.0], [1.608755409E12, 22.0], [1.60875541E12, 19.0], [1.608755431E12, 1.0], [1.608755406E12, 142.0], [1.608755407E12, 18.0], [1.608755408E12, 24.0], [1.608755446E12, 87.0], [1.608755405E12, 19.0], [1.608755445E12, 90.0], [1.608755419E12, 6.0], [1.60875542E12, 5.0], [1.608755441E12, 8.0], [1.608755414E12, 10.0], [1.608755415E12, 1.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608755446E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.608755406E12, "maxY": 173.0, "series": [{"data": [[1.608755411E12, 24.0], [1.608755413E12, 23.0], [1.60875543E12, 1.0], [1.608755409E12, 22.0], [1.60875541E12, 19.0], [1.608755431E12, 1.0], [1.608755406E12, 61.0], [1.608755407E12, 18.0], [1.608755408E12, 24.0], [1.608755446E12, 173.0], [1.608755445E12, 103.0], [1.608755419E12, 6.0], [1.60875542E12, 5.0], [1.608755441E12, 8.0], [1.608755439E12, 1.0], [1.608755414E12, 10.0], [1.608755415E12, 1.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.608755446E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.608755406E12, "maxY": 86.0, "series": [{"data": [[1.608755409E12, 22.0], [1.60875541E12, 10.0], [1.608755406E12, 34.0], [1.608755407E12, 10.0], [1.608755408E12, 24.0]], "isOverall": false, "label": "GET /-success", "isController": false}, {"data": [[1.608755413E12, 1.0], [1.608755445E12, 69.0], [1.608755419E12, 6.0], [1.60875543E12, 1.0], [1.60875542E12, 5.0], [1.608755441E12, 8.0], [1.608755446E12, 9.0], [1.608755415E12, 1.0]], "isOverall": false, "label": "POST /graphql - Login-success", "isController": false}, {"data": [[1.608755411E12, 24.0], [1.608755413E12, 22.0], [1.60875541E12, 9.0], [1.608755406E12, 27.0], [1.608755407E12, 8.0], [1.608755414E12, 10.0]], "isOverall": false, "label": "GET /login-success", "isController": false}, {"data": [[1.608755445E12, 21.0], [1.608755431E12, 1.0], [1.608755446E12, 78.0]], "isOverall": false, "label": "POST /graphql - Page Search-success", "isController": false}, {"data": [[1.608755445E12, 13.0], [1.608755439E12, 1.0], [1.608755446E12, 86.0]], "isOverall": false, "label": "GET /en/{searched-page} - View the Searched Page-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608755446E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.608755406E12, "maxY": 173.0, "series": [{"data": [[1.608755411E12, 24.0], [1.608755413E12, 23.0], [1.60875543E12, 1.0], [1.608755409E12, 22.0], [1.60875541E12, 19.0], [1.608755431E12, 1.0], [1.608755406E12, 61.0], [1.608755407E12, 18.0], [1.608755408E12, 24.0], [1.608755446E12, 173.0], [1.608755445E12, 103.0], [1.608755419E12, 6.0], [1.60875542E12, 5.0], [1.608755441E12, 8.0], [1.608755439E12, 1.0], [1.608755414E12, 10.0], [1.608755415E12, 1.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.608755446E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

