/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 60.0, "minX": 0.0, "maxY": 67620.0, "series": [{"data": [[0.0, 60.0], [0.1, 60.0], [0.2, 63.0], [0.3, 63.0], [0.4, 63.0], [0.5, 63.0], [0.6, 63.0], [0.7, 66.0], [0.8, 66.0], [0.9, 66.0], [1.0, 67.0], [1.1, 67.0], [1.2, 67.0], [1.3, 67.0], [1.4, 67.0], [1.5, 67.0], [1.6, 68.0], [1.7, 68.0], [1.8, 68.0], [1.9, 68.0], [2.0, 68.0], [2.1, 68.0], [2.2, 68.0], [2.3, 68.0], [2.4, 68.0], [2.5, 68.0], [2.6, 68.0], [2.7, 68.0], [2.8, 68.0], [2.9, 68.0], [3.0, 68.0], [3.1, 68.0], [3.2, 69.0], [3.3, 69.0], [3.4, 69.0], [3.5, 69.0], [3.6, 69.0], [3.7, 69.0], [3.8, 69.0], [3.9, 69.0], [4.0, 69.0], [4.1, 69.0], [4.2, 69.0], [4.3, 69.0], [4.4, 69.0], [4.5, 69.0], [4.6, 69.0], [4.7, 69.0], [4.8, 69.0], [4.9, 70.0], [5.0, 70.0], [5.1, 70.0], [5.2, 70.0], [5.3, 70.0], [5.4, 70.0], [5.5, 70.0], [5.6, 70.0], [5.7, 70.0], [5.8, 70.0], [5.9, 70.0], [6.0, 70.0], [6.1, 70.0], [6.2, 70.0], [6.3, 71.0], [6.4, 71.0], [6.5, 71.0], [6.6, 71.0], [6.7, 71.0], [6.8, 71.0], [6.9, 71.0], [7.0, 71.0], [7.1, 71.0], [7.2, 71.0], [7.3, 71.0], [7.4, 71.0], [7.5, 71.0], [7.6, 71.0], [7.7, 72.0], [7.8, 72.0], [7.9, 72.0], [8.0, 72.0], [8.1, 72.0], [8.2, 72.0], [8.3, 72.0], [8.4, 72.0], [8.5, 72.0], [8.6, 72.0], [8.7, 73.0], [8.8, 73.0], [8.9, 73.0], [9.0, 73.0], [9.1, 73.0], [9.2, 73.0], [9.3, 73.0], [9.4, 73.0], [9.5, 73.0], [9.6, 73.0], [9.7, 73.0], [9.8, 73.0], [9.9, 73.0], [10.0, 73.0], [10.1, 73.0], [10.2, 73.0], [10.3, 73.0], [10.4, 73.0], [10.5, 73.0], [10.6, 73.0], [10.7, 73.0], [10.8, 74.0], [10.9, 74.0], [11.0, 74.0], [11.1, 74.0], [11.2, 74.0], [11.3, 74.0], [11.4, 74.0], [11.5, 74.0], [11.6, 74.0], [11.7, 74.0], [11.8, 74.0], [11.9, 74.0], [12.0, 74.0], [12.1, 74.0], [12.2, 74.0], [12.3, 75.0], [12.4, 75.0], [12.5, 75.0], [12.6, 75.0], [12.7, 75.0], [12.8, 75.0], [12.9, 75.0], [13.0, 75.0], [13.1, 75.0], [13.2, 75.0], [13.3, 75.0], [13.4, 75.0], [13.5, 75.0], [13.6, 75.0], [13.7, 75.0], [13.8, 75.0], [13.9, 75.0], [14.0, 75.0], [14.1, 75.0], [14.2, 75.0], [14.3, 75.0], [14.4, 75.0], [14.5, 75.0], [14.6, 75.0], [14.7, 75.0], [14.8, 75.0], [14.9, 75.0], [15.0, 75.0], [15.1, 75.0], [15.2, 75.0], [15.3, 75.0], [15.4, 75.0], [15.5, 75.0], [15.6, 75.0], [15.7, 75.0], [15.8, 76.0], [15.9, 76.0], [16.0, 76.0], [16.1, 76.0], [16.2, 76.0], [16.3, 76.0], [16.4, 76.0], [16.5, 76.0], [16.6, 76.0], [16.7, 76.0], [16.8, 76.0], [16.9, 76.0], [17.0, 76.0], [17.1, 76.0], [17.2, 76.0], [17.3, 76.0], [17.4, 76.0], [17.5, 76.0], [17.6, 76.0], [17.7, 76.0], [17.8, 77.0], [17.9, 77.0], [18.0, 77.0], [18.1, 77.0], [18.2, 77.0], [18.3, 77.0], [18.4, 77.0], [18.5, 77.0], [18.6, 77.0], [18.7, 77.0], [18.8, 78.0], [18.9, 78.0], [19.0, 78.0], [19.1, 78.0], [19.2, 78.0], [19.3, 78.0], [19.4, 78.0], [19.5, 78.0], [19.6, 78.0], [19.7, 78.0], [19.8, 78.0], [19.9, 78.0], [20.0, 78.0], [20.1, 78.0], [20.2, 78.0], [20.3, 78.0], [20.4, 78.0], [20.5, 78.0], [20.6, 79.0], [20.7, 79.0], [20.8, 79.0], [20.9, 79.0], [21.0, 79.0], [21.1, 79.0], [21.2, 79.0], [21.3, 79.0], [21.4, 79.0], [21.5, 79.0], [21.6, 80.0], [21.7, 80.0], [21.8, 80.0], [21.9, 80.0], [22.0, 81.0], [22.1, 81.0], [22.2, 81.0], [22.3, 81.0], [22.4, 81.0], [22.5, 81.0], [22.6, 81.0], [22.7, 81.0], [22.8, 81.0], [22.9, 81.0], [23.0, 82.0], [23.1, 82.0], [23.2, 82.0], [23.3, 82.0], [23.4, 84.0], [23.5, 84.0], [23.6, 85.0], [23.7, 85.0], [23.8, 85.0], [23.9, 85.0], [24.0, 86.0], [24.1, 86.0], [24.2, 86.0], [24.3, 86.0], [24.4, 88.0], [24.5, 88.0], [24.6, 89.0], [24.7, 89.0], [24.8, 89.0], [24.9, 89.0], [25.0, 93.0], [25.1, 93.0], [25.2, 96.0], [25.3, 96.0], [25.4, 96.0], [25.5, 96.0], [25.6, 97.0], [25.7, 97.0], [25.8, 97.0], [25.9, 97.0], [26.0, 97.0], [26.1, 97.0], [26.2, 97.0], [26.3, 97.0], [26.4, 98.0], [26.5, 98.0], [26.6, 98.0], [26.7, 98.0], [26.8, 98.0], [26.9, 98.0], [27.0, 98.0], [27.1, 98.0], [27.2, 99.0], [27.3, 99.0], [27.4, 99.0], [27.5, 99.0], [27.6, 99.0], [27.7, 99.0], [27.8, 99.0], [27.9, 99.0], [28.0, 100.0], [28.1, 100.0], [28.2, 100.0], [28.3, 100.0], [28.4, 100.0], [28.5, 100.0], [28.6, 100.0], [28.7, 100.0], [28.8, 101.0], [28.9, 101.0], [29.0, 102.0], [29.1, 102.0], [29.2, 102.0], [29.3, 102.0], [29.4, 104.0], [29.5, 104.0], [29.6, 104.0], [29.7, 104.0], [29.8, 105.0], [29.9, 105.0], [30.0, 124.0], [30.1, 124.0], [30.2, 296.0], [30.3, 296.0], [30.4, 300.0], [30.5, 300.0], [30.6, 304.0], [30.7, 304.0], [30.8, 327.0], [30.9, 327.0], [31.0, 370.0], [31.1, 370.0], [31.2, 389.0], [31.3, 389.0], [31.4, 404.0], [31.5, 404.0], [31.6, 418.0], [31.7, 418.0], [31.8, 430.0], [31.9, 430.0], [32.0, 470.0], [32.1, 470.0], [32.2, 473.0], [32.3, 473.0], [32.4, 487.0], [32.5, 487.0], [32.6, 621.0], [32.7, 621.0], [32.8, 622.0], [32.9, 622.0], [33.0, 622.0], [33.1, 622.0], [33.2, 680.0], [33.3, 680.0], [33.4, 693.0], [33.5, 693.0], [33.6, 700.0], [33.7, 700.0], [33.8, 714.0], [33.9, 714.0], [34.0, 714.0], [34.1, 714.0], [34.2, 714.0], [34.3, 714.0], [34.4, 716.0], [34.5, 716.0], [34.6, 716.0], [34.7, 716.0], [34.8, 817.0], [34.9, 817.0], [35.0, 836.0], [35.1, 836.0], [35.2, 843.0], [35.3, 843.0], [35.4, 843.0], [35.5, 848.0], [35.6, 848.0], [35.7, 858.0], [35.8, 858.0], [35.9, 888.0], [36.0, 888.0], [36.1, 889.0], [36.2, 889.0], [36.3, 896.0], [36.4, 896.0], [36.5, 901.0], [36.6, 901.0], [36.7, 903.0], [36.8, 903.0], [36.9, 904.0], [37.0, 904.0], [37.1, 907.0], [37.2, 907.0], [37.3, 908.0], [37.4, 908.0], [37.5, 915.0], [37.6, 915.0], [37.7, 915.0], [37.8, 915.0], [37.9, 916.0], [38.0, 916.0], [38.1, 919.0], [38.2, 919.0], [38.3, 919.0], [38.4, 919.0], [38.5, 928.0], [38.6, 928.0], [38.7, 929.0], [38.8, 929.0], [38.9, 1033.0], [39.0, 1033.0], [39.1, 1073.0], [39.2, 1073.0], [39.3, 1093.0], [39.4, 1093.0], [39.5, 1102.0], [39.6, 1102.0], [39.7, 1122.0], [39.8, 1122.0], [39.9, 1126.0], [40.0, 1126.0], [40.1, 1418.0], [40.2, 1418.0], [40.3, 1584.0], [40.4, 1584.0], [40.5, 1584.0], [40.6, 1584.0], [40.7, 1634.0], [40.8, 1634.0], [40.9, 1693.0], [41.0, 1693.0], [41.1, 2231.0], [41.2, 2231.0], [41.3, 2607.0], [41.4, 2607.0], [41.5, 2609.0], [41.6, 2609.0], [41.7, 2616.0], [41.8, 2616.0], [41.9, 2629.0], [42.0, 2629.0], [42.1, 2635.0], [42.2, 2635.0], [42.3, 2636.0], [42.4, 2636.0], [42.5, 2636.0], [42.6, 2636.0], [42.7, 2640.0], [42.8, 2640.0], [42.9, 2641.0], [43.0, 2641.0], [43.1, 2711.0], [43.2, 2711.0], [43.3, 2731.0], [43.4, 2731.0], [43.5, 2731.0], [43.6, 2731.0], [43.7, 2732.0], [43.8, 2732.0], [43.9, 2732.0], [44.0, 2732.0], [44.1, 2732.0], [44.2, 2732.0], [44.3, 2735.0], [44.4, 2735.0], [44.5, 2857.0], [44.6, 2857.0], [44.7, 2881.0], [44.8, 2881.0], [44.9, 2903.0], [45.0, 2903.0], [45.1, 2977.0], [45.2, 2977.0], [45.3, 2988.0], [45.4, 2988.0], [45.5, 2991.0], [45.6, 2991.0], [45.7, 2997.0], [45.8, 2997.0], [45.9, 3001.0], [46.0, 3001.0], [46.1, 3141.0], [46.2, 3141.0], [46.3, 3141.0], [46.4, 3141.0], [46.5, 3142.0], [46.6, 3142.0], [46.7, 3142.0], [46.8, 3142.0], [46.9, 3143.0], [47.0, 3143.0], [47.1, 3177.0], [47.2, 3177.0], [47.3, 3178.0], [47.4, 3178.0], [47.5, 3187.0], [47.6, 3187.0], [47.7, 3198.0], [47.8, 3198.0], [47.9, 3198.0], [48.0, 3198.0], [48.1, 3210.0], [48.2, 3210.0], [48.3, 3244.0], [48.4, 3244.0], [48.5, 3247.0], [48.6, 3247.0], [48.7, 3291.0], [48.8, 3291.0], [48.9, 3326.0], [49.0, 3326.0], [49.1, 3328.0], [49.2, 3328.0], [49.3, 3328.0], [49.4, 3328.0], [49.5, 3341.0], [49.6, 3341.0], [49.7, 3344.0], [49.8, 3344.0], [49.9, 3345.0], [50.0, 3345.0], [50.1, 3419.0], [50.2, 3419.0], [50.3, 3431.0], [50.4, 3431.0], [50.5, 3431.0], [50.6, 3431.0], [50.7, 3432.0], [50.8, 3432.0], [50.9, 3478.0], [51.0, 3478.0], [51.1, 3553.0], [51.2, 3553.0], [51.3, 3557.0], [51.4, 3557.0], [51.5, 3591.0], [51.6, 3591.0], [51.7, 3592.0], [51.8, 3592.0], [51.9, 3663.0], [52.0, 3663.0], [52.1, 3702.0], [52.2, 3702.0], [52.3, 3704.0], [52.4, 3704.0], [52.5, 3768.0], [52.6, 3768.0], [52.7, 3768.0], [52.8, 3768.0], [52.9, 3772.0], [53.0, 3772.0], [53.1, 3790.0], [53.2, 3790.0], [53.3, 3901.0], [53.4, 3901.0], [53.5, 3902.0], [53.6, 3902.0], [53.7, 3903.0], [53.8, 3903.0], [53.9, 3904.0], [54.0, 3904.0], [54.1, 3907.0], [54.2, 3907.0], [54.3, 4016.0], [54.4, 4016.0], [54.5, 4016.0], [54.6, 4016.0], [54.7, 4115.0], [54.8, 4115.0], [54.9, 4383.0], [55.0, 4383.0], [55.1, 4455.0], [55.2, 4455.0], [55.3, 4462.0], [55.4, 4462.0], [55.5, 4464.0], [55.6, 4464.0], [55.7, 4486.0], [55.8, 4486.0], [55.9, 4493.0], [56.0, 4493.0], [56.1, 4544.0], [56.2, 4544.0], [56.3, 4544.0], [56.4, 4544.0], [56.5, 4544.0], [56.6, 4544.0], [56.7, 4605.0], [56.8, 4605.0], [56.9, 4626.0], [57.0, 4626.0], [57.1, 4697.0], [57.2, 4697.0], [57.3, 4712.0], [57.4, 4712.0], [57.5, 5007.0], [57.6, 5007.0], [57.7, 5007.0], [57.8, 5007.0], [57.9, 5008.0], [58.0, 5008.0], [58.1, 5008.0], [58.2, 5008.0], [58.3, 5136.0], [58.4, 5136.0], [58.5, 5136.0], [58.6, 5136.0], [58.7, 5170.0], [58.8, 5170.0], [58.9, 5303.0], [59.0, 5303.0], [59.1, 5316.0], [59.2, 5316.0], [59.3, 5325.0], [59.4, 5325.0], [59.5, 5339.0], [59.6, 5339.0], [59.7, 5339.0], [59.8, 5339.0], [59.9, 5345.0], [60.0, 5345.0], [60.1, 5365.0], [60.2, 5365.0], [60.3, 5369.0], [60.4, 5369.0], [60.5, 5430.0], [60.6, 5430.0], [60.7, 5509.0], [60.8, 5509.0], [60.9, 5509.0], [61.0, 5509.0], [61.1, 5515.0], [61.2, 5515.0], [61.3, 5515.0], [61.4, 5515.0], [61.5, 5517.0], [61.6, 5517.0], [61.7, 5524.0], [61.8, 5524.0], [61.9, 5540.0], [62.0, 5540.0], [62.1, 5542.0], [62.2, 5542.0], [62.3, 5543.0], [62.4, 5543.0], [62.5, 5550.0], [62.6, 5550.0], [62.7, 5644.0], [62.8, 5644.0], [62.9, 5645.0], [63.0, 5645.0], [63.1, 5645.0], [63.2, 5645.0], [63.3, 5646.0], [63.4, 5646.0], [63.5, 5647.0], [63.6, 5647.0], [63.7, 5681.0], [63.8, 5681.0], [63.9, 5683.0], [64.0, 5683.0], [64.1, 5684.0], [64.2, 5684.0], [64.3, 5688.0], [64.4, 5688.0], [64.5, 5689.0], [64.6, 5689.0], [64.7, 5689.0], [64.8, 5689.0], [64.9, 5689.0], [65.0, 5689.0], [65.1, 5689.0], [65.2, 5689.0], [65.3, 5692.0], [65.4, 5692.0], [65.5, 5692.0], [65.6, 5692.0], [65.7, 5692.0], [65.8, 5692.0], [65.9, 5696.0], [66.0, 5696.0], [66.1, 5696.0], [66.2, 5696.0], [66.3, 5700.0], [66.4, 5700.0], [66.5, 5700.0], [66.6, 5700.0], [66.7, 5700.0], [66.8, 5700.0], [66.9, 5701.0], [67.0, 5701.0], [67.1, 5701.0], [67.2, 5701.0], [67.3, 5703.0], [67.4, 5703.0], [67.5, 5708.0], [67.6, 5708.0], [67.7, 5710.0], [67.8, 5710.0], [67.9, 5713.0], [68.0, 5713.0], [68.1, 5713.0], [68.2, 5713.0], [68.3, 5724.0], [68.4, 5724.0], [68.5, 5816.0], [68.6, 5816.0], [68.7, 5828.0], [68.8, 5828.0], [68.9, 5852.0], [69.0, 5852.0], [69.1, 5853.0], [69.2, 5853.0], [69.3, 5857.0], [69.4, 5857.0], [69.5, 5863.0], [69.6, 5863.0], [69.7, 5864.0], [69.8, 5864.0], [69.9, 5865.0], [70.0, 5865.0], [70.1, 5870.0], [70.2, 5870.0], [70.3, 5873.0], [70.4, 5873.0], [70.5, 5875.0], [70.6, 5875.0], [70.7, 5876.0], [70.8, 5876.0], [70.9, 5876.0], [71.0, 5876.0], [71.1, 5883.0], [71.2, 5883.0], [71.3, 5884.0], [71.4, 5884.0], [71.5, 5885.0], [71.6, 5885.0], [71.7, 5890.0], [71.8, 5890.0], [71.9, 5891.0], [72.0, 5891.0], [72.1, 5894.0], [72.2, 5894.0], [72.3, 5896.0], [72.4, 5896.0], [72.5, 5896.0], [72.6, 5896.0], [72.7, 5897.0], [72.8, 5897.0], [72.9, 5897.0], [73.0, 5897.0], [73.1, 5898.0], [73.2, 5898.0], [73.3, 5985.0], [73.4, 5985.0], [73.5, 5986.0], [73.6, 5986.0], [73.7, 5987.0], [73.8, 5987.0], [73.9, 6040.0], [74.0, 6040.0], [74.1, 6042.0], [74.2, 6042.0], [74.3, 6042.0], [74.4, 6042.0], [74.5, 6054.0], [74.6, 6054.0], [74.7, 6057.0], [74.8, 6057.0], [74.9, 6133.0], [75.0, 6133.0], [75.1, 6236.0], [75.2, 6236.0], [75.3, 6246.0], [75.4, 6246.0], [75.5, 6255.0], [75.6, 6255.0], [75.7, 6258.0], [75.8, 6258.0], [75.9, 6264.0], [76.0, 6264.0], [76.1, 6265.0], [76.2, 6265.0], [76.3, 6390.0], [76.4, 6390.0], [76.5, 6391.0], [76.6, 6391.0], [76.7, 6391.0], [76.8, 6391.0], [76.9, 6400.0], [77.0, 6400.0], [77.1, 6424.0], [77.2, 6424.0], [77.3, 6424.0], [77.4, 6424.0], [77.5, 6424.0], [77.6, 6424.0], [77.7, 6435.0], [77.8, 6435.0], [77.9, 6469.0], [78.0, 6469.0], [78.1, 6623.0], [78.2, 6623.0], [78.3, 6903.0], [78.4, 6903.0], [78.5, 7101.0], [78.6, 7101.0], [78.7, 7273.0], [78.8, 7273.0], [78.9, 7288.0], [79.0, 7288.0], [79.1, 7288.0], [79.2, 7288.0], [79.3, 7294.0], [79.4, 7294.0], [79.5, 7294.0], [79.6, 7294.0], [79.7, 7366.0], [79.8, 7366.0], [79.9, 7366.0], [80.0, 7366.0], [80.1, 7367.0], [80.2, 7367.0], [80.3, 7372.0], [80.4, 7372.0], [80.5, 7372.0], [80.6, 7372.0], [80.7, 7372.0], [80.8, 7372.0], [80.9, 7375.0], [81.0, 7375.0], [81.1, 7375.0], [81.2, 7375.0], [81.3, 7375.0], [81.4, 7375.0], [81.5, 7379.0], [81.6, 7379.0], [81.7, 7381.0], [81.8, 7381.0], [81.9, 7381.0], [82.0, 7381.0], [82.1, 7388.0], [82.2, 7388.0], [82.3, 7460.0], [82.4, 7460.0], [82.5, 7461.0], [82.6, 7461.0], [82.7, 7645.0], [82.8, 7645.0], [82.9, 7645.0], [83.0, 7645.0], [83.1, 7645.0], [83.2, 7645.0], [83.3, 7646.0], [83.4, 7646.0], [83.5, 7646.0], [83.6, 7646.0], [83.7, 7872.0], [83.8, 7872.0], [83.9, 7973.0], [84.0, 7973.0], [84.1, 7974.0], [84.2, 7974.0], [84.3, 7979.0], [84.4, 7979.0], [84.5, 7980.0], [84.6, 7980.0], [84.7, 7984.0], [84.8, 7984.0], [84.9, 7984.0], [85.0, 7984.0], [85.1, 7984.0], [85.2, 7984.0], [85.3, 7984.0], [85.4, 7984.0], [85.5, 8617.0], [85.6, 8617.0], [85.7, 8625.0], [85.8, 8625.0], [85.9, 8632.0], [86.0, 8632.0], [86.1, 8632.0], [86.2, 8632.0], [86.3, 8635.0], [86.4, 8635.0], [86.5, 8812.0], [86.6, 8812.0], [86.7, 8819.0], [86.8, 8819.0], [86.9, 8821.0], [87.0, 8821.0], [87.1, 8920.0], [87.2, 8920.0], [87.3, 8922.0], [87.4, 8922.0], [87.5, 8928.0], [87.6, 8928.0], [87.7, 8930.0], [87.8, 8930.0], [87.9, 8930.0], [88.0, 8930.0], [88.1, 9002.0], [88.2, 9002.0], [88.3, 9004.0], [88.4, 9004.0], [88.5, 9221.0], [88.6, 9221.0], [88.7, 9224.0], [88.8, 9224.0], [88.9, 9225.0], [89.0, 9225.0], [89.1, 9722.0], [89.2, 9722.0], [89.3, 9722.0], [89.4, 9722.0], [89.5, 9723.0], [89.6, 9723.0], [89.7, 9724.0], [89.8, 9724.0], [89.9, 9728.0], [90.0, 9728.0], [90.1, 9729.0], [90.2, 9729.0], [90.3, 9729.0], [90.4, 9729.0], [90.5, 9729.0], [90.6, 9729.0], [90.7, 9729.0], [90.8, 9729.0], [90.9, 9730.0], [91.0, 9730.0], [91.1, 9732.0], [91.2, 9732.0], [91.3, 9734.0], [91.4, 9734.0], [91.5, 9737.0], [91.6, 9737.0], [91.7, 9737.0], [91.8, 9737.0], [91.9, 9737.0], [92.0, 9737.0], [92.1, 9738.0], [92.2, 9738.0], [92.3, 9738.0], [92.4, 9738.0], [92.5, 9740.0], [92.6, 9740.0], [92.7, 9747.0], [92.8, 9747.0], [92.9, 9747.0], [93.0, 9747.0], [93.1, 9748.0], [93.2, 9748.0], [93.3, 9749.0], [93.4, 9749.0], [93.5, 9760.0], [93.6, 9760.0], [93.7, 9906.0], [93.8, 9906.0], [93.9, 9910.0], [94.0, 9910.0], [94.1, 9910.0], [94.2, 9910.0], [94.3, 9913.0], [94.4, 9913.0], [94.5, 9916.0], [94.6, 9916.0], [94.7, 9940.0], [94.8, 9940.0], [94.9, 9946.0], [95.0, 9946.0], [95.1, 9947.0], [95.2, 9947.0], [95.3, 10104.0], [95.4, 10104.0], [95.5, 10758.0], [95.6, 10758.0], [95.7, 10764.0], [95.8, 10764.0], [95.9, 10777.0], [96.0, 10777.0], [96.1, 10777.0], [96.2, 10777.0], [96.3, 10781.0], [96.4, 10781.0], [96.5, 10783.0], [96.6, 10783.0], [96.7, 10783.0], [96.8, 10783.0], [96.9, 10786.0], [97.0, 10786.0], [97.1, 10857.0], [97.2, 10857.0], [97.3, 10866.0], [97.4, 10866.0], [97.5, 27838.0], [97.6, 27838.0], [97.7, 27865.0], [97.8, 27865.0], [97.9, 27870.0], [98.0, 27870.0], [98.1, 27944.0], [98.2, 27944.0], [98.3, 28986.0], [98.4, 28986.0], [98.5, 28986.0], [98.6, 28986.0], [98.7, 28987.0], [98.8, 28987.0], [98.9, 28988.0], [99.0, 28988.0], [99.1, 29986.0], [99.2, 29986.0], [99.3, 30135.0], [99.4, 30135.0], [99.5, 30135.0], [99.6, 30135.0], [99.7, 30135.0], [99.8, 30135.0], [99.9, 30223.0], [100.0, 30223.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[0.0, 77.0], [0.1, 77.0], [0.2, 170.0], [0.3, 170.0], [0.4, 171.0], [0.5, 171.0], [0.6, 171.0], [0.7, 171.0], [0.8, 171.0], [0.9, 171.0], [1.0, 179.0], [1.1, 179.0], [1.2, 341.0], [1.3, 341.0], [1.4, 385.0], [1.5, 385.0], [1.6, 546.0], [1.7, 546.0], [1.8, 547.0], [1.9, 547.0], [2.0, 560.0], [2.1, 560.0], [2.2, 681.0], [2.3, 681.0], [2.4, 722.0], [2.5, 722.0], [2.6, 1048.0], [2.7, 1048.0], [2.8, 1048.0], [2.9, 1100.0], [3.0, 1100.0], [3.1, 1168.0], [3.2, 1168.0], [3.3, 1253.0], [3.4, 1253.0], [3.5, 1624.0], [3.6, 1624.0], [3.7, 1634.0], [3.8, 1634.0], [3.9, 2049.0], [4.0, 2049.0], [4.1, 2049.0], [4.2, 2049.0], [4.3, 2049.0], [4.4, 2049.0], [4.5, 2148.0], [4.6, 2148.0], [4.7, 2237.0], [4.8, 2237.0], [4.9, 2238.0], [5.0, 2238.0], [5.1, 2481.0], [5.2, 2481.0], [5.3, 2483.0], [5.4, 2483.0], [5.5, 2560.0], [5.6, 2560.0], [5.7, 2560.0], [5.8, 2560.0], [5.9, 2576.0], [6.0, 2576.0], [6.1, 2577.0], [6.2, 2577.0], [6.3, 2697.0], [6.4, 2697.0], [6.5, 2829.0], [6.6, 2829.0], [6.7, 3078.0], [6.8, 3078.0], [6.9, 3078.0], [7.0, 3078.0], [7.1, 3078.0], [7.2, 3078.0], [7.3, 3092.0], [7.4, 3092.0], [7.5, 3093.0], [7.6, 3093.0], [7.7, 3094.0], [7.8, 3094.0], [7.9, 3103.0], [8.0, 3103.0], [8.1, 3255.0], [8.2, 3255.0], [8.3, 3882.0], [8.4, 3882.0], [8.5, 4047.0], [8.6, 4047.0], [8.7, 4049.0], [8.8, 4050.0], [8.9, 4050.0], [9.0, 4206.0], [9.1, 4206.0], [9.2, 4212.0], [9.3, 4212.0], [9.4, 4217.0], [9.5, 4217.0], [9.6, 4218.0], [9.7, 4218.0], [9.8, 6803.0], [9.9, 6803.0], [10.0, 8696.0], [10.1, 8696.0], [10.2, 8698.0], [10.3, 8698.0], [10.4, 8709.0], [10.5, 8709.0], [10.6, 8710.0], [10.7, 8710.0], [10.8, 11281.0], [10.9, 11281.0], [11.0, 11338.0], [11.1, 11338.0], [11.2, 11350.0], [11.3, 11350.0], [11.4, 11535.0], [11.5, 11535.0], [11.6, 11544.0], [11.7, 11544.0], [11.8, 11553.0], [11.9, 11553.0], [12.0, 12199.0], [12.1, 12199.0], [12.2, 14643.0], [12.3, 14643.0], [12.4, 14644.0], [12.5, 14644.0], [12.6, 14756.0], [12.7, 14756.0], [12.8, 14764.0], [12.9, 14764.0], [13.0, 14767.0], [13.1, 14767.0], [13.2, 14827.0], [13.3, 14827.0], [13.4, 14829.0], [13.5, 14829.0], [13.6, 14834.0], [13.7, 14834.0], [13.8, 14841.0], [13.9, 14841.0], [14.0, 15145.0], [14.1, 15145.0], [14.2, 15152.0], [14.3, 15152.0], [14.4, 17591.0], [14.5, 17591.0], [14.6, 17597.0], [14.7, 17597.0], [14.8, 17598.0], [14.9, 17598.0], [15.0, 17599.0], [15.1, 17599.0], [15.2, 17605.0], [15.3, 17605.0], [15.4, 17613.0], [15.5, 17613.0], [15.6, 17709.0], [15.7, 17709.0], [15.8, 17723.0], [15.9, 17723.0], [16.0, 18087.0], [16.1, 18087.0], [16.2, 18101.0], [16.3, 18101.0], [16.4, 18225.0], [16.5, 18225.0], [16.6, 18225.0], [16.7, 18225.0], [16.8, 18227.0], [16.9, 18227.0], [17.0, 18227.0], [17.1, 18227.0], [17.2, 18230.0], [17.3, 18230.0], [17.4, 18232.0], [17.5, 18232.0], [17.6, 18239.0], [17.7, 18239.0], [17.8, 18250.0], [17.9, 18250.0], [18.0, 18253.0], [18.1, 18253.0], [18.2, 18257.0], [18.3, 18257.0], [18.4, 18258.0], [18.5, 18258.0], [18.6, 18734.0], [18.7, 18734.0], [18.8, 19037.0], [18.9, 19037.0], [19.0, 19308.0], [19.1, 19308.0], [19.2, 19416.0], [19.3, 19416.0], [19.4, 19439.0], [19.5, 19439.0], [19.6, 19471.0], [19.7, 19471.0], [19.8, 19673.0], [19.9, 19673.0], [20.0, 20105.0], [20.1, 20105.0], [20.2, 20147.0], [20.3, 20147.0], [20.4, 20151.0], [20.5, 20151.0], [20.6, 20151.0], [20.7, 20151.0], [20.8, 20308.0], [20.9, 20308.0], [21.0, 20995.0], [21.1, 20995.0], [21.2, 21004.0], [21.3, 21004.0], [21.4, 21041.0], [21.5, 21041.0], [21.6, 21041.0], [21.7, 21041.0], [21.8, 21045.0], [21.9, 21045.0], [22.0, 21053.0], [22.1, 21053.0], [22.2, 21058.0], [22.3, 21058.0], [22.4, 21058.0], [22.5, 21058.0], [22.6, 21061.0], [22.7, 21061.0], [22.8, 21061.0], [22.9, 21061.0], [23.0, 21069.0], [23.1, 21069.0], [23.2, 21070.0], [23.3, 21070.0], [23.4, 21073.0], [23.5, 21073.0], [23.6, 21074.0], [23.7, 21074.0], [23.8, 21075.0], [23.9, 21075.0], [24.0, 21091.0], [24.1, 21091.0], [24.2, 21430.0], [24.3, 21430.0], [24.4, 21431.0], [24.5, 21431.0], [24.6, 21639.0], [24.7, 21639.0], [24.8, 21847.0], [24.9, 21847.0], [25.0, 21894.0], [25.1, 21894.0], [25.2, 21943.0], [25.3, 21943.0], [25.4, 21995.0], [25.5, 21995.0], [25.6, 22163.0], [25.7, 22163.0], [25.8, 22175.0], [25.9, 22175.0], [26.0, 22186.0], [26.1, 22186.0], [26.2, 22238.0], [26.3, 22238.0], [26.4, 22241.0], [26.5, 22241.0], [26.6, 22243.0], [26.7, 22243.0], [26.8, 22246.0], [26.9, 22246.0], [27.0, 22252.0], [27.1, 22252.0], [27.2, 22335.0], [27.3, 22335.0], [27.4, 22339.0], [27.5, 22339.0], [27.6, 22340.0], [27.7, 22340.0], [27.8, 22341.0], [27.9, 22341.0], [28.0, 22342.0], [28.1, 22342.0], [28.2, 22351.0], [28.3, 22351.0], [28.4, 22357.0], [28.5, 22357.0], [28.6, 22394.0], [28.7, 22394.0], [28.8, 22397.0], [28.9, 22397.0], [29.0, 22404.0], [29.1, 22404.0], [29.2, 22563.0], [29.3, 22563.0], [29.4, 22656.0], [29.5, 22656.0], [29.6, 22657.0], [29.7, 22657.0], [29.8, 22751.0], [29.9, 22751.0], [30.0, 22752.0], [30.1, 22752.0], [30.2, 22756.0], [30.3, 22756.0], [30.4, 22783.0], [30.5, 22783.0], [30.6, 23100.0], [30.7, 23100.0], [30.8, 23263.0], [30.9, 23263.0], [31.0, 23265.0], [31.1, 23265.0], [31.2, 23266.0], [31.3, 23266.0], [31.4, 23266.0], [31.5, 23266.0], [31.6, 23269.0], [31.7, 23269.0], [31.8, 23271.0], [31.9, 23271.0], [32.0, 23273.0], [32.1, 23273.0], [32.2, 23440.0], [32.3, 23440.0], [32.4, 23440.0], [32.5, 23440.0], [32.6, 23441.0], [32.7, 23441.0], [32.8, 23521.0], [32.9, 23521.0], [33.0, 23530.0], [33.1, 23530.0], [33.2, 23871.0], [33.3, 23871.0], [33.4, 23879.0], [33.5, 23879.0], [33.6, 24641.0], [33.7, 24641.0], [33.8, 24641.0], [33.9, 24641.0], [34.0, 24774.0], [34.1, 24774.0], [34.2, 24776.0], [34.3, 24776.0], [34.4, 24878.0], [34.5, 24878.0], [34.6, 24878.0], [34.7, 24878.0], [34.8, 24884.0], [34.9, 24884.0], [35.0, 24885.0], [35.1, 24885.0], [35.2, 24892.0], [35.3, 24892.0], [35.4, 25080.0], [35.5, 25080.0], [35.6, 25081.0], [35.7, 25081.0], [35.8, 25092.0], [35.9, 25092.0], [36.0, 25095.0], [36.1, 25095.0], [36.2, 25108.0], [36.3, 25108.0], [36.4, 25262.0], [36.5, 25262.0], [36.6, 26183.0], [36.7, 26183.0], [36.8, 26560.0], [36.9, 26560.0], [37.0, 26747.0], [37.1, 26747.0], [37.2, 27273.0], [37.3, 27273.0], [37.4, 28471.0], [37.5, 28471.0], [37.6, 28487.0], [37.7, 28487.0], [37.8, 28493.0], [37.9, 28493.0], [38.0, 28495.0], [38.1, 28495.0], [38.2, 28505.0], [38.3, 28505.0], [38.4, 28507.0], [38.5, 28507.0], [38.6, 28509.0], [38.7, 28509.0], [38.8, 28512.0], [38.9, 28512.0], [39.0, 28515.0], [39.1, 28515.0], [39.2, 28766.0], [39.3, 28766.0], [39.4, 30314.0], [39.5, 30314.0], [39.6, 30330.0], [39.7, 30330.0], [39.8, 30330.0], [39.9, 30753.0], [40.0, 30753.0], [40.1, 30960.0], [40.2, 30960.0], [40.3, 30961.0], [40.4, 30961.0], [40.5, 30966.0], [40.6, 30966.0], [40.7, 30967.0], [40.8, 30967.0], [40.9, 30968.0], [41.0, 30968.0], [41.1, 31000.0], [41.2, 31000.0], [41.3, 31001.0], [41.4, 31001.0], [41.5, 31131.0], [41.6, 31131.0], [41.7, 31176.0], [41.8, 31176.0], [41.9, 31176.0], [42.0, 31176.0], [42.1, 31177.0], [42.2, 31177.0], [42.3, 31231.0], [42.4, 31231.0], [42.5, 36527.0], [42.6, 36527.0], [42.7, 36583.0], [42.8, 36583.0], [42.9, 36589.0], [43.0, 36589.0], [43.1, 36667.0], [43.2, 36667.0], [43.3, 36673.0], [43.4, 36673.0], [43.5, 36675.0], [43.6, 36675.0], [43.7, 36677.0], [43.8, 36677.0], [43.9, 36678.0], [44.0, 36678.0], [44.1, 36969.0], [44.2, 36969.0], [44.3, 36997.0], [44.4, 36997.0], [44.5, 37000.0], [44.6, 37000.0], [44.7, 37004.0], [44.8, 37004.0], [44.9, 38856.0], [45.0, 38856.0], [45.1, 40413.0], [45.2, 40413.0], [45.3, 40417.0], [45.4, 40417.0], [45.5, 40419.0], [45.6, 40419.0], [45.7, 40419.0], [45.8, 40419.0], [45.9, 40464.0], [46.0, 40464.0], [46.1, 40466.0], [46.2, 40466.0], [46.3, 40468.0], [46.4, 40468.0], [46.5, 40473.0], [46.6, 40473.0], [46.7, 40475.0], [46.8, 40475.0], [46.9, 40476.0], [47.0, 40476.0], [47.1, 40476.0], [47.2, 40476.0], [47.3, 40478.0], [47.4, 40478.0], [47.5, 40482.0], [47.6, 40482.0], [47.7, 40491.0], [47.8, 40491.0], [47.9, 41548.0], [48.0, 41548.0], [48.1, 41557.0], [48.2, 41557.0], [48.3, 42320.0], [48.4, 42320.0], [48.5, 42341.0], [48.6, 42341.0], [48.7, 43119.0], [48.8, 43119.0], [48.9, 43184.0], [49.0, 43184.0], [49.1, 43269.0], [49.2, 43269.0], [49.3, 43270.0], [49.4, 43270.0], [49.5, 43924.0], [49.6, 43924.0], [49.7, 43925.0], [49.8, 43925.0], [49.9, 43925.0], [50.0, 43925.0], [50.1, 43929.0], [50.2, 43929.0], [50.3, 43933.0], [50.4, 43933.0], [50.5, 43945.0], [50.6, 43945.0], [50.7, 44393.0], [50.8, 44393.0], [50.9, 44394.0], [51.0, 44394.0], [51.1, 44399.0], [51.2, 44399.0], [51.3, 44401.0], [51.4, 44401.0], [51.5, 44407.0], [51.6, 44407.0], [51.7, 44471.0], [51.8, 44471.0], [51.9, 44479.0], [52.0, 44479.0], [52.1, 44480.0], [52.2, 44480.0], [52.3, 44484.0], [52.4, 44484.0], [52.5, 44496.0], [52.6, 44496.0], [52.7, 44501.0], [52.8, 44501.0], [52.9, 44523.0], [53.0, 44523.0], [53.1, 44524.0], [53.2, 44524.0], [53.3, 44541.0], [53.4, 44541.0], [53.5, 44550.0], [53.6, 44550.0], [53.7, 44620.0], [53.8, 44620.0], [53.9, 44621.0], [54.0, 44621.0], [54.1, 44626.0], [54.2, 44626.0], [54.3, 44627.0], [54.4, 44627.0], [54.5, 44632.0], [54.6, 44632.0], [54.7, 44639.0], [54.8, 44639.0], [54.9, 44695.0], [55.0, 44695.0], [55.1, 44774.0], [55.2, 44774.0], [55.3, 44784.0], [55.4, 44784.0], [55.5, 44785.0], [55.6, 44785.0], [55.7, 44785.0], [55.8, 44785.0], [55.9, 44788.0], [56.0, 44788.0], [56.1, 44911.0], [56.2, 44911.0], [56.3, 44980.0], [56.4, 44980.0], [56.5, 44981.0], [56.6, 44981.0], [56.7, 44987.0], [56.8, 44987.0], [56.9, 46719.0], [57.0, 46719.0], [57.1, 46721.0], [57.2, 46721.0], [57.3, 46721.0], [57.4, 46721.0], [57.5, 46722.0], [57.6, 46722.0], [57.7, 46723.0], [57.8, 46723.0], [57.9, 46724.0], [58.0, 46724.0], [58.1, 46725.0], [58.2, 46725.0], [58.3, 46726.0], [58.4, 46726.0], [58.5, 46727.0], [58.6, 46727.0], [58.7, 46731.0], [58.8, 46731.0], [58.9, 47055.0], [59.0, 47055.0], [59.1, 47057.0], [59.2, 47057.0], [59.3, 47086.0], [59.4, 47086.0], [59.5, 47105.0], [59.6, 47105.0], [59.7, 47111.0], [59.8, 47111.0], [59.9, 47122.0], [60.0, 47122.0], [60.1, 47593.0], [60.2, 47593.0], [60.3, 47605.0], [60.4, 47605.0], [60.5, 47634.0], [60.6, 47634.0], [60.7, 47674.0], [60.8, 47674.0], [60.9, 47728.0], [61.0, 47728.0], [61.1, 47738.0], [61.2, 47738.0], [61.3, 47762.0], [61.4, 47762.0], [61.5, 47996.0], [61.6, 47996.0], [61.7, 49585.0], [61.8, 49585.0], [61.9, 50084.0], [62.0, 50084.0], [62.1, 50319.0], [62.2, 50319.0], [62.3, 51550.0], [62.4, 51550.0], [62.5, 51557.0], [62.6, 51557.0], [62.7, 51649.0], [62.8, 51649.0], [62.9, 51649.0], [63.0, 51649.0], [63.1, 51649.0], [63.2, 51649.0], [63.3, 52006.0], [63.4, 52006.0], [63.5, 52008.0], [63.6, 52008.0], [63.7, 52011.0], [63.8, 52011.0], [63.9, 52014.0], [64.0, 52014.0], [64.1, 52017.0], [64.2, 52017.0], [64.3, 52021.0], [64.4, 52021.0], [64.5, 52326.0], [64.6, 52326.0], [64.7, 52326.0], [64.8, 52326.0], [64.9, 52331.0], [65.0, 52331.0], [65.1, 52332.0], [65.2, 52332.0], [65.3, 52335.0], [65.4, 52335.0], [65.5, 52343.0], [65.6, 52343.0], [65.7, 52344.0], [65.8, 52344.0], [65.9, 52361.0], [66.0, 52361.0], [66.1, 52364.0], [66.2, 52364.0], [66.3, 52364.0], [66.4, 52364.0], [66.5, 52551.0], [66.6, 52551.0], [66.7, 52564.0], [66.8, 52564.0], [66.9, 52768.0], [67.0, 52768.0], [67.1, 52840.0], [67.2, 52840.0], [67.3, 53077.0], [67.4, 53077.0], [67.5, 53083.0], [67.6, 53083.0], [67.7, 53090.0], [67.8, 53090.0], [67.9, 53091.0], [68.0, 53091.0], [68.1, 53091.0], [68.2, 53091.0], [68.3, 53108.0], [68.4, 53108.0], [68.5, 53113.0], [68.6, 53113.0], [68.7, 53115.0], [68.8, 53115.0], [68.9, 53119.0], [69.0, 53119.0], [69.1, 53126.0], [69.2, 53126.0], [69.3, 53136.0], [69.4, 53136.0], [69.5, 53137.0], [69.6, 53137.0], [69.7, 53138.0], [69.8, 53138.0], [69.9, 53139.0], [70.0, 53139.0], [70.1, 53141.0], [70.2, 53141.0], [70.3, 53151.0], [70.4, 53151.0], [70.5, 53152.0], [70.6, 53152.0], [70.7, 53157.0], [70.8, 53157.0], [70.9, 53164.0], [71.0, 53164.0], [71.1, 53168.0], [71.2, 53168.0], [71.3, 53170.0], [71.4, 53170.0], [71.5, 53172.0], [71.6, 53172.0], [71.7, 53173.0], [71.8, 53173.0], [71.9, 53178.0], [72.0, 53178.0], [72.1, 53179.0], [72.2, 53179.0], [72.3, 53181.0], [72.4, 53181.0], [72.5, 53183.0], [72.6, 53183.0], [72.7, 53184.0], [72.8, 53184.0], [72.9, 53229.0], [73.0, 53229.0], [73.1, 53391.0], [73.2, 53391.0], [73.3, 53504.0], [73.4, 53504.0], [73.5, 54142.0], [73.6, 54142.0], [73.7, 54150.0], [73.8, 54150.0], [73.9, 54152.0], [74.0, 54152.0], [74.1, 54153.0], [74.2, 54153.0], [74.3, 55005.0], [74.4, 55005.0], [74.5, 55013.0], [74.6, 55013.0], [74.7, 55013.0], [74.8, 55013.0], [74.9, 55016.0], [75.0, 55016.0], [75.1, 55027.0], [75.2, 55027.0], [75.3, 55033.0], [75.4, 55033.0], [75.5, 55034.0], [75.6, 55034.0], [75.7, 55075.0], [75.8, 55075.0], [75.9, 55083.0], [76.0, 55083.0], [76.1, 55086.0], [76.2, 55086.0], [76.3, 55087.0], [76.4, 55087.0], [76.5, 55088.0], [76.6, 55088.0], [76.7, 55088.0], [76.8, 55088.0], [76.9, 55133.0], [77.0, 55133.0], [77.1, 55133.0], [77.2, 55133.0], [77.3, 55134.0], [77.4, 55134.0], [77.5, 55135.0], [77.6, 55135.0], [77.7, 55135.0], [77.8, 55135.0], [77.9, 55137.0], [78.0, 55137.0], [78.1, 55140.0], [78.2, 55140.0], [78.3, 55147.0], [78.4, 55147.0], [78.5, 55148.0], [78.6, 55148.0], [78.7, 56164.0], [78.8, 56164.0], [78.9, 56164.0], [79.0, 56164.0], [79.1, 56164.0], [79.2, 56164.0], [79.3, 56171.0], [79.4, 56171.0], [79.5, 56764.0], [79.6, 56764.0], [79.7, 56793.0], [79.8, 56793.0], [79.9, 56793.0], [80.0, 56793.0], [80.1, 56798.0], [80.2, 56798.0], [80.3, 56827.0], [80.4, 56827.0], [80.5, 56920.0], [80.6, 56920.0], [80.7, 57750.0], [80.8, 57750.0], [80.9, 57758.0], [81.0, 57758.0], [81.1, 57873.0], [81.2, 57873.0], [81.3, 57926.0], [81.4, 57926.0], [81.5, 58930.0], [81.6, 58930.0], [81.7, 58941.0], [81.8, 58941.0], [81.9, 58961.0], [82.0, 58961.0], [82.1, 59000.0], [82.2, 59000.0], [82.3, 59055.0], [82.4, 59055.0], [82.5, 59055.0], [82.6, 59055.0], [82.7, 59073.0], [82.8, 59073.0], [82.9, 59082.0], [83.0, 59082.0], [83.1, 59093.0], [83.2, 59093.0], [83.3, 59094.0], [83.4, 59094.0], [83.5, 59096.0], [83.6, 59096.0], [83.7, 59100.0], [83.8, 59100.0], [83.9, 59105.0], [84.0, 59105.0], [84.1, 59128.0], [84.2, 59128.0], [84.3, 59151.0], [84.4, 59151.0], [84.5, 59167.0], [84.6, 59167.0], [84.7, 59200.0], [84.8, 59200.0], [84.9, 59206.0], [85.0, 59206.0], [85.1, 59206.0], [85.2, 59206.0], [85.3, 59211.0], [85.4, 59211.0], [85.5, 59212.0], [85.6, 59212.0], [85.7, 59214.0], [85.8, 59214.0], [85.9, 59318.0], [86.0, 59318.0], [86.1, 59325.0], [86.2, 59325.0], [86.3, 59340.0], [86.4, 59340.0], [86.5, 59350.0], [86.6, 59350.0], [86.7, 59351.0], [86.8, 59351.0], [86.9, 59355.0], [87.0, 59355.0], [87.1, 59363.0], [87.2, 59363.0], [87.3, 59417.0], [87.4, 59417.0], [87.5, 59499.0], [87.6, 59499.0], [87.7, 59527.0], [87.8, 59527.0], [87.9, 59757.0], [88.0, 59757.0], [88.1, 61497.0], [88.2, 61497.0], [88.3, 61634.0], [88.4, 61634.0], [88.5, 61635.0], [88.6, 61635.0], [88.7, 62044.0], [88.8, 62044.0], [88.9, 62057.0], [89.0, 62057.0], [89.1, 62166.0], [89.2, 62166.0], [89.3, 62172.0], [89.4, 62172.0], [89.5, 62181.0], [89.6, 62181.0], [89.7, 62184.0], [89.8, 62184.0], [89.9, 62198.0], [90.0, 62198.0], [90.1, 62212.0], [90.2, 62212.0], [90.3, 62304.0], [90.4, 62304.0], [90.5, 62557.0], [90.6, 62557.0], [90.7, 62975.0], [90.8, 62975.0], [90.9, 63068.0], [91.0, 63068.0], [91.1, 63167.0], [91.2, 63167.0], [91.3, 63171.0], [91.4, 63171.0], [91.5, 63173.0], [91.6, 63173.0], [91.7, 64526.0], [91.8, 64526.0], [91.9, 64780.0], [92.0, 64780.0], [92.1, 65219.0], [92.2, 65219.0], [92.3, 65289.0], [92.4, 65289.0], [92.5, 65291.0], [92.6, 65291.0], [92.7, 65304.0], [92.8, 65304.0], [92.9, 65306.0], [93.0, 65306.0], [93.1, 65309.0], [93.2, 65309.0], [93.3, 65310.0], [93.4, 65310.0], [93.5, 65312.0], [93.6, 65312.0], [93.7, 65321.0], [93.8, 65321.0], [93.9, 66213.0], [94.0, 66213.0], [94.1, 66608.0], [94.2, 66608.0], [94.3, 66614.0], [94.4, 66614.0], [94.5, 66614.0], [94.6, 66614.0], [94.7, 66620.0], [94.8, 66620.0], [94.9, 66769.0], [95.0, 66769.0], [95.1, 66784.0], [95.2, 66784.0], [95.3, 66786.0], [95.4, 66786.0], [95.5, 66803.0], [95.6, 66803.0], [95.7, 66804.0], [95.8, 66804.0], [95.9, 66814.0], [96.0, 66814.0], [96.1, 66819.0], [96.2, 66819.0], [96.3, 66829.0], [96.4, 66829.0], [96.5, 67011.0], [96.6, 67011.0], [96.7, 67012.0], [96.8, 67012.0], [96.9, 67012.0], [97.0, 67012.0], [97.1, 67263.0], [97.2, 67263.0], [97.3, 67306.0], [97.4, 67306.0], [97.5, 67376.0], [97.6, 67376.0], [97.7, 67413.0], [97.8, 67413.0], [97.9, 67476.0], [98.0, 67476.0], [98.1, 67501.0], [98.2, 67501.0], [98.3, 67505.0], [98.4, 67505.0], [98.5, 67511.0], [98.6, 67511.0], [98.7, 67518.0], [98.8, 67518.0], [98.9, 67521.0], [99.0, 67521.0], [99.1, 67531.0], [99.2, 67531.0], [99.3, 67554.0], [99.4, 67554.0], [99.5, 67569.0], [99.6, 67569.0], [99.7, 67589.0], [99.8, 67589.0], [99.9, 67620.0], [100.0, 67620.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[0.0, 79.0], [0.1, 79.0], [0.2, 89.0], [0.3, 89.0], [0.4, 90.0], [0.5, 90.0], [0.6, 90.0], [0.7, 90.0], [0.8, 94.0], [0.9, 94.0], [1.0, 97.0], [1.1, 97.0], [1.2, 98.0], [1.3, 98.0], [1.4, 102.0], [1.5, 102.0], [1.6, 105.0], [1.7, 105.0], [1.8, 105.0], [1.9, 105.0], [2.0, 105.0], [2.1, 105.0], [2.2, 105.0], [2.3, 105.0], [2.4, 105.0], [2.5, 105.0], [2.6, 109.0], [2.7, 109.0], [2.8, 111.0], [2.9, 111.0], [3.0, 113.0], [3.1, 113.0], [3.2, 113.0], [3.3, 113.0], [3.4, 114.0], [3.5, 114.0], [3.6, 114.0], [3.7, 114.0], [3.8, 115.0], [3.9, 115.0], [4.0, 116.0], [4.1, 116.0], [4.2, 117.0], [4.3, 117.0], [4.4, 118.0], [4.5, 118.0], [4.6, 118.0], [4.7, 119.0], [4.8, 119.0], [4.9, 120.0], [5.0, 120.0], [5.1, 121.0], [5.2, 121.0], [5.3, 122.0], [5.4, 122.0], [5.5, 123.0], [5.6, 123.0], [5.7, 124.0], [5.8, 124.0], [5.9, 125.0], [6.0, 125.0], [6.1, 125.0], [6.2, 125.0], [6.3, 125.0], [6.4, 125.0], [6.5, 128.0], [6.6, 128.0], [6.7, 130.0], [6.8, 130.0], [6.9, 130.0], [7.0, 130.0], [7.1, 131.0], [7.2, 131.0], [7.3, 134.0], [7.4, 134.0], [7.5, 138.0], [7.6, 138.0], [7.7, 139.0], [7.8, 139.0], [7.9, 139.0], [8.0, 139.0], [8.1, 141.0], [8.2, 141.0], [8.3, 141.0], [8.4, 141.0], [8.5, 142.0], [8.6, 142.0], [8.7, 142.0], [8.8, 142.0], [8.9, 143.0], [9.0, 143.0], [9.1, 145.0], [9.2, 145.0], [9.3, 145.0], [9.4, 145.0], [9.5, 146.0], [9.6, 146.0], [9.7, 146.0], [9.8, 146.0], [9.9, 147.0], [10.0, 147.0], [10.1, 147.0], [10.2, 147.0], [10.3, 148.0], [10.4, 148.0], [10.5, 148.0], [10.6, 148.0], [10.7, 148.0], [10.8, 148.0], [10.9, 148.0], [11.0, 148.0], [11.1, 149.0], [11.2, 149.0], [11.3, 150.0], [11.4, 150.0], [11.5, 152.0], [11.6, 152.0], [11.7, 152.0], [11.8, 152.0], [11.9, 152.0], [12.0, 152.0], [12.1, 152.0], [12.2, 152.0], [12.3, 153.0], [12.4, 153.0], [12.5, 155.0], [12.6, 155.0], [12.7, 156.0], [12.8, 156.0], [12.9, 156.0], [13.0, 156.0], [13.1, 157.0], [13.2, 157.0], [13.3, 157.0], [13.4, 157.0], [13.5, 157.0], [13.6, 157.0], [13.7, 158.0], [13.8, 158.0], [13.9, 158.0], [14.0, 158.0], [14.1, 160.0], [14.2, 160.0], [14.3, 161.0], [14.4, 164.0], [14.5, 164.0], [14.6, 164.0], [14.7, 164.0], [14.8, 166.0], [14.9, 166.0], [15.0, 168.0], [15.1, 168.0], [15.2, 170.0], [15.3, 170.0], [15.4, 170.0], [15.5, 170.0], [15.6, 171.0], [15.7, 171.0], [15.8, 172.0], [15.9, 172.0], [16.0, 172.0], [16.1, 172.0], [16.2, 172.0], [16.3, 172.0], [16.4, 172.0], [16.5, 172.0], [16.6, 172.0], [16.7, 172.0], [16.8, 172.0], [16.9, 172.0], [17.0, 172.0], [17.1, 172.0], [17.2, 173.0], [17.3, 173.0], [17.4, 173.0], [17.5, 173.0], [17.6, 173.0], [17.7, 173.0], [17.8, 173.0], [17.9, 173.0], [18.0, 173.0], [18.1, 173.0], [18.2, 175.0], [18.3, 175.0], [18.4, 176.0], [18.5, 176.0], [18.6, 176.0], [18.7, 176.0], [18.8, 181.0], [18.9, 181.0], [19.0, 183.0], [19.1, 183.0], [19.2, 183.0], [19.3, 183.0], [19.4, 184.0], [19.5, 184.0], [19.6, 184.0], [19.7, 184.0], [19.8, 185.0], [19.9, 185.0], [20.0, 185.0], [20.1, 185.0], [20.2, 185.0], [20.3, 185.0], [20.4, 185.0], [20.5, 185.0], [20.6, 188.0], [20.7, 188.0], [20.8, 188.0], [20.9, 188.0], [21.0, 189.0], [21.1, 189.0], [21.2, 189.0], [21.3, 189.0], [21.4, 189.0], [21.5, 189.0], [21.6, 189.0], [21.7, 189.0], [21.8, 189.0], [21.9, 189.0], [22.0, 189.0], [22.1, 189.0], [22.2, 190.0], [22.3, 190.0], [22.4, 190.0], [22.5, 190.0], [22.6, 190.0], [22.7, 190.0], [22.8, 190.0], [22.9, 190.0], [23.0, 190.0], [23.1, 190.0], [23.2, 190.0], [23.3, 190.0], [23.4, 191.0], [23.5, 191.0], [23.6, 191.0], [23.7, 191.0], [23.8, 192.0], [23.9, 192.0], [24.0, 193.0], [24.1, 193.0], [24.2, 195.0], [24.3, 195.0], [24.4, 195.0], [24.5, 195.0], [24.6, 195.0], [24.7, 195.0], [24.8, 195.0], [24.9, 195.0], [25.0, 196.0], [25.1, 196.0], [25.2, 196.0], [25.3, 196.0], [25.4, 196.0], [25.5, 196.0], [25.6, 196.0], [25.7, 196.0], [25.8, 197.0], [25.9, 197.0], [26.0, 198.0], [26.1, 198.0], [26.2, 198.0], [26.3, 198.0], [26.4, 199.0], [26.5, 199.0], [26.6, 201.0], [26.7, 201.0], [26.8, 202.0], [26.9, 202.0], [27.0, 202.0], [27.1, 202.0], [27.2, 204.0], [27.3, 204.0], [27.4, 205.0], [27.5, 205.0], [27.6, 206.0], [27.7, 206.0], [27.8, 206.0], [27.9, 206.0], [28.0, 210.0], [28.1, 210.0], [28.2, 213.0], [28.3, 213.0], [28.4, 213.0], [28.5, 213.0], [28.6, 213.0], [28.7, 213.0], [28.8, 214.0], [28.9, 214.0], [29.0, 214.0], [29.1, 214.0], [29.2, 214.0], [29.3, 214.0], [29.4, 214.0], [29.5, 214.0], [29.6, 214.0], [29.7, 214.0], [29.8, 214.0], [29.9, 214.0], [30.0, 217.0], [30.1, 217.0], [30.2, 217.0], [30.3, 217.0], [30.4, 218.0], [30.5, 218.0], [30.6, 219.0], [30.7, 219.0], [30.8, 220.0], [30.9, 220.0], [31.0, 222.0], [31.1, 222.0], [31.2, 222.0], [31.3, 222.0], [31.4, 222.0], [31.5, 222.0], [31.6, 222.0], [31.7, 222.0], [31.8, 222.0], [31.9, 222.0], [32.0, 225.0], [32.1, 225.0], [32.2, 225.0], [32.3, 225.0], [32.4, 225.0], [32.5, 225.0], [32.6, 226.0], [32.7, 226.0], [32.8, 226.0], [32.9, 226.0], [33.0, 227.0], [33.1, 227.0], [33.2, 227.0], [33.3, 227.0], [33.4, 227.0], [33.5, 227.0], [33.6, 228.0], [33.7, 228.0], [33.8, 228.0], [33.9, 228.0], [34.0, 228.0], [34.1, 228.0], [34.2, 229.0], [34.3, 229.0], [34.4, 229.0], [34.5, 229.0], [34.6, 230.0], [34.7, 230.0], [34.8, 231.0], [34.9, 231.0], [35.0, 231.0], [35.1, 231.0], [35.2, 233.0], [35.3, 233.0], [35.4, 233.0], [35.5, 233.0], [35.6, 233.0], [35.7, 233.0], [35.8, 234.0], [35.9, 234.0], [36.0, 234.0], [36.1, 234.0], [36.2, 235.0], [36.3, 235.0], [36.4, 235.0], [36.5, 235.0], [36.6, 235.0], [36.7, 235.0], [36.8, 235.0], [36.9, 235.0], [37.0, 235.0], [37.1, 235.0], [37.2, 235.0], [37.3, 235.0], [37.4, 235.0], [37.5, 235.0], [37.6, 236.0], [37.7, 236.0], [37.8, 238.0], [37.9, 238.0], [38.0, 239.0], [38.1, 239.0], [38.2, 239.0], [38.3, 239.0], [38.4, 239.0], [38.5, 239.0], [38.6, 240.0], [38.7, 240.0], [38.8, 245.0], [38.9, 245.0], [39.0, 245.0], [39.1, 245.0], [39.2, 248.0], [39.3, 248.0], [39.4, 248.0], [39.5, 248.0], [39.6, 258.0], [39.7, 258.0], [39.8, 772.0], [39.9, 772.0], [40.0, 1143.0], [40.1, 1143.0], [40.2, 1368.0], [40.3, 1368.0], [40.4, 1377.0], [40.5, 1377.0], [40.6, 1391.0], [40.7, 1391.0], [40.8, 1391.0], [40.9, 1496.0], [41.0, 1496.0], [41.1, 1521.0], [41.2, 1521.0], [41.3, 1536.0], [41.4, 1536.0], [41.5, 1592.0], [41.6, 1592.0], [41.7, 1613.0], [41.8, 1613.0], [41.9, 1720.0], [42.0, 1720.0], [42.1, 1729.0], [42.2, 1729.0], [42.3, 1799.0], [42.4, 1799.0], [42.5, 1926.0], [42.6, 1926.0], [42.7, 2057.0], [42.8, 2057.0], [42.9, 2082.0], [43.0, 2082.0], [43.1, 2104.0], [43.2, 2104.0], [43.3, 2112.0], [43.4, 2112.0], [43.5, 2142.0], [43.6, 2142.0], [43.7, 2163.0], [43.8, 2163.0], [43.9, 2168.0], [44.0, 2168.0], [44.1, 2175.0], [44.2, 2175.0], [44.3, 2179.0], [44.4, 2179.0], [44.5, 2185.0], [44.6, 2185.0], [44.7, 2185.0], [44.8, 2185.0], [44.9, 2203.0], [45.0, 2203.0], [45.1, 2205.0], [45.2, 2205.0], [45.3, 2207.0], [45.4, 2207.0], [45.5, 2216.0], [45.6, 2216.0], [45.7, 2217.0], [45.8, 2217.0], [45.9, 2241.0], [46.0, 2241.0], [46.1, 2269.0], [46.2, 2269.0], [46.3, 2273.0], [46.4, 2273.0], [46.5, 2300.0], [46.6, 2300.0], [46.7, 2307.0], [46.8, 2307.0], [46.9, 2313.0], [47.0, 2313.0], [47.1, 2318.0], [47.2, 2318.0], [47.3, 2333.0], [47.4, 2333.0], [47.5, 2343.0], [47.6, 2343.0], [47.7, 2364.0], [47.8, 2364.0], [47.9, 2416.0], [48.0, 2416.0], [48.1, 2468.0], [48.2, 2468.0], [48.3, 2502.0], [48.4, 2502.0], [48.5, 2524.0], [48.6, 2524.0], [48.7, 2530.0], [48.8, 2530.0], [48.9, 2532.0], [49.0, 2532.0], [49.1, 2536.0], [49.2, 2536.0], [49.3, 2539.0], [49.4, 2539.0], [49.5, 2551.0], [49.6, 2551.0], [49.7, 2559.0], [49.8, 2559.0], [49.9, 2560.0], [50.0, 2560.0], [50.1, 2567.0], [50.2, 2567.0], [50.3, 2589.0], [50.4, 2589.0], [50.5, 2591.0], [50.6, 2591.0], [50.7, 2609.0], [50.8, 2609.0], [50.9, 2610.0], [51.0, 2610.0], [51.1, 2629.0], [51.2, 2629.0], [51.3, 2645.0], [51.4, 2645.0], [51.5, 2690.0], [51.6, 2690.0], [51.7, 2730.0], [51.8, 2730.0], [51.9, 2734.0], [52.0, 2734.0], [52.1, 2734.0], [52.2, 2734.0], [52.3, 2755.0], [52.4, 2755.0], [52.5, 2759.0], [52.6, 2759.0], [52.7, 2760.0], [52.8, 2760.0], [52.9, 2760.0], [53.0, 2760.0], [53.1, 2763.0], [53.2, 2763.0], [53.3, 2768.0], [53.4, 2768.0], [53.5, 2771.0], [53.6, 2771.0], [53.7, 2779.0], [53.8, 2779.0], [53.9, 2788.0], [54.0, 2788.0], [54.1, 2797.0], [54.2, 2797.0], [54.3, 2805.0], [54.4, 2805.0], [54.5, 2808.0], [54.6, 2808.0], [54.7, 2810.0], [54.8, 2810.0], [54.9, 2821.0], [55.0, 2821.0], [55.1, 2827.0], [55.2, 2827.0], [55.3, 2827.0], [55.4, 2827.0], [55.5, 2832.0], [55.6, 2832.0], [55.7, 2843.0], [55.8, 2843.0], [55.9, 2845.0], [56.0, 2845.0], [56.1, 2848.0], [56.2, 2848.0], [56.3, 2851.0], [56.4, 2851.0], [56.5, 2852.0], [56.6, 2852.0], [56.7, 2854.0], [56.8, 2854.0], [56.9, 2862.0], [57.0, 2862.0], [57.1, 2863.0], [57.2, 2863.0], [57.3, 2869.0], [57.4, 2869.0], [57.5, 2871.0], [57.6, 2871.0], [57.7, 2877.0], [57.8, 2877.0], [57.9, 2880.0], [58.0, 2880.0], [58.1, 2882.0], [58.2, 2882.0], [58.3, 2884.0], [58.4, 2884.0], [58.5, 2888.0], [58.6, 2888.0], [58.7, 2905.0], [58.8, 2905.0], [58.9, 2908.0], [59.0, 2908.0], [59.1, 2915.0], [59.2, 2915.0], [59.3, 2922.0], [59.4, 2922.0], [59.5, 2923.0], [59.6, 2923.0], [59.7, 2927.0], [59.8, 2927.0], [59.9, 2939.0], [60.0, 2939.0], [60.1, 2941.0], [60.2, 2941.0], [60.3, 2944.0], [60.4, 2944.0], [60.5, 2947.0], [60.6, 2947.0], [60.7, 2952.0], [60.8, 2952.0], [60.9, 2954.0], [61.0, 2954.0], [61.1, 2957.0], [61.2, 2957.0], [61.3, 2958.0], [61.4, 2958.0], [61.5, 2961.0], [61.6, 2961.0], [61.7, 2966.0], [61.8, 2966.0], [61.9, 2966.0], [62.0, 2966.0], [62.1, 2967.0], [62.2, 2967.0], [62.3, 2968.0], [62.4, 2968.0], [62.5, 2971.0], [62.6, 2971.0], [62.7, 2971.0], [62.8, 2971.0], [62.9, 2974.0], [63.0, 2974.0], [63.1, 2976.0], [63.2, 2976.0], [63.3, 2978.0], [63.4, 2978.0], [63.5, 2980.0], [63.6, 2980.0], [63.7, 2980.0], [63.8, 2980.0], [63.9, 2983.0], [64.0, 2983.0], [64.1, 2984.0], [64.2, 2984.0], [64.3, 2985.0], [64.4, 2985.0], [64.5, 2987.0], [64.6, 2987.0], [64.7, 2990.0], [64.8, 2990.0], [64.9, 2990.0], [65.0, 2990.0], [65.1, 2991.0], [65.2, 2991.0], [65.3, 2991.0], [65.4, 2991.0], [65.5, 2994.0], [65.6, 2994.0], [65.7, 2995.0], [65.8, 2995.0], [65.9, 2998.0], [66.0, 2998.0], [66.1, 2999.0], [66.2, 2999.0], [66.3, 3002.0], [66.4, 3002.0], [66.5, 3008.0], [66.6, 3008.0], [66.7, 3010.0], [66.8, 3010.0], [66.9, 3012.0], [67.0, 3012.0], [67.1, 3013.0], [67.2, 3013.0], [67.3, 3015.0], [67.4, 3015.0], [67.5, 3020.0], [67.6, 3020.0], [67.7, 3024.0], [67.8, 3024.0], [67.9, 3027.0], [68.0, 3027.0], [68.1, 3029.0], [68.2, 3029.0], [68.3, 3031.0], [68.4, 3031.0], [68.5, 3032.0], [68.6, 3032.0], [68.7, 3035.0], [68.8, 3035.0], [68.9, 3036.0], [69.0, 3036.0], [69.1, 3048.0], [69.2, 3048.0], [69.3, 3063.0], [69.4, 3063.0], [69.5, 3064.0], [69.6, 3064.0], [69.7, 3066.0], [69.8, 3066.0], [69.9, 3072.0], [70.0, 3072.0], [70.1, 3072.0], [70.2, 3072.0], [70.3, 3072.0], [70.4, 3072.0], [70.5, 3072.0], [70.6, 3072.0], [70.7, 3076.0], [70.8, 3076.0], [70.9, 3078.0], [71.0, 3078.0], [71.1, 3080.0], [71.2, 3080.0], [71.3, 3081.0], [71.4, 3081.0], [71.5, 3082.0], [71.6, 3082.0], [71.7, 3085.0], [71.8, 3085.0], [71.9, 3096.0], [72.0, 3096.0], [72.1, 3102.0], [72.2, 3102.0], [72.3, 3103.0], [72.4, 3103.0], [72.5, 3106.0], [72.6, 3106.0], [72.7, 3108.0], [72.8, 3108.0], [72.9, 3110.0], [73.0, 3110.0], [73.1, 3110.0], [73.2, 3110.0], [73.3, 3121.0], [73.4, 3121.0], [73.5, 3136.0], [73.6, 3136.0], [73.7, 3137.0], [73.8, 3137.0], [73.9, 3143.0], [74.0, 3143.0], [74.1, 3154.0], [74.2, 3154.0], [74.3, 3159.0], [74.4, 3159.0], [74.5, 3160.0], [74.6, 3160.0], [74.7, 3165.0], [74.8, 3165.0], [74.9, 3169.0], [75.0, 3169.0], [75.1, 3171.0], [75.2, 3171.0], [75.3, 3175.0], [75.4, 3175.0], [75.5, 3188.0], [75.6, 3188.0], [75.7, 3216.0], [75.8, 3216.0], [75.9, 3219.0], [76.0, 3219.0], [76.1, 3226.0], [76.2, 3226.0], [76.3, 3237.0], [76.4, 3237.0], [76.5, 3245.0], [76.6, 3245.0], [76.7, 3264.0], [76.8, 3264.0], [76.9, 3277.0], [77.0, 3277.0], [77.1, 3287.0], [77.2, 3287.0], [77.3, 3291.0], [77.4, 3291.0], [77.5, 3305.0], [77.6, 3305.0], [77.7, 3419.0], [77.8, 3419.0], [77.9, 3438.0], [78.0, 3438.0], [78.1, 3479.0], [78.2, 3479.0], [78.3, 3498.0], [78.4, 3498.0], [78.5, 3514.0], [78.6, 3514.0], [78.7, 3521.0], [78.8, 3521.0], [78.9, 3526.0], [79.0, 3526.0], [79.1, 3547.0], [79.2, 3547.0], [79.3, 3548.0], [79.4, 3548.0], [79.5, 3552.0], [79.6, 3552.0], [79.7, 3563.0], [79.8, 3563.0], [79.9, 3577.0], [80.0, 3577.0], [80.1, 4890.0], [80.2, 4890.0], [80.3, 4932.0], [80.4, 4932.0], [80.5, 5011.0], [80.6, 5011.0], [80.7, 5012.0], [80.8, 5012.0], [80.9, 5014.0], [81.0, 5014.0], [81.1, 5027.0], [81.2, 5027.0], [81.3, 5032.0], [81.4, 5032.0], [81.5, 5041.0], [81.6, 5041.0], [81.7, 5086.0], [81.8, 5086.0], [81.9, 5099.0], [82.0, 5099.0], [82.1, 5110.0], [82.2, 5110.0], [82.3, 5116.0], [82.4, 5116.0], [82.5, 5127.0], [82.6, 5127.0], [82.7, 5129.0], [82.8, 5129.0], [82.9, 5132.0], [83.0, 5132.0], [83.1, 5132.0], [83.2, 5132.0], [83.3, 5132.0], [83.4, 5132.0], [83.5, 5133.0], [83.6, 5133.0], [83.7, 5133.0], [83.8, 5133.0], [83.9, 5133.0], [84.0, 5133.0], [84.1, 5134.0], [84.2, 5134.0], [84.3, 5135.0], [84.4, 5135.0], [84.5, 5136.0], [84.6, 5136.0], [84.7, 5177.0], [84.8, 5177.0], [84.9, 5179.0], [85.0, 5179.0], [85.1, 5182.0], [85.2, 5182.0], [85.3, 5187.0], [85.4, 5187.0], [85.5, 5189.0], [85.6, 5189.0], [85.7, 5197.0], [85.8, 5197.0], [85.9, 5202.0], [86.0, 5202.0], [86.1, 5207.0], [86.2, 5207.0], [86.3, 5213.0], [86.4, 5213.0], [86.5, 5221.0], [86.6, 5221.0], [86.7, 5221.0], [86.8, 5221.0], [86.9, 5222.0], [87.0, 5222.0], [87.1, 5222.0], [87.2, 5222.0], [87.3, 5244.0], [87.4, 5244.0], [87.5, 5246.0], [87.6, 5246.0], [87.7, 5248.0], [87.8, 5248.0], [87.9, 5265.0], [88.0, 5265.0], [88.1, 5274.0], [88.2, 5274.0], [88.3, 5276.0], [88.4, 5276.0], [88.5, 5278.0], [88.6, 5278.0], [88.7, 5289.0], [88.8, 5289.0], [88.9, 5291.0], [89.0, 5291.0], [89.1, 5296.0], [89.2, 5296.0], [89.3, 5298.0], [89.4, 5298.0], [89.5, 5300.0], [89.6, 5300.0], [89.7, 5303.0], [89.8, 5303.0], [89.9, 5304.0], [90.0, 5304.0], [90.1, 5307.0], [90.2, 5307.0], [90.3, 5310.0], [90.4, 5310.0], [90.5, 5310.0], [90.6, 5310.0], [90.7, 5312.0], [90.8, 5312.0], [90.9, 5320.0], [91.0, 5320.0], [91.1, 5321.0], [91.2, 5321.0], [91.3, 5331.0], [91.4, 5331.0], [91.5, 5334.0], [91.6, 5334.0], [91.7, 5336.0], [91.8, 5336.0], [91.9, 5339.0], [92.0, 5339.0], [92.1, 5353.0], [92.2, 5353.0], [92.3, 5359.0], [92.4, 5359.0], [92.5, 5369.0], [92.6, 5369.0], [92.7, 5379.0], [92.8, 5379.0], [92.9, 5389.0], [93.0, 5389.0], [93.1, 5395.0], [93.2, 5395.0], [93.3, 5395.0], [93.4, 5395.0], [93.5, 5399.0], [93.6, 5399.0], [93.7, 5423.0], [93.8, 5423.0], [93.9, 5885.0], [94.0, 5885.0], [94.1, 5886.0], [94.2, 5886.0], [94.3, 5886.0], [94.4, 5886.0], [94.5, 5965.0], [94.6, 5965.0], [94.7, 5996.0], [94.8, 5996.0], [94.9, 6019.0], [95.0, 6019.0], [95.1, 6059.0], [95.2, 6059.0], [95.3, 7988.0], [95.4, 7988.0], [95.5, 7991.0], [95.6, 7991.0], [95.7, 7996.0], [95.8, 7996.0], [95.9, 7998.0], [96.0, 7998.0], [96.1, 8002.0], [96.2, 8002.0], [96.3, 8015.0], [96.4, 8015.0], [96.5, 8015.0], [96.6, 8015.0], [96.7, 8019.0], [96.8, 8019.0], [96.9, 8081.0], [97.0, 8081.0], [97.1, 8086.0], [97.2, 8086.0], [97.3, 8095.0], [97.4, 8095.0], [97.5, 8097.0], [97.6, 8097.0], [97.7, 8104.0], [97.8, 8104.0], [97.9, 8105.0], [98.0, 8105.0], [98.1, 8107.0], [98.2, 8107.0], [98.3, 8120.0], [98.4, 8120.0], [98.5, 8125.0], [98.6, 8125.0], [98.7, 8133.0], [98.8, 8133.0], [98.9, 8134.0], [99.0, 8134.0], [99.1, 8141.0], [99.2, 8141.0], [99.3, 8177.0], [99.4, 8177.0], [99.5, 8179.0], [99.6, 8179.0], [99.7, 8184.0], [99.8, 8184.0], [99.9, 8184.0], [100.0, 8184.0]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 140.0, "series": [{"data": [[0.0, 140.0], [600.0, 5.0], [700.0, 6.0], [800.0, 8.0], [900.0, 12.0], [1000.0, 3.0], [1100.0, 3.0], [1400.0, 1.0], [1500.0, 2.0], [1600.0, 2.0], [2200.0, 1.0], [2600.0, 9.0], [2700.0, 7.0], [2800.0, 2.0], [2900.0, 5.0], [3000.0, 1.0], [3100.0, 10.0], [3200.0, 4.0], [3300.0, 6.0], [3400.0, 5.0], [3500.0, 4.0], [3600.0, 1.0], [3700.0, 6.0], [3900.0, 5.0], [4000.0, 2.0], [4100.0, 1.0], [4300.0, 1.0], [4600.0, 3.0], [4500.0, 3.0], [4400.0, 5.0], [4700.0, 1.0], [5100.0, 3.0], [5000.0, 4.0], [5300.0, 8.0], [5400.0, 1.0], [5600.0, 18.0], [5500.0, 10.0], [5800.0, 24.0], [5700.0, 11.0], [6000.0, 5.0], [5900.0, 3.0], [6100.0, 1.0], [6200.0, 6.0], [6300.0, 3.0], [6400.0, 6.0], [6600.0, 1.0], [6900.0, 1.0], [7100.0, 1.0], [7300.0, 13.0], [7200.0, 5.0], [7400.0, 2.0], [7600.0, 5.0], [7900.0, 8.0], [7800.0, 1.0], [8600.0, 5.0], [8900.0, 5.0], [8800.0, 3.0], [9200.0, 3.0], [9000.0, 2.0], [9700.0, 23.0], [9900.0, 8.0], [10100.0, 1.0], [10700.0, 8.0], [10800.0, 2.0], [100.0, 11.0], [27800.0, 3.0], [27900.0, 1.0], [28900.0, 4.0], [30200.0, 1.0], [30100.0, 3.0], [29900.0, 1.0], [200.0, 1.0], [300.0, 5.0], [400.0, 6.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[0.0, 1.0], [66700.0, 3.0], [67500.0, 9.0], [100.0, 5.0], [36500.0, 3.0], [36900.0, 2.0], [41500.0, 2.0], [42300.0, 2.0], [43900.0, 6.0], [44900.0, 4.0], [44500.0, 5.0], [44300.0, 3.0], [43100.0, 2.0], [44700.0, 5.0], [46700.0, 10.0], [47100.0, 3.0], [47900.0, 1.0], [47700.0, 3.0], [47500.0, 1.0], [50300.0, 1.0], [49500.0, 1.0], [53100.0, 23.0], [52300.0, 10.0], [52500.0, 2.0], [52700.0, 1.0], [51500.0, 2.0], [54100.0, 4.0], [53300.0, 1.0], [55100.0, 9.0], [53500.0, 1.0], [56700.0, 4.0], [56900.0, 1.0], [56100.0, 4.0], [59300.0, 7.0], [59100.0, 5.0], [58900.0, 3.0], [57700.0, 2.0], [57900.0, 1.0], [59700.0, 1.0], [59500.0, 1.0], [63100.0, 3.0], [62900.0, 1.0], [62100.0, 5.0], [62500.0, 1.0], [62300.0, 1.0], [64700.0, 1.0], [65300.0, 6.0], [64500.0, 1.0], [67400.0, 2.0], [67000.0, 3.0], [66600.0, 4.0], [66200.0, 1.0], [300.0, 2.0], [500.0, 3.0], [600.0, 1.0], [700.0, 1.0], [1000.0, 1.0], [1100.0, 2.0], [1200.0, 1.0], [1600.0, 2.0], [2000.0, 3.0], [2100.0, 1.0], [2200.0, 2.0], [2400.0, 2.0], [2500.0, 4.0], [2600.0, 1.0], [2800.0, 1.0], [3000.0, 6.0], [3100.0, 1.0], [3200.0, 1.0], [3800.0, 1.0], [4000.0, 3.0], [4200.0, 4.0], [67300.0, 2.0], [6800.0, 1.0], [8700.0, 2.0], [8600.0, 2.0], [11200.0, 1.0], [11300.0, 2.0], [11500.0, 3.0], [12100.0, 1.0], [14600.0, 2.0], [14800.0, 4.0], [14700.0, 3.0], [15100.0, 2.0], [17700.0, 2.0], [18000.0, 1.0], [18100.0, 1.0], [18200.0, 11.0], [17500.0, 4.0], [17600.0, 2.0], [18700.0, 1.0], [19400.0, 3.0], [19300.0, 1.0], [19000.0, 1.0], [20100.0, 4.0], [19600.0, 1.0], [20300.0, 1.0], [21400.0, 2.0], [21000.0, 15.0], [20900.0, 1.0], [21600.0, 1.0], [22300.0, 9.0], [21900.0, 2.0], [22100.0, 3.0], [21800.0, 2.0], [22500.0, 1.0], [22400.0, 1.0], [22200.0, 5.0], [23500.0, 2.0], [22600.0, 2.0], [22700.0, 4.0], [23200.0, 7.0], [23400.0, 3.0], [23100.0, 1.0], [23800.0, 2.0], [24600.0, 2.0], [24700.0, 2.0], [24800.0, 5.0], [25000.0, 4.0], [25200.0, 1.0], [25100.0, 1.0], [26500.0, 1.0], [26100.0, 1.0], [26700.0, 1.0], [27200.0, 1.0], [28500.0, 5.0], [28400.0, 4.0], [28700.0, 1.0], [30300.0, 2.0], [30700.0, 1.0], [30900.0, 5.0], [31000.0, 2.0], [31200.0, 1.0], [31100.0, 4.0], [36600.0, 5.0], [37000.0, 2.0], [38800.0, 1.0], [40400.0, 14.0], [44600.0, 7.0], [44400.0, 7.0], [43200.0, 2.0], [47000.0, 3.0], [47600.0, 3.0], [50000.0, 1.0], [52000.0, 6.0], [53000.0, 5.0], [52800.0, 1.0], [53200.0, 1.0], [51600.0, 3.0], [55000.0, 13.0], [56800.0, 1.0], [59000.0, 8.0], [59200.0, 6.0], [57800.0, 1.0], [61400.0, 1.0], [59400.0, 2.0], [63000.0, 1.0], [62000.0, 2.0], [61600.0, 2.0], [62200.0, 1.0], [65200.0, 3.0], [66800.0, 5.0], [67600.0, 1.0], [67200.0, 1.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[0.0, 7.0], [700.0, 1.0], [1100.0, 1.0], [1300.0, 3.0], [1400.0, 1.0], [1500.0, 3.0], [100.0, 126.0], [1600.0, 1.0], [1700.0, 3.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 9.0], [2300.0, 7.0], [2200.0, 8.0], [2400.0, 2.0], [2500.0, 12.0], [2600.0, 5.0], [2800.0, 22.0], [2700.0, 13.0], [2900.0, 38.0], [3000.0, 29.0], [3100.0, 18.0], [200.0, 66.0], [3300.0, 1.0], [3200.0, 9.0], [3400.0, 4.0], [3500.0, 8.0], [4800.0, 1.0], [4900.0, 1.0], [5100.0, 19.0], [5000.0, 8.0], [5300.0, 21.0], [5200.0, 18.0], [5400.0, 1.0], [5800.0, 3.0], [6000.0, 2.0], [5900.0, 2.0], [7900.0, 4.0], [8100.0, 12.0], [8000.0, 8.0]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 67600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 42.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1051.0, "series": [{"data": [[0.0, 362.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 45.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1051.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 42.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 52.43564356435645, "minX": 1.61133139E12, "maxY": 500.0, "series": [{"data": [[1.611331396E12, 499.8252427184466], [1.611331395E12, 500.0], [1.611331438E12, 264.0], [1.611331397E12, 496.0], [1.611331393E12, 500.0], [1.611331437E12, 270.7], [1.611331394E12, 500.0], [1.611331401E12, 475.0], [1.611331444E12, 139.25], [1.611331443E12, 199.77777777777777], [1.611331402E12, 469.76923076923083], [1.611331398E12, 494.258064516129], [1.6113314E12, 476.0], [1.611331399E12, 487.55913978494624], [1.611331442E12, 261.1666666666667], [1.611331406E12, 452.0], [1.611331408E12, 446.0], [1.611331407E12, 452.0], [1.61133145E12, 131.0], [1.611331403E12, 467.6617647058824], [1.611331405E12, 459.375], [1.611331447E12, 136.0], [1.611331412E12, 430.09999999999997], [1.611331413E12, 423.5], [1.611331455E12, 120.8], [1.611331409E12, 443.0], [1.611331453E12, 128.2], [1.61133141E12, 440.5], [1.611331417E12, 418.5], [1.611331418E12, 414.12500000000006], [1.611331457E12, 109.78571428571429], [1.611331414E12, 422.0], [1.611331416E12, 420.0], [1.611331458E12, 52.43564356435645], [1.611331422E12, 343.20000000000005], [1.611331424E12, 314.5625], [1.61133142E12, 408.0], [1.611331419E12, 409.0], [1.611331421E12, 376.38461538461536], [1.611331427E12, 294.3333333333333], [1.611331429E12, 287.0], [1.611331426E12, 299.92857142857144], [1.61133139E12, 232.48066298342536], [1.611331392E12, 500.0], [1.611331391E12, 500.0], [1.611331434E12, 280.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611331458E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 67.0, "minX": 13.0, "maxY": 67537.83333333334, "series": [{"data": [[222.0, 67.0], [226.0, 74.39999999999999], [227.0, 73.4], [228.0, 71.0], [229.0, 77.16666666666667], [230.0, 72.53846153846155], [233.0, 76.16666666666666], [234.0, 75.76923076923076], [232.0, 69.0], [235.0, 73.66666666666667], [239.0, 75.11111111111113], [240.0, 70.6], [243.0, 73.0], [246.0, 72.10000000000001], [247.0, 74.0], [248.0, 73.0], [253.0, 75.0], [254.0, 78.0], [255.0, 79.75], [264.0, 94.5], [266.0, 99.39999999999999], [268.0, 97.16666666666666], [272.0, 101.66666666666667], [290.0, 124.0], [301.0, 29571.875], [300.0, 28389.75], [299.0, 27944.0], [374.0, 300.0], [376.0, 300.0], [392.0, 327.0], [428.0, 389.0], [431.0, 387.0], [456.0, 430.0], [461.0, 8548.714285714284], [452.0, 9303.227272727272], [476.0, 4482.0952380952385], [470.0, 8724.555555555555], [469.0, 5013.0], [468.0, 8564.814814814814], [466.0, 8663.0], [465.0, 8331.8], [481.0, 444.0], [486.0, 480.0], [495.0, 5645.6], [494.0, 5299.681818181819], [490.0, 5505.694444444445], [485.0, 5397.051282051284], [500.0, 2179.6555555555547]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[405.1539999999998, 4338.897999999998]], "isOverall": false, "label": "GET /login-Aggregated", "isController": false}, {"data": [[13.0, 54207.153846153844], [15.0, 55088.0], [17.0, 55086.5], [20.0, 57323.0], [23.0, 56390.666666666664], [26.0, 56164.0], [28.0, 58012.5], [30.0, 59097.0], [34.0, 56904.75], [36.0, 53292.0], [41.0, 59073.0], [40.0, 55633.25], [43.0, 57216.5], [46.0, 55010.333333333336], [49.0, 60242.333333333336], [51.0, 59210.0], [53.0, 59200.0], [52.0, 59206.0], [55.0, 59340.0], [54.0, 59351.0], [57.0, 59325.0], [56.0, 59000.0], [59.0, 59527.0], [58.0, 59318.0], [61.0, 60586.5], [62.0, 59499.0], [67.0, 61822.333333333336], [64.0, 58345.5], [71.0, 62166.0], [70.0, 62172.0], [69.0, 60557.0], [74.0, 59167.0], [73.0, 59055.0], [78.0, 61397.25], [82.0, 61777.0], [80.0, 59356.5], [86.0, 66416.5], [84.0, 62112.5], [91.0, 66738.33333333333], [88.0, 66614.0], [94.0, 67011.66666666667], [97.0, 66944.33333333333], [102.0, 67531.0], [101.0, 67428.75], [111.0, 67501.0], [110.0, 67508.0], [108.0, 67537.83333333334], [115.0, 66824.0], [113.0, 66791.5], [118.0, 65306.0], [117.0, 65310.0], [116.0, 65321.0], [122.0, 65261.5], [120.0, 65310.5], [126.0, 62975.0], [125.0, 64780.0], [124.0, 65290.0], [131.0, 59757.0], [130.0, 63068.0], [129.0, 63171.0], [128.0, 63170.0], [142.0, 37928.0], [140.0, 54150.0], [139.0, 54149.0], [136.0, 56795.0], [149.0, 40476.333333333336], [146.0, 38743.5], [158.0, 41938.5], [156.0, 39299.666666666664], [153.0, 40468.0], [152.0, 41096.666666666664], [167.0, 44481.0], [164.0, 43219.333333333336], [161.0, 43515.0], [174.0, 42104.0], [169.0, 42445.0], [182.0, 44784.666666666664], [179.0, 44676.333333333336], [176.0, 44626.5], [191.0, 48345.0], [189.0, 47392.5], [187.0, 46054.5], [185.0, 44911.666666666664], [198.0, 45291.0], [195.0, 44399.0], [194.0, 43997.333333333336], [206.0, 46212.0], [203.0, 47462.333333333336], [200.0, 46092.0], [215.0, 51341.5], [213.0, 47660.5], [211.0, 47671.5], [209.0, 44709.666666666664], [221.0, 52343.5], [219.0, 52666.0], [217.0, 52361.0], [216.0, 52364.0], [231.0, 53002.0], [229.0, 52627.0], [226.0, 52331.5], [224.0, 52689.0], [239.0, 53165.5], [237.0, 53138.0], [236.0, 53173.0], [234.0, 53177.5], [232.0, 53184.0], [246.0, 53095.0], [244.0, 53153.5], [242.0, 53151.0], [241.0, 53165.0], [254.0, 53083.0], [253.0, 53103.0], [251.0, 53129.333333333336], [248.0, 53127.5], [270.0, 46722.666666666664], [267.0, 46728.0], [264.0, 47996.0], [263.0, 52012.666666666664], [260.0, 52011.0], [258.0, 52017.0], [257.0, 53090.0], [256.0, 53108.5], [287.0, 2759.714285714286], [280.0, 43930.166666666664], [274.0, 46721.75], [302.0, 17613.0], [301.0, 1634.0], [300.0, 77.0], [299.0, 36527.0], [298.0, 36586.0], [296.0, 36678.0], [295.0, 21834.142857142855], [288.0, 1253.0], [317.0, 21427.333333333332], [314.0, 21345.666666666668], [311.0, 20527.333333333332], [308.0, 18465.75], [304.0, 17601.0], [329.0, 26210.666666666668], [326.0, 24741.666666666668], [323.0, 23339.666666666668], [320.0, 21860.666666666668], [349.0, 31181.0], [347.0, 29483.624999999996], [339.0, 23302.5], [367.0, 18227.25], [363.0, 19643.0], [361.0, 15145.0], [360.0, 17207.666666666668], [357.0, 16505.75], [353.0, 18093.25], [382.0, 20995.0], [381.0, 22480.0], [379.0, 22399.0], [377.0, 22240.666666666668], [374.0, 21649.5], [372.0, 20780.0], [370.0, 20373.0], [399.0, 21847.0], [398.0, 30989.666666666668], [395.0, 30683.0], [392.0, 23980.666666666668], [389.0, 24884.5], [387.0, 24892.0], [386.0, 22756.0], [385.0, 22169.0], [415.0, 28505.666666666668], [412.0, 28487.0], [411.0, 28499.0], [409.0, 28766.0], [408.0, 25378.42857142857], [401.0, 22085.0], [419.0, 26747.0], [431.0, 22349.666666666668], [428.0, 22338.5], [426.0, 22339.5], [424.0, 23521.0], [423.0, 23530.0], [422.0, 22656.5], [420.0, 22783.0], [418.0, 27273.0], [417.0, 28510.5], [447.0, 17716.0], [445.0, 18094.0], [443.0, 18734.0], [442.0, 19949.666666666664], [436.0, 12095.0], [434.0, 21535.0], [432.0, 21430.0], [461.0, 10303.666666666666], [458.0, 14832.75], [454.0, 2237.5], [452.0, 2859.6], [476.0, 11323.0], [473.0, 11544.0], [470.0, 3103.0], [469.0, 12199.0], [468.0, 3281.6], [466.0, 4048.5], [495.0, 2148.0], [494.0, 8709.0], [493.0, 8701.333333333334], [490.0, 1968.6], [485.0, 896.5555555555555], [500.0, 804.0], [498.0, 924.5], [496.0, 6803.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[251.77599999999973, 38000.592000000004]], "isOverall": false, "label": "POST /graphql - Login-Aggregated", "isController": false}, {"data": [[183.0, 168.0], [188.0, 183.75], [189.0, 165.0], [191.0, 176.1904761904762], [194.0, 159.27777777777777], [198.0, 204.0], [200.0, 197.5], [201.0, 117.5], [203.0, 206.0909090909091], [204.0, 157.0], [205.0, 185.75], [208.0, 195.6], [209.0, 225.99999999999997], [210.0, 223.33333333333334], [212.0, 230.66666666666666], [213.0, 226.57142857142858], [214.0, 214.79999999999998], [216.0, 226.42857142857144], [219.0, 208.42857142857144], [220.0, 189.99999999999997], [221.0, 161.66666666666666], [222.0, 196.66666666666666], [226.0, 171.5], [227.0, 139.66666666666669], [229.0, 122.0], [230.0, 146.0], [233.0, 123.0], [239.0, 117.0], [240.0, 129.75], [246.0, 131.2], [247.0, 143.0], [248.0, 118.0], [255.0, 125.0], [264.0, 142.0], [266.0, 154.5], [268.0, 155.0], [272.0, 150.6], [494.0, 8086.499999999999], [500.0, 3400.851851851852], [498.0, 5956.571428571428]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[385.08400000000006, 2378.954000000002]], "isOverall": false, "label": "GET /-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 708.0, "minX": 1.61133139E12, "maxY": 1020886.0, "series": [{"data": [[1.611331396E12, 287214.0], [1.611331395E12, 68133.0], [1.611331438E12, 1453.0], [1.611331397E12, 1453.0], [1.611331393E12, 449348.0], [1.611331437E12, 14530.0], [1.611331394E12, 44066.0], [1.611331401E12, 15705.0], [1.611331444E12, 5812.0], [1.611331443E12, 170001.0], [1.611331402E12, 27560.0], [1.611331398E12, 165477.0], [1.6113314E12, 41922.0], [1.611331399E12, 176247.0], [1.611331442E12, 8718.0], [1.611331406E12, 51238.0], [1.611331408E12, 5812.0], [1.611331407E12, 2440.0], [1.61133145E12, 1453.0], [1.611331403E12, 141983.0], [1.611331405E12, 26485.0], [1.611331447E12, 7265.0], [1.611331412E12, 14530.0], [1.611331413E12, 2906.0], [1.611331455E12, 14530.0], [1.611331409E12, 1453.0], [1.611331453E12, 7265.0], [1.61133141E12, 10659.0], [1.611331417E12, 2906.0], [1.611331418E12, 11624.0], [1.611331457E12, 20342.0], [1.611331414E12, 2906.0], [1.611331416E12, 1453.0], [1.611331458E12, 146753.0], [1.611331422E12, 29060.0], [1.611331424E12, 49588.0], [1.61133142E12, 10171.0], [1.611331419E12, 1453.0], [1.611331421E12, 75556.0], [1.611331427E12, 13077.0], [1.611331429E12, 10171.0], [1.611331426E12, 26334.0], [1.61133139E12, 1020886.0], [1.611331392E12, 143466.0], [1.611331391E12, 113669.0], [1.611331434E12, 8718.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.611331396E12, 14699.0], [1.611331395E12, 2882.0], [1.611331438E12, 708.0], [1.611331397E12, 708.0], [1.611331393E12, 16540.0], [1.611331437E12, 7080.0], [1.611331394E12, 1662.0], [1.611331401E12, 4617.0], [1.611331444E12, 2832.0], [1.611331443E12, 82836.0], [1.611331402E12, 2769.0], [1.611331398E12, 8091.0], [1.6113314E12, 2214.0], [1.611331399E12, 21969.0], [1.611331442E12, 4248.0], [1.611331406E12, 2706.0], [1.611331408E12, 2832.0], [1.611331407E12, 3540.0], [1.61133145E12, 708.0], [1.611331403E12, 12459.0], [1.611331405E12, 7233.0], [1.611331447E12, 3540.0], [1.611331412E12, 7080.0], [1.611331413E12, 1416.0], [1.611331455E12, 7080.0], [1.611331409E12, 708.0], [1.611331453E12, 3540.0], [1.61133141E12, 5664.0], [1.611331417E12, 1416.0], [1.611331418E12, 5664.0], [1.611331457E12, 9912.0], [1.611331414E12, 1416.0], [1.611331416E12, 708.0], [1.611331458E12, 71508.0], [1.611331422E12, 14160.0], [1.611331424E12, 20316.0], [1.61133142E12, 4956.0], [1.611331419E12, 708.0], [1.611331421E12, 36816.0], [1.611331427E12, 6372.0], [1.611331429E12, 4956.0], [1.611331426E12, 4647.0], [1.61133139E12, 43531.0], [1.611331392E12, 5192.0], [1.611331391E12, 5613.0], [1.611331434E12, 4248.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611331458E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 101.63803680981599, "minX": 1.61133139E12, "maxY": 67321.85714285714, "series": [{"data": [[1.611331396E12, 3191.5135135135133], [1.611331395E12, 3496.2000000000003], [1.611331393E12, 1569.75], [1.611331394E12, 2471.0], [1.611331401E12, 2633.6666666666665], [1.611331424E12, 28986.75], [1.611331402E12, 8049.727272727273], [1.611331398E12, 5439.918918918919], [1.6113314E12, 4790.166666666667], [1.611331399E12, 5449.199999999999], [1.611331406E12, 9303.227272727272], [1.611331403E12, 8548.934426229507], [1.611331405E12, 8548.714285714284], [1.611331426E12, 29125.666666666664], [1.61133139E12, 101.63803680981599], [1.611331391E12, 862.162162162162]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.611331396E12, 864.25], [1.611331438E12, 47996.0], [1.611331397E12, 6803.0], [1.611331437E12, 46723.9], [1.611331401E12, 11433.5], [1.611331444E12, 54149.25], [1.611331443E12, 47168.21367521366], [1.611331402E12, 7651.0], [1.611331398E12, 2148.0], [1.611331399E12, 2929.1666666666665], [1.611331442E12, 52012.833333333336], [1.611331408E12, 17905.0], [1.611331407E12, 2859.6], [1.61133145E12, 59757.0], [1.611331403E12, 3500.714285714286], [1.611331405E12, 10524.11111111111], [1.611331447E12, 56795.0], [1.611331412E12, 22090.5], [1.611331413E12, 23525.5], [1.611331455E12, 65244.09999999999], [1.611331409E12, 18734.0], [1.611331453E12, 63110.8], [1.61133141E12, 17986.0], [1.611331417E12, 27010.0], [1.611331418E12, 28502.875], [1.611331457E12, 67321.85714285714], [1.611331414E12, 22656.5], [1.611331416E12, 22783.0], [1.611331458E12, 59337.425742574254], [1.611331422E12, 26562.8], [1.611331424E12, 21608.464285714286], [1.61133142E12, 25378.42857142857], [1.611331419E12, 28766.0], [1.611331421E12, 21686.788461538472], [1.611331427E12, 21196.666666666668], [1.611331429E12, 2759.714285714286], [1.611331426E12, 22282.0], [1.611331434E12, 43930.166666666664]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.611331396E12, 5328.306451612903], [1.611331395E12, 5098.5], [1.611331393E12, 2972.985294117647], [1.611331394E12, 3515.1666666666665], [1.61133139E12, 178.26633165829136], [1.611331392E12, 2261.090909090909], [1.611331391E12, 1355.111111111111], [1.611331398E12, 8086.499999999999]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611331458E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 101.60122699386497, "minX": 1.61133139E12, "maxY": 67321.85714285714, "series": [{"data": [[1.611331396E12, 3191.5135135135133], [1.611331395E12, 3496.1], [1.611331393E12, 1569.75], [1.611331394E12, 2471.0], [1.611331401E12, 2633.6666666666665], [1.611331424E12, 28986.75], [1.611331402E12, 8049.727272727273], [1.611331398E12, 5439.918918918919], [1.6113314E12, 4790.166666666667], [1.611331399E12, 5449.160000000002], [1.611331406E12, 9303.227272727272], [1.611331403E12, 8548.918032786885], [1.611331405E12, 8548.714285714284], [1.611331426E12, 29125.666666666664], [1.61133139E12, 101.60122699386497], [1.611331391E12, 862.162162162162]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.611331396E12, 864.25], [1.611331438E12, 47996.0], [1.611331397E12, 6803.0], [1.611331437E12, 46723.9], [1.611331401E12, 11433.5], [1.611331444E12, 54149.25], [1.611331443E12, 47168.21367521366], [1.611331402E12, 7651.0], [1.611331398E12, 2148.0], [1.611331399E12, 2929.1666666666665], [1.611331442E12, 52012.833333333336], [1.611331408E12, 17905.0], [1.611331407E12, 2859.6], [1.61133145E12, 59757.0], [1.611331403E12, 3500.714285714286], [1.611331405E12, 10524.11111111111], [1.611331447E12, 56795.0], [1.611331412E12, 22090.399999999998], [1.611331413E12, 23525.5], [1.611331455E12, 65244.09999999999], [1.611331409E12, 18734.0], [1.611331453E12, 63110.8], [1.61133141E12, 17986.0], [1.611331417E12, 27010.0], [1.611331418E12, 28502.5], [1.611331457E12, 67321.85714285714], [1.611331414E12, 22656.5], [1.611331416E12, 22783.0], [1.611331458E12, 59337.425742574254], [1.611331422E12, 26562.8], [1.611331424E12, 21608.464285714286], [1.61133142E12, 25378.285714285714], [1.611331419E12, 28766.0], [1.611331421E12, 21686.788461538472], [1.611331427E12, 21196.666666666668], [1.611331429E12, 2759.714285714286], [1.611331426E12, 22282.0], [1.611331434E12, 43930.166666666664]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.611331396E12, 5328.306451612903], [1.611331395E12, 5098.5], [1.611331393E12, 2972.9779411764703], [1.611331394E12, 3515.1666666666665], [1.61133139E12, 178.00000000000003], [1.611331392E12, 2261.090909090909], [1.611331391E12, 1355.111111111111], [1.611331398E12, 8086.374999999999]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611331458E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61133139E12, "maxY": 71.89949748743724, "series": [{"data": [[1.611331396E12, 0.0], [1.611331395E12, 0.0], [1.611331393E12, 0.0], [1.611331394E12, 0.0], [1.611331401E12, 0.0], [1.611331424E12, 0.0], [1.611331402E12, 0.0], [1.611331398E12, 0.0], [1.6113314E12, 0.0], [1.611331399E12, 0.0], [1.611331406E12, 0.0], [1.611331403E12, 0.0], [1.611331405E12, 0.0], [1.611331426E12, 0.0], [1.61133139E12, 0.0], [1.611331391E12, 0.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.611331396E12, 0.0], [1.611331438E12, 0.0], [1.611331397E12, 0.0], [1.611331437E12, 0.0], [1.611331401E12, 0.0], [1.611331444E12, 0.0], [1.611331443E12, 0.0], [1.611331402E12, 0.0], [1.611331398E12, 0.0], [1.611331399E12, 0.0], [1.611331442E12, 0.0], [1.611331408E12, 0.0], [1.611331407E12, 0.0], [1.61133145E12, 0.0], [1.611331403E12, 0.0], [1.611331405E12, 0.0], [1.611331447E12, 0.0], [1.611331412E12, 0.0], [1.611331413E12, 0.0], [1.611331455E12, 0.0], [1.611331409E12, 0.0], [1.611331453E12, 0.0], [1.61133141E12, 0.0], [1.611331417E12, 0.0], [1.611331418E12, 0.0], [1.611331457E12, 0.0], [1.611331414E12, 0.0], [1.611331416E12, 0.0], [1.611331458E12, 0.0], [1.611331422E12, 0.0], [1.611331424E12, 0.0], [1.61133142E12, 0.0], [1.611331419E12, 0.0], [1.611331421E12, 0.0], [1.611331427E12, 0.0], [1.611331429E12, 0.0], [1.611331426E12, 0.0], [1.611331434E12, 0.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.611331396E12, 32.70967741935483], [1.611331395E12, 31.500000000000004], [1.611331393E12, 49.566176470588225], [1.611331394E12, 30.166666666666668], [1.61133139E12, 71.89949748743724], [1.611331392E12, 59.40909090909089], [1.611331391E12, 54.333333333333336], [1.611331398E12, 35.791666666666664]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611331458E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 60.0, "minX": 1.61133139E12, "maxY": 67620.0, "series": [{"data": [[1.611331396E12, 6059.0], [1.611331395E12, 5310.0], [1.611331438E12, 47996.0], [1.611331397E12, 6803.0], [1.611331393E12, 3305.0], [1.611331437E12, 46731.0], [1.611331394E12, 3577.0], [1.611331401E12, 11553.0], [1.611331444E12, 54153.0], [1.611331443E12, 53229.0], [1.611331402E12, 12199.0], [1.611331398E12, 8184.0], [1.6113314E12, 7101.0], [1.611331399E12, 8710.0], [1.611331442E12, 52021.0], [1.611331406E12, 10866.0], [1.611331408E12, 18101.0], [1.61133145E12, 59757.0], [1.611331403E12, 9947.0], [1.611331405E12, 14841.0], [1.611331447E12, 56827.0], [1.611331412E12, 22357.0], [1.611331413E12, 23530.0], [1.611331455E12, 65321.0], [1.611331409E12, 18734.0], [1.611331453E12, 63173.0], [1.61133141E12, 20308.0], [1.611331417E12, 27273.0], [1.611331418E12, 28515.0], [1.611331457E12, 67589.0], [1.611331414E12, 22657.0], [1.611331416E12, 22783.0], [1.611331458E12, 67620.0], [1.611331422E12, 31231.0], [1.611331424E12, 28988.0], [1.61133142E12, 30314.0], [1.611331419E12, 28766.0], [1.611331421E12, 31001.0], [1.611331427E12, 36678.0], [1.611331429E12, 3078.0], [1.611331426E12, 36589.0], [1.61133139E12, 487.0], [1.611331392E12, 2610.0], [1.611331391E12, 1592.0], [1.611331434E12, 43945.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.611331396E12, 5395.4], [1.611331395E12, 5305.0], [1.611331438E12, 47996.0], [1.611331397E12, 6803.0], [1.611331393E12, 3168.6], [1.611331437E12, 46730.6], [1.611331394E12, 3570.0], [1.611331401E12, 11553.0], [1.611331444E12, 54153.0], [1.611331443E12, 53158.4], [1.611331402E12, 11217.700000000004], [1.611331398E12, 8133.8], [1.6113314E12, 6922.8], [1.611331399E12, 6424.0], [1.611331442E12, 52021.0], [1.611331406E12, 10835.7], [1.611331408E12, 18101.0], [1.61133145E12, 59757.0], [1.611331403E12, 9910.0], [1.611331405E12, 14838.2], [1.611331447E12, 56827.0], [1.611331412E12, 22356.4], [1.611331413E12, 23530.0], [1.611331455E12, 65320.1], [1.611331409E12, 18734.0], [1.611331453E12, 63173.0], [1.61133141E12, 20308.0], [1.611331417E12, 27273.0], [1.611331418E12, 28515.0], [1.611331457E12, 67579.0], [1.611331414E12, 22657.0], [1.611331416E12, 22783.0], [1.611331458E12, 66799.6], [1.611331422E12, 31176.9], [1.611331424E12, 28986.0], [1.61133142E12, 30314.0], [1.611331419E12, 28766.0], [1.611331421E12, 30626.100000000002], [1.611331427E12, 36678.0], [1.611331429E12, 3078.0], [1.611331426E12, 36586.6], [1.61133139E12, 231.0], [1.611331392E12, 2578.0], [1.611331391E12, 1422.5000000000005], [1.611331434E12, 43945.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.611331396E12, 6059.0], [1.611331395E12, 5310.0], [1.611331438E12, 47996.0], [1.611331397E12, 6803.0], [1.611331393E12, 3299.26], [1.611331437E12, 46731.0], [1.611331394E12, 3577.0], [1.611331401E12, 11553.0], [1.611331444E12, 54153.0], [1.611331443E12, 53220.9], [1.611331402E12, 12199.0], [1.611331398E12, 8184.0], [1.6113314E12, 7101.0], [1.611331399E12, 8710.0], [1.611331442E12, 52021.0], [1.611331406E12, 10866.0], [1.611331408E12, 18101.0], [1.61133145E12, 59757.0], [1.611331403E12, 9947.0], [1.611331405E12, 14841.0], [1.611331447E12, 56827.0], [1.611331412E12, 22357.0], [1.611331413E12, 23530.0], [1.611331455E12, 65321.0], [1.611331409E12, 18734.0], [1.611331453E12, 63173.0], [1.61133141E12, 20308.0], [1.611331417E12, 27273.0], [1.611331418E12, 28515.0], [1.611331457E12, 67589.0], [1.611331414E12, 22657.0], [1.611331416E12, 22783.0], [1.611331458E12, 67615.86], [1.611331422E12, 31231.0], [1.611331424E12, 28988.0], [1.61133142E12, 30314.0], [1.611331419E12, 28766.0], [1.611331421E12, 31001.0], [1.611331427E12, 36678.0], [1.611331429E12, 3078.0], [1.611331426E12, 36589.0], [1.61133139E12, 444.8000000000002], [1.611331392E12, 2610.0], [1.611331391E12, 1592.0], [1.611331434E12, 43945.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.611331396E12, 5889.95], [1.611331395E12, 5309.25], [1.611331438E12, 47996.0], [1.611331397E12, 6803.0], [1.611331393E12, 3236.45], [1.611331437E12, 46731.0], [1.611331394E12, 3577.0], [1.611331401E12, 11553.0], [1.611331444E12, 54153.0], [1.611331443E12, 53178.1], [1.611331402E12, 12199.0], [1.611331398E12, 8178.8], [1.6113314E12, 7101.0], [1.611331399E12, 8696.4], [1.611331442E12, 52021.0], [1.611331406E12, 10864.65], [1.611331408E12, 18101.0], [1.61133145E12, 59757.0], [1.611331403E12, 9937.6], [1.611331405E12, 14841.0], [1.611331447E12, 56827.0], [1.611331412E12, 22357.0], [1.611331413E12, 23530.0], [1.611331455E12, 65321.0], [1.611331409E12, 18734.0], [1.611331453E12, 63173.0], [1.61133141E12, 20308.0], [1.611331417E12, 27273.0], [1.611331418E12, 28515.0], [1.611331457E12, 67589.0], [1.611331414E12, 22657.0], [1.611331416E12, 22783.0], [1.611331458E12, 67237.9], [1.611331422E12, 31228.3], [1.611331424E12, 28987.35], [1.61133142E12, 30314.0], [1.611331419E12, 28766.0], [1.611331421E12, 30979.2], [1.611331427E12, 36678.0], [1.611331429E12, 3078.0], [1.611331426E12, 36589.0], [1.61133139E12, 239.84999999999997], [1.611331392E12, 2604.5], [1.611331391E12, 1530.75], [1.611331434E12, 43945.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.611331396E12, 2607.0], [1.611331395E12, 2857.0], [1.611331438E12, 47996.0], [1.611331397E12, 6803.0], [1.611331393E12, 1418.0], [1.611331437E12, 46719.0], [1.611331394E12, 2231.0], [1.611331401E12, 2629.0], [1.611331444E12, 54142.0], [1.611331443E12, 36969.0], [1.611331402E12, 3557.0], [1.611331398E12, 2881.0], [1.6113314E12, 1634.0], [1.611331399E12, 3328.0], [1.611331442E12, 52006.0], [1.611331406E12, 7460.0], [1.611331408E12, 17709.0], [1.61133145E12, 59757.0], [1.611331403E12, 4383.0], [1.611331405E12, 6133.0], [1.611331447E12, 56764.0], [1.611331412E12, 21430.0], [1.611331413E12, 23521.0], [1.611331455E12, 64780.0], [1.611331409E12, 18734.0], [1.611331453E12, 62975.0], [1.61133141E12, 19471.0], [1.611331417E12, 26747.0], [1.611331418E12, 28487.0], [1.611331457E12, 66769.0], [1.611331414E12, 22656.0], [1.611331416E12, 22783.0], [1.611331458E12, 51550.0], [1.611331422E12, 23100.0], [1.611331424E12, 17591.0], [1.61133142E12, 21943.0], [1.611331419E12, 28766.0], [1.611331421E12, 14756.0], [1.611331427E12, 1253.0], [1.611331429E12, 2481.0], [1.611331426E12, 1634.0], [1.61133139E12, 60.0], [1.611331392E12, 1613.0], [1.611331391E12, 621.0], [1.611331434E12, 43924.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.611331396E12, 5156.5], [1.611331395E12, 4971.5], [1.611331438E12, 47996.0], [1.611331397E12, 6803.0], [1.611331393E12, 2980.0], [1.611331437E12, 46723.5], [1.611331394E12, 3517.5], [1.611331401E12, 11338.0], [1.611331444E12, 54151.0], [1.611331443E12, 47055.0], [1.611331402E12, 8633.5], [1.611331398E12, 6054.0], [1.6113314E12, 4544.0], [1.611331399E12, 5710.0], [1.611331442E12, 52012.5], [1.611331406E12, 9044.0], [1.611331408E12, 17905.0], [1.61133145E12, 59757.0], [1.611331403E12, 9722.0], [1.611331405E12, 9004.0], [1.611331447E12, 56793.0], [1.611331412E12, 22339.5], [1.611331413E12, 23525.5], [1.611331455E12, 65305.0], [1.611331409E12, 18734.0], [1.611331453E12, 63167.0], [1.61133141E12, 20147.0], [1.611331417E12, 27010.0], [1.611331418E12, 28506.0], [1.611331457E12, 67508.0], [1.611331414E12, 22656.5], [1.611331416E12, 22783.0], [1.611331458E12, 59105.0], [1.611331422E12, 23440.5], [1.611331424E12, 21074.5], [1.61133142E12, 24774.0], [1.611331419E12, 28766.0], [1.611331421E12, 21921.0], [1.611331427E12, 36667.0], [1.611331429E12, 2560.0], [1.611331426E12, 30135.0], [1.61133139E12, 125.0], [1.611331392E12, 2255.0], [1.611331391E12, 905.5], [1.611331434E12, 43927.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611331458E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 77.0, "minX": 1.0, "maxY": 59901.0, "series": [{"data": [[2.0, 23525.5], [32.0, 21074.5], [44.0, 2255.0], [46.0, 905.5], [52.0, 21921.0], [62.0, 6054.0], [4.0, 36121.5], [68.0, 9722.0], [5.0, 59901.0], [93.0, 5710.0], [6.0, 47975.5], [103.0, 5156.5], [101.0, 59105.0], [7.0, 12510.5], [117.0, 47055.0], [8.0, 28487.0], [140.0, 2980.0], [9.0, 11344.0], [10.0, 46723.5], [13.0, 8633.5], [14.0, 30135.0], [1.0, 25774.5], [16.0, 9004.0], [18.0, 4544.0], [20.0, 23440.5], [362.0, 125.0], [22.0, 9044.0], [24.0, 4971.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 2237.0], [8.0, 3882.0], [68.0, 4049.0], [5.0, 2577.0], [93.0, 1622.0], [103.0, 1048.0], [13.0, 3103.0], [14.0, 77.0], [62.0, 2148.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 362.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 77.0, "minX": 1.0, "maxY": 59901.0, "series": [{"data": [[2.0, 23525.5], [32.0, 21074.5], [44.0, 2255.0], [46.0, 905.5], [52.0, 21921.0], [62.0, 6054.0], [4.0, 36121.5], [68.0, 9722.0], [5.0, 59901.0], [93.0, 5710.0], [6.0, 47975.5], [103.0, 5156.5], [101.0, 59105.0], [7.0, 12510.0], [117.0, 47055.0], [8.0, 28487.0], [140.0, 2980.0], [9.0, 11344.0], [10.0, 46723.5], [13.0, 8633.5], [14.0, 30135.0], [1.0, 25774.5], [16.0, 9004.0], [18.0, 4544.0], [20.0, 23440.5], [362.0, 125.0], [22.0, 9044.0], [24.0, 4971.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 2237.0], [8.0, 3882.0], [68.0, 4049.0], [5.0, 2577.0], [93.0, 1622.0], [103.0, 1048.0], [13.0, 3103.0], [14.0, 77.0], [62.0, 2148.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 362.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.61133139E12, "maxY": 862.0, "series": [{"data": [[1.611331396E12, 103.0], [1.611331395E12, 20.0], [1.611331393E12, 140.0], [1.611331394E12, 14.0], [1.611331401E12, 3.0], [1.611331424E12, 4.0], [1.611331402E12, 11.0], [1.611331398E12, 61.0], [1.6113314E12, 18.0], [1.611331399E12, 75.0], [1.611331406E12, 22.0], [1.611331403E12, 61.0], [1.611331405E12, 7.0], [1.611331426E12, 9.0], [1.61133139E12, 862.0], [1.611331392E12, 44.0], [1.611331391E12, 46.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611331426E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.61133139E12, "maxY": 362.0, "series": [{"data": [[1.611331396E12, 98.0], [1.611331395E12, 24.0], [1.611331438E12, 1.0], [1.611331397E12, 1.0], [1.611331393E12, 140.0], [1.611331437E12, 10.0], [1.611331394E12, 14.0], [1.611331401E12, 9.0], [1.611331444E12, 4.0], [1.611331443E12, 117.0], [1.611331402E12, 12.0], [1.611331398E12, 61.0], [1.6113314E12, 18.0], [1.611331399E12, 75.0], [1.611331442E12, 6.0], [1.611331406E12, 22.0], [1.611331408E12, 4.0], [1.61133145E12, 1.0], [1.611331403E12, 61.0], [1.611331405E12, 13.0], [1.611331447E12, 5.0], [1.611331412E12, 10.0], [1.611331413E12, 2.0], [1.611331455E12, 10.0], [1.611331409E12, 1.0], [1.611331453E12, 5.0], [1.61133141E12, 7.0], [1.611331417E12, 2.0], [1.611331418E12, 8.0], [1.611331457E12, 14.0], [1.611331414E12, 2.0], [1.611331416E12, 1.0], [1.611331458E12, 101.0], [1.611331422E12, 20.0], [1.611331424E12, 32.0], [1.61133142E12, 7.0], [1.611331419E12, 1.0], [1.611331421E12, 52.0], [1.611331427E12, 9.0], [1.611331429E12, 7.0], [1.611331426E12, 13.0], [1.61133139E12, 362.0], [1.611331392E12, 44.0], [1.611331391E12, 46.0], [1.611331434E12, 6.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.611331396E12, 5.0], [1.611331407E12, 5.0], [1.611331403E12, 7.0], [1.611331405E12, 3.0], [1.611331426E12, 1.0], [1.611331402E12, 1.0], [1.611331398E12, 1.0], [1.611331399E12, 18.0], [1.61133141E12, 1.0]], "isOverall": false, "label": "502", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611331458E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.61133139E12, "maxY": 199.0, "series": [{"data": [[1.611331396E12, 62.0], [1.611331395E12, 14.0], [1.611331393E12, 136.0], [1.611331394E12, 12.0], [1.61133139E12, 199.0], [1.611331392E12, 44.0], [1.611331391E12, 9.0], [1.611331398E12, 24.0]], "isOverall": false, "label": "GET /-success", "isController": false}, {"data": [[1.611331396E12, 4.0], [1.611331407E12, 5.0], [1.611331403E12, 7.0], [1.611331405E12, 3.0], [1.611331426E12, 1.0], [1.611331402E12, 1.0], [1.611331398E12, 1.0], [1.611331399E12, 14.0], [1.61133141E12, 1.0]], "isOverall": false, "label": "POST /graphql - Login-failure", "isController": false}, {"data": [[1.611331438E12, 1.0], [1.611331397E12, 1.0], [1.611331437E12, 10.0], [1.611331401E12, 6.0], [1.611331444E12, 4.0], [1.611331443E12, 117.0], [1.611331402E12, 1.0], [1.611331399E12, 4.0], [1.611331442E12, 6.0], [1.611331408E12, 4.0], [1.61133145E12, 1.0], [1.611331405E12, 6.0], [1.611331447E12, 5.0], [1.611331412E12, 10.0], [1.611331413E12, 2.0], [1.611331455E12, 10.0], [1.611331409E12, 1.0], [1.611331453E12, 5.0], [1.61133141E12, 7.0], [1.611331417E12, 2.0], [1.611331418E12, 8.0], [1.611331457E12, 14.0], [1.611331414E12, 2.0], [1.611331416E12, 1.0], [1.611331458E12, 101.0], [1.611331422E12, 20.0], [1.611331424E12, 28.0], [1.61133142E12, 7.0], [1.611331419E12, 1.0], [1.611331421E12, 52.0], [1.611331427E12, 9.0], [1.611331429E12, 7.0], [1.611331426E12, 4.0], [1.611331434E12, 6.0]], "isOverall": false, "label": "POST /graphql - Login-success", "isController": false}, {"data": [[1.611331396E12, 36.0], [1.611331395E12, 10.0], [1.611331393E12, 4.0], [1.611331394E12, 2.0], [1.611331401E12, 3.0], [1.611331424E12, 4.0], [1.611331402E12, 11.0], [1.611331398E12, 37.0], [1.6113314E12, 18.0], [1.611331399E12, 71.0], [1.611331406E12, 22.0], [1.611331403E12, 61.0], [1.611331405E12, 7.0], [1.611331426E12, 9.0], [1.61133139E12, 163.0], [1.611331391E12, 37.0]], "isOverall": false, "label": "GET /login-success", "isController": false}, {"data": [[1.611331396E12, 1.0], [1.611331399E12, 4.0]], "isOverall": false, "label": "GET /login-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611331458E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.61133139E12, "maxY": 362.0, "series": [{"data": [[1.611331396E12, 98.0], [1.611331395E12, 24.0], [1.611331438E12, 1.0], [1.611331397E12, 1.0], [1.611331393E12, 140.0], [1.611331437E12, 10.0], [1.611331394E12, 14.0], [1.611331401E12, 9.0], [1.611331444E12, 4.0], [1.611331443E12, 117.0], [1.611331402E12, 12.0], [1.611331398E12, 61.0], [1.6113314E12, 18.0], [1.611331399E12, 75.0], [1.611331442E12, 6.0], [1.611331406E12, 22.0], [1.611331408E12, 4.0], [1.61133145E12, 1.0], [1.611331403E12, 61.0], [1.611331405E12, 13.0], [1.611331447E12, 5.0], [1.611331412E12, 10.0], [1.611331413E12, 2.0], [1.611331455E12, 10.0], [1.611331409E12, 1.0], [1.611331453E12, 5.0], [1.61133141E12, 7.0], [1.611331417E12, 2.0], [1.611331418E12, 8.0], [1.611331457E12, 14.0], [1.611331414E12, 2.0], [1.611331416E12, 1.0], [1.611331458E12, 101.0], [1.611331422E12, 20.0], [1.611331424E12, 32.0], [1.61133142E12, 7.0], [1.611331419E12, 1.0], [1.611331421E12, 52.0], [1.611331427E12, 9.0], [1.611331429E12, 7.0], [1.611331426E12, 13.0], [1.61133139E12, 362.0], [1.611331392E12, 44.0], [1.611331391E12, 46.0], [1.611331434E12, 6.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.611331396E12, 5.0], [1.611331407E12, 5.0], [1.611331403E12, 7.0], [1.611331405E12, 3.0], [1.611331426E12, 1.0], [1.611331402E12, 1.0], [1.611331398E12, 1.0], [1.611331399E12, 18.0], [1.61133141E12, 1.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611331458E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

