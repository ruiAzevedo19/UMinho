/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 52.0, "minX": 0.0, "maxY": 52005.0, "series": [{"data": [[0.0, 52.0], [0.1, 52.0], [0.2, 52.0], [0.3, 54.0], [0.4, 54.0], [0.5, 54.0], [0.6, 54.0], [0.7, 54.0], [0.8, 54.0], [0.9, 54.0], [1.0, 54.0], [1.1, 54.0], [1.2, 54.0], [1.3, 55.0], [1.4, 55.0], [1.5, 55.0], [1.6, 55.0], [1.7, 55.0], [1.8, 55.0], [1.9, 55.0], [2.0, 55.0], [2.1, 55.0], [2.2, 55.0], [2.3, 55.0], [2.4, 55.0], [2.5, 55.0], [2.6, 55.0], [2.7, 55.0], [2.8, 55.0], [2.9, 55.0], [3.0, 55.0], [3.1, 55.0], [3.2, 55.0], [3.3, 55.0], [3.4, 55.0], [3.5, 55.0], [3.6, 55.0], [3.7, 55.0], [3.8, 55.0], [3.9, 55.0], [4.0, 56.0], [4.1, 56.0], [4.2, 56.0], [4.3, 60.0], [4.4, 60.0], [4.5, 60.0], [4.6, 60.0], [4.7, 60.0], [4.8, 63.0], [4.9, 63.0], [5.0, 64.0], [5.1, 64.0], [5.2, 64.0], [5.3, 65.0], [5.4, 65.0], [5.5, 65.0], [5.6, 65.0], [5.7, 65.0], [5.8, 65.0], [5.9, 65.0], [6.0, 65.0], [6.1, 65.0], [6.2, 65.0], [6.3, 65.0], [6.4, 65.0], [6.5, 65.0], [6.6, 65.0], [6.7, 65.0], [6.8, 66.0], [6.9, 66.0], [7.0, 66.0], [7.1, 66.0], [7.2, 66.0], [7.3, 66.0], [7.4, 66.0], [7.5, 67.0], [7.6, 67.0], [7.7, 67.0], [7.8, 67.0], [7.9, 67.0], [8.0, 68.0], [8.1, 68.0], [8.2, 68.0], [8.3, 68.0], [8.4, 68.0], [8.5, 68.0], [8.6, 68.0], [8.7, 68.0], [8.8, 68.0], [8.9, 68.0], [9.0, 70.0], [9.1, 70.0], [9.2, 70.0], [9.3, 70.0], [9.4, 70.0], [9.5, 70.0], [9.6, 70.0], [9.7, 70.0], [9.8, 71.0], [9.9, 71.0], [10.0, 71.0], [10.1, 71.0], [10.2, 71.0], [10.3, 71.0], [10.4, 71.0], [10.5, 71.0], [10.6, 71.0], [10.7, 71.0], [10.8, 71.0], [10.9, 71.0], [11.0, 71.0], [11.1, 71.0], [11.2, 71.0], [11.3, 71.0], [11.4, 71.0], [11.5, 71.0], [11.6, 71.0], [11.7, 71.0], [11.8, 72.0], [11.9, 72.0], [12.0, 73.0], [12.1, 73.0], [12.2, 73.0], [12.3, 73.0], [12.4, 73.0], [12.5, 74.0], [12.6, 74.0], [12.7, 74.0], [12.8, 74.0], [12.9, 74.0], [13.0, 78.0], [13.1, 78.0], [13.2, 78.0], [13.3, 79.0], [13.4, 79.0], [13.5, 79.0], [13.6, 79.0], [13.7, 79.0], [13.8, 79.0], [13.9, 79.0], [14.0, 79.0], [14.1, 79.0], [14.2, 79.0], [14.3, 81.0], [14.4, 81.0], [14.5, 81.0], [14.6, 81.0], [14.7, 81.0], [14.8, 81.0], [14.9, 81.0], [15.0, 82.0], [15.1, 82.0], [15.2, 82.0], [15.3, 82.0], [15.4, 82.0], [15.5, 83.0], [15.6, 83.0], [15.7, 83.0], [15.8, 83.0], [15.9, 83.0], [16.0, 83.0], [16.1, 83.0], [16.2, 83.0], [16.3, 83.0], [16.4, 83.0], [16.5, 86.0], [16.6, 86.0], [16.7, 86.0], [16.8, 86.0], [16.9, 86.0], [17.0, 86.0], [17.1, 86.0], [17.2, 86.0], [17.3, 87.0], [17.4, 87.0], [17.5, 88.0], [17.6, 88.0], [17.7, 88.0], [17.8, 88.0], [17.9, 88.0], [18.0, 88.0], [18.1, 88.0], [18.2, 88.0], [18.3, 89.0], [18.4, 89.0], [18.5, 89.0], [18.6, 89.0], [18.7, 89.0], [18.8, 90.0], [18.9, 90.0], [19.0, 90.0], [19.1, 90.0], [19.2, 90.0], [19.3, 91.0], [19.4, 91.0], [19.5, 91.0], [19.6, 91.0], [19.7, 91.0], [19.8, 91.0], [19.9, 91.0], [20.0, 91.0], [20.1, 91.0], [20.2, 91.0], [20.3, 91.0], [20.4, 91.0], [20.5, 92.0], [20.6, 92.0], [20.7, 92.0], [20.8, 93.0], [20.9, 93.0], [21.0, 93.0], [21.1, 93.0], [21.2, 93.0], [21.3, 93.0], [21.4, 93.0], [21.5, 94.0], [21.6, 94.0], [21.7, 94.0], [21.8, 175.0], [21.9, 175.0], [22.0, 175.0], [22.1, 175.0], [22.2, 175.0], [22.3, 175.0], [22.4, 175.0], [22.5, 176.0], [22.6, 176.0], [22.7, 176.0], [22.8, 177.0], [22.9, 177.0], [23.0, 182.0], [23.1, 182.0], [23.2, 182.0], [23.3, 185.0], [23.4, 185.0], [23.5, 185.0], [23.6, 185.0], [23.7, 185.0], [23.8, 187.0], [23.9, 187.0], [24.0, 188.0], [24.1, 188.0], [24.2, 188.0], [24.3, 188.0], [24.4, 188.0], [24.5, 272.0], [24.6, 272.0], [24.7, 272.0], [24.8, 278.0], [24.9, 278.0], [25.0, 278.0], [25.1, 278.0], [25.2, 278.0], [25.3, 290.0], [25.4, 290.0], [25.5, 405.0], [25.6, 405.0], [25.7, 405.0], [25.8, 409.0], [25.9, 409.0], [26.0, 410.0], [26.1, 410.0], [26.2, 410.0], [26.3, 526.0], [26.4, 526.0], [26.5, 527.0], [26.6, 527.0], [26.7, 527.0], [26.8, 528.0], [26.9, 528.0], [27.0, 528.0], [27.1, 528.0], [27.2, 528.0], [27.3, 529.0], [27.4, 529.0], [27.5, 529.0], [27.6, 529.0], [27.7, 529.0], [27.8, 529.0], [27.9, 529.0], [28.0, 529.0], [28.1, 529.0], [28.2, 529.0], [28.3, 529.0], [28.4, 529.0], [28.5, 535.0], [28.6, 535.0], [28.7, 535.0], [28.8, 537.0], [28.9, 537.0], [29.0, 537.0], [29.1, 537.0], [29.2, 537.0], [29.3, 560.0], [29.4, 560.0], [29.5, 560.0], [29.6, 560.0], [29.7, 560.0], [29.8, 575.0], [29.9, 575.0], [30.0, 604.0], [30.1, 604.0], [30.2, 604.0], [30.3, 604.0], [30.4, 604.0], [30.5, 607.0], [30.6, 607.0], [30.7, 607.0], [30.8, 824.0], [30.9, 824.0], [31.0, 839.0], [31.1, 839.0], [31.2, 839.0], [31.3, 853.0], [31.4, 853.0], [31.5, 887.0], [31.6, 887.0], [31.7, 887.0], [31.8, 1073.0], [31.9, 1073.0], [32.0, 1182.0], [32.1, 1182.0], [32.2, 1182.0], [32.3, 1217.0], [32.4, 1217.0], [32.5, 1419.0], [32.6, 1419.0], [32.7, 1419.0], [32.8, 1461.0], [32.9, 1461.0], [33.0, 1461.0], [33.1, 1461.0], [33.2, 1461.0], [33.3, 1461.0], [33.4, 1461.0], [33.5, 1462.0], [33.6, 1462.0], [33.7, 1462.0], [33.8, 1462.0], [33.9, 1462.0], [34.0, 1463.0], [34.1, 1463.0], [34.2, 1463.0], [34.3, 1471.0], [34.4, 1471.0], [34.5, 1472.0], [34.6, 1472.0], [34.7, 1472.0], [34.8, 1502.0], [34.9, 1502.0], [35.0, 1519.0], [35.1, 1519.0], [35.2, 1519.0], [35.3, 1520.0], [35.4, 1520.0], [35.5, 1520.0], [35.6, 1520.0], [35.7, 1520.0], [35.8, 1520.0], [35.9, 1520.0], [36.0, 1521.0], [36.1, 1521.0], [36.2, 1521.0], [36.3, 1521.0], [36.4, 1521.0], [36.5, 1521.0], [36.6, 1521.0], [36.7, 1521.0], [36.8, 1521.0], [36.9, 1521.0], [37.0, 1547.0], [37.1, 1547.0], [37.2, 1547.0], [37.3, 1565.0], [37.4, 1565.0], [37.5, 1653.0], [37.6, 1653.0], [37.7, 1653.0], [37.8, 1660.0], [37.9, 1660.0], [38.0, 1671.0], [38.1, 1671.0], [38.2, 1671.0], [38.3, 1674.0], [38.4, 1674.0], [38.5, 1832.0], [38.6, 1832.0], [38.7, 1832.0], [38.8, 1847.0], [38.9, 1847.0], [39.0, 1847.0], [39.1, 1847.0], [39.2, 1847.0], [39.3, 1848.0], [39.4, 1848.0], [39.5, 1850.0], [39.6, 1850.0], [39.7, 1850.0], [39.8, 1851.0], [39.9, 1851.0], [40.0, 1851.0], [40.1, 1851.0], [40.2, 1851.0], [40.3, 1851.0], [40.4, 1851.0], [40.5, 1855.0], [40.6, 1855.0], [40.7, 1855.0], [40.8, 1887.0], [40.9, 1887.0], [41.0, 1888.0], [41.1, 1888.0], [41.2, 1888.0], [41.3, 1890.0], [41.4, 1890.0], [41.5, 1894.0], [41.6, 1894.0], [41.7, 1894.0], [41.8, 1894.0], [41.9, 1894.0], [42.0, 1896.0], [42.1, 1896.0], [42.2, 1896.0], [42.3, 1897.0], [42.4, 1897.0], [42.5, 1898.0], [42.6, 1898.0], [42.7, 1898.0], [42.8, 1901.0], [42.9, 1901.0], [43.0, 1907.0], [43.1, 1907.0], [43.2, 1907.0], [43.3, 1981.0], [43.4, 1981.0], [43.5, 1991.0], [43.6, 1991.0], [43.7, 1991.0], [43.8, 1995.0], [43.9, 1995.0], [44.0, 1995.0], [44.1, 1995.0], [44.2, 1995.0], [44.3, 1997.0], [44.4, 1997.0], [44.5, 2003.0], [44.6, 2003.0], [44.7, 2003.0], [44.8, 2021.0], [44.9, 2021.0], [45.0, 2027.0], [45.1, 2027.0], [45.2, 2027.0], [45.3, 2036.0], [45.4, 2036.0], [45.5, 2036.0], [45.6, 2036.0], [45.7, 2036.0], [45.8, 2040.0], [45.9, 2040.0], [46.0, 2042.0], [46.1, 2042.0], [46.2, 2042.0], [46.3, 2042.0], [46.4, 2042.0], [46.5, 2044.0], [46.6, 2044.0], [46.7, 2044.0], [46.8, 2044.0], [46.9, 2044.0], [47.0, 2046.0], [47.1, 2046.0], [47.2, 2046.0], [47.3, 2046.0], [47.4, 2046.0], [47.5, 2046.0], [47.6, 2046.0], [47.7, 2046.0], [47.8, 2047.0], [47.9, 2047.0], [48.0, 2047.0], [48.1, 2047.0], [48.2, 2047.0], [48.3, 2049.0], [48.4, 2049.0], [48.5, 2049.0], [48.6, 2049.0], [48.7, 2049.0], [48.8, 2050.0], [48.9, 2050.0], [49.0, 2050.0], [49.1, 2050.0], [49.2, 2050.0], [49.3, 2050.0], [49.4, 2050.0], [49.5, 2054.0], [49.6, 2054.0], [49.7, 2054.0], [49.8, 2178.0], [49.9, 2178.0], [50.0, 2260.0], [50.1, 2260.0], [50.2, 2260.0], [50.3, 2301.0], [50.4, 2301.0], [50.5, 2302.0], [50.6, 2302.0], [50.7, 2302.0], [50.8, 2324.0], [50.9, 2324.0], [51.0, 2327.0], [51.1, 2327.0], [51.2, 2327.0], [51.3, 2334.0], [51.4, 2334.0], [51.5, 2425.0], [51.6, 2425.0], [51.7, 2425.0], [51.8, 2429.0], [51.9, 2429.0], [52.0, 2452.0], [52.1, 2452.0], [52.2, 2452.0], [52.3, 2452.0], [52.4, 2452.0], [52.5, 2458.0], [52.6, 2458.0], [52.7, 2458.0], [52.8, 2469.0], [52.9, 2469.0], [53.0, 2469.0], [53.1, 2469.0], [53.2, 2469.0], [53.3, 2494.0], [53.4, 2494.0], [53.5, 2571.0], [53.6, 2571.0], [53.7, 2571.0], [53.8, 2577.0], [53.9, 2577.0], [54.0, 2578.0], [54.1, 2578.0], [54.2, 2578.0], [54.3, 2588.0], [54.4, 2588.0], [54.5, 2589.0], [54.6, 2589.0], [54.7, 2589.0], [54.8, 2589.0], [54.9, 2589.0], [55.0, 2653.0], [55.1, 2653.0], [55.2, 2653.0], [55.3, 2662.0], [55.4, 2662.0], [55.5, 2663.0], [55.6, 2663.0], [55.7, 2663.0], [55.8, 2763.0], [55.9, 2763.0], [56.0, 2763.0], [56.1, 2763.0], [56.2, 2763.0], [56.3, 2763.0], [56.4, 2763.0], [56.5, 2764.0], [56.6, 2764.0], [56.7, 2764.0], [56.8, 2765.0], [56.9, 2765.0], [57.0, 2766.0], [57.1, 2766.0], [57.2, 2766.0], [57.3, 2792.0], [57.4, 2792.0], [57.5, 2802.0], [57.6, 2802.0], [57.7, 2802.0], [57.8, 2819.0], [57.9, 2819.0], [58.0, 2822.0], [58.1, 2822.0], [58.2, 2822.0], [58.3, 3007.0], [58.4, 3007.0], [58.5, 3020.0], [58.6, 3020.0], [58.7, 3020.0], [58.8, 3042.0], [58.9, 3042.0], [59.0, 3043.0], [59.1, 3043.0], [59.2, 3043.0], [59.3, 3069.0], [59.4, 3069.0], [59.5, 3072.0], [59.6, 3072.0], [59.7, 3072.0], [59.8, 3079.0], [59.9, 3079.0], [60.0, 3079.0], [60.1, 3079.0], [60.2, 3079.0], [60.3, 3081.0], [60.4, 3081.0], [60.5, 3084.0], [60.6, 3084.0], [60.7, 3084.0], [60.8, 3085.0], [60.9, 3085.0], [61.0, 3090.0], [61.1, 3090.0], [61.2, 3090.0], [61.3, 3091.0], [61.4, 3091.0], [61.5, 3091.0], [61.6, 3091.0], [61.7, 3091.0], [61.8, 3092.0], [61.9, 3092.0], [62.0, 3098.0], [62.1, 3098.0], [62.2, 3098.0], [62.3, 3106.0], [62.4, 3106.0], [62.5, 3153.0], [62.6, 3153.0], [62.7, 3153.0], [62.8, 3160.0], [62.9, 3160.0], [63.0, 3161.0], [63.1, 3161.0], [63.2, 3161.0], [63.3, 3228.0], [63.4, 3228.0], [63.5, 3254.0], [63.6, 3254.0], [63.7, 3254.0], [63.8, 3254.0], [63.9, 3254.0], [64.0, 3279.0], [64.1, 3279.0], [64.2, 3279.0], [64.3, 3280.0], [64.4, 3280.0], [64.5, 3280.0], [64.6, 3280.0], [64.7, 3280.0], [64.8, 3299.0], [64.9, 3299.0], [65.0, 3324.0], [65.1, 3324.0], [65.2, 3324.0], [65.3, 3335.0], [65.4, 3335.0], [65.5, 3337.0], [65.6, 3337.0], [65.7, 3337.0], [65.8, 3338.0], [65.9, 3338.0], [66.0, 3338.0], [66.1, 3338.0], [66.2, 3338.0], [66.3, 3344.0], [66.4, 3344.0], [66.5, 3345.0], [66.6, 3345.0], [66.7, 3345.0], [66.8, 3346.0], [66.9, 3346.0], [67.0, 3347.0], [67.1, 3347.0], [67.2, 3347.0], [67.3, 3347.0], [67.4, 3347.0], [67.5, 3348.0], [67.6, 3348.0], [67.7, 3348.0], [67.8, 3446.0], [67.9, 3446.0], [68.0, 3481.0], [68.1, 3481.0], [68.2, 3481.0], [68.3, 3494.0], [68.4, 3494.0], [68.5, 3495.0], [68.6, 3495.0], [68.7, 3495.0], [68.8, 3502.0], [68.9, 3502.0], [69.0, 3509.0], [69.1, 3509.0], [69.2, 3509.0], [69.3, 3526.0], [69.4, 3526.0], [69.5, 3526.0], [69.6, 3526.0], [69.7, 3526.0], [69.8, 3527.0], [69.9, 3527.0], [70.0, 3527.0], [70.1, 3527.0], [70.2, 3527.0], [70.3, 3527.0], [70.4, 3527.0], [70.5, 3528.0], [70.6, 3528.0], [70.7, 3528.0], [70.8, 3531.0], [70.9, 3531.0], [71.0, 3532.0], [71.1, 3532.0], [71.2, 3532.0], [71.3, 3533.0], [71.4, 3533.0], [71.5, 3566.0], [71.6, 3566.0], [71.7, 3566.0], [71.8, 3638.0], [71.9, 3638.0], [72.0, 3730.0], [72.1, 3730.0], [72.2, 3730.0], [72.3, 3730.0], [72.4, 3730.0], [72.5, 3732.0], [72.6, 3732.0], [72.7, 3732.0], [72.8, 3736.0], [72.9, 3736.0], [73.0, 3843.0], [73.1, 3843.0], [73.2, 3843.0], [73.3, 3858.0], [73.4, 3858.0], [73.5, 3859.0], [73.6, 3859.0], [73.7, 3859.0], [73.8, 3859.0], [73.9, 3859.0], [74.0, 3879.0], [74.1, 3879.0], [74.2, 3879.0], [74.3, 3880.0], [74.4, 3880.0], [74.5, 3881.0], [74.6, 3881.0], [74.7, 3881.0], [74.8, 3889.0], [74.9, 3889.0], [75.0, 3890.0], [75.1, 3890.0], [75.2, 3890.0], [75.3, 3890.0], [75.4, 3890.0], [75.5, 4016.0], [75.6, 4016.0], [75.7, 4016.0], [75.8, 4016.0], [75.9, 4016.0], [76.0, 4021.0], [76.1, 4021.0], [76.2, 4021.0], [76.3, 4089.0], [76.4, 4089.0], [76.5, 4140.0], [76.6, 4140.0], [76.7, 4140.0], [76.8, 4141.0], [76.9, 4141.0], [77.0, 4319.0], [77.1, 4319.0], [77.2, 4319.0], [77.3, 4321.0], [77.4, 4321.0], [77.5, 4324.0], [77.6, 4324.0], [77.7, 4324.0], [77.8, 4325.0], [77.9, 4325.0], [78.0, 4327.0], [78.1, 4327.0], [78.2, 4327.0], [78.3, 4328.0], [78.4, 4328.0], [78.5, 4328.0], [78.6, 4328.0], [78.7, 4328.0], [78.8, 4328.0], [78.9, 4328.0], [79.0, 4328.0], [79.1, 4328.0], [79.2, 4328.0], [79.3, 4329.0], [79.4, 4329.0], [79.5, 4329.0], [79.6, 4329.0], [79.7, 4329.0], [79.8, 4335.0], [79.9, 4335.0], [80.0, 4431.0], [80.1, 4431.0], [80.2, 4431.0], [80.3, 4505.0], [80.4, 4505.0], [80.5, 4547.0], [80.6, 4547.0], [80.7, 4547.0], [80.8, 4564.0], [80.9, 4564.0], [81.0, 4602.0], [81.1, 4602.0], [81.2, 4602.0], [81.3, 4602.0], [81.4, 4602.0], [81.5, 4613.0], [81.6, 4613.0], [81.7, 4613.0], [81.8, 4640.0], [81.9, 4640.0], [82.0, 4722.0], [82.1, 4722.0], [82.2, 4722.0], [82.3, 4722.0], [82.4, 4722.0], [82.5, 4728.0], [82.6, 4728.0], [82.7, 4728.0], [82.8, 4728.0], [82.9, 4728.0], [83.0, 4729.0], [83.1, 4729.0], [83.2, 4729.0], [83.3, 4730.0], [83.4, 4730.0], [83.5, 4733.0], [83.6, 4733.0], [83.7, 4733.0], [83.8, 4743.0], [83.9, 4743.0], [84.0, 4743.0], [84.1, 4743.0], [84.2, 4743.0], [84.3, 4744.0], [84.4, 4744.0], [84.5, 4747.0], [84.6, 4747.0], [84.7, 4747.0], [84.8, 4755.0], [84.9, 4755.0], [85.0, 4755.0], [85.1, 4755.0], [85.2, 4755.0], [85.3, 4763.0], [85.4, 4763.0], [85.5, 4906.0], [85.6, 4906.0], [85.7, 4906.0], [85.8, 4921.0], [85.9, 4921.0], [86.0, 4921.0], [86.1, 4921.0], [86.2, 4921.0], [86.3, 4935.0], [86.4, 4935.0], [86.5, 4937.0], [86.6, 4937.0], [86.7, 4937.0], [86.8, 4937.0], [86.9, 4937.0], [87.0, 4938.0], [87.1, 4938.0], [87.2, 4938.0], [87.3, 4938.0], [87.4, 4938.0], [87.5, 4939.0], [87.6, 4939.0], [87.7, 4939.0], [87.8, 4942.0], [87.9, 4942.0], [88.0, 4943.0], [88.1, 4943.0], [88.2, 4943.0], [88.3, 4943.0], [88.4, 4943.0], [88.5, 4943.0], [88.6, 4943.0], [88.7, 4943.0], [88.8, 4951.0], [88.9, 4951.0], [89.0, 4953.0], [89.1, 4953.0], [89.2, 4953.0], [89.3, 4953.0], [89.4, 4953.0], [89.5, 4953.0], [89.6, 4953.0], [89.7, 4953.0], [89.8, 4960.0], [89.9, 4960.0], [90.0, 4962.0], [90.1, 4962.0], [90.2, 4962.0], [90.3, 4963.0], [90.4, 4963.0], [90.5, 4963.0], [90.6, 4963.0], [90.7, 4963.0], [90.8, 4969.0], [90.9, 4969.0], [91.0, 5012.0], [91.1, 5012.0], [91.2, 5012.0], [91.3, 5012.0], [91.4, 5012.0], [91.5, 5013.0], [91.6, 5013.0], [91.7, 5013.0], [91.8, 5013.0], [91.9, 5013.0], [92.0, 5014.0], [92.1, 5014.0], [92.2, 5014.0], [92.3, 5020.0], [92.4, 5020.0], [92.5, 5020.0], [92.6, 5020.0], [92.7, 5020.0], [92.8, 5020.0], [92.9, 5020.0], [93.0, 5021.0], [93.1, 5021.0], [93.2, 5021.0], [93.3, 5029.0], [93.4, 5029.0], [93.5, 5080.0], [93.6, 5080.0], [93.7, 5080.0], [93.8, 5092.0], [93.9, 5092.0], [94.0, 5116.0], [94.1, 5116.0], [94.2, 5116.0], [94.3, 5149.0], [94.4, 5149.0], [94.5, 5360.0], [94.6, 5360.0], [94.7, 5360.0], [94.8, 5360.0], [94.9, 5360.0], [95.0, 5371.0], [95.1, 5371.0], [95.2, 5371.0], [95.3, 5478.0], [95.4, 5478.0], [95.5, 5479.0], [95.6, 5479.0], [95.7, 5479.0], [95.8, 5480.0], [95.9, 5480.0], [96.0, 5512.0], [96.1, 5512.0], [96.2, 5512.0], [96.3, 5526.0], [96.4, 5526.0], [96.5, 5532.0], [96.6, 5532.0], [96.7, 5532.0], [96.8, 5533.0], [96.9, 5533.0], [97.0, 5533.0], [97.1, 5533.0], [97.2, 5533.0], [97.3, 5533.0], [97.4, 5533.0], [97.5, 5534.0], [97.6, 5534.0], [97.7, 5534.0], [97.8, 5635.0], [97.9, 5635.0], [98.0, 5867.0], [98.1, 5867.0], [98.2, 5867.0], [98.3, 6072.0], [98.4, 6072.0], [98.5, 6285.0], [98.6, 6285.0], [98.7, 6285.0], [98.8, 6928.0], [98.9, 6928.0], [99.0, 6928.0], [99.1, 6928.0], [99.2, 6928.0], [99.3, 7685.0], [99.4, 7685.0], [99.5, 7832.0], [99.6, 7832.0], [99.7, 7832.0], [99.8, 7833.0], [99.9, 7833.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[0.0, 581.0], [0.1, 581.0], [0.2, 581.0], [0.3, 978.0], [0.4, 978.0], [0.5, 1003.0], [0.6, 1003.0], [0.7, 1003.0], [0.8, 1198.0], [0.9, 1198.0], [1.0, 1212.0], [1.1, 1212.0], [1.2, 1212.0], [1.3, 1214.0], [1.4, 1214.0], [1.5, 1624.0], [1.6, 1624.0], [1.7, 1624.0], [1.8, 2416.0], [1.9, 2416.0], [2.0, 2418.0], [2.1, 2418.0], [2.2, 2418.0], [2.3, 2544.0], [2.4, 2544.0], [2.5, 2546.0], [2.6, 2546.0], [2.7, 2546.0], [2.8, 6891.0], [2.9, 6891.0], [3.0, 6973.0], [3.1, 6973.0], [3.2, 6973.0], [3.3, 6973.0], [3.4, 6973.0], [3.5, 7173.0], [3.6, 7173.0], [3.7, 7173.0], [3.8, 7173.0], [3.9, 7173.0], [4.0, 7173.0], [4.1, 7173.0], [4.2, 7173.0], [4.3, 8151.0], [4.4, 8151.0], [4.5, 8179.0], [4.6, 8179.0], [4.7, 8179.0], [4.8, 8188.0], [4.9, 8188.0], [5.0, 8645.0], [5.1, 8645.0], [5.2, 8645.0], [5.3, 8733.0], [5.4, 8733.0], [5.5, 8737.0], [5.6, 8737.0], [5.7, 8737.0], [5.8, 8795.0], [5.9, 8795.0], [6.0, 8795.0], [6.1, 8795.0], [6.2, 8795.0], [6.3, 8795.0], [6.4, 8795.0], [6.5, 8799.0], [6.6, 8799.0], [6.7, 8799.0], [6.8, 8802.0], [6.9, 8802.0], [7.0, 8805.0], [7.1, 8805.0], [7.2, 8805.0], [7.3, 8805.0], [7.4, 8805.0], [7.5, 8822.0], [7.6, 8822.0], [7.7, 8822.0], [7.8, 10057.0], [7.9, 10057.0], [8.0, 10068.0], [8.1, 10068.0], [8.2, 10068.0], [8.3, 10069.0], [8.4, 10069.0], [8.5, 10278.0], [8.6, 10278.0], [8.7, 10278.0], [8.8, 10284.0], [8.9, 10284.0], [9.0, 10294.0], [9.1, 10294.0], [9.2, 10294.0], [9.3, 10294.0], [9.4, 10294.0], [9.5, 10675.0], [9.6, 10675.0], [9.7, 10675.0], [9.8, 10675.0], [9.9, 10675.0], [10.0, 10955.0], [10.1, 10955.0], [10.2, 10955.0], [10.3, 11209.0], [10.4, 11209.0], [10.5, 11227.0], [10.6, 11227.0], [10.7, 11227.0], [10.8, 11253.0], [10.9, 11253.0], [11.0, 11345.0], [11.1, 11345.0], [11.2, 11345.0], [11.3, 11352.0], [11.4, 11352.0], [11.5, 11653.0], [11.6, 11653.0], [11.7, 11653.0], [11.8, 11661.0], [11.9, 11661.0], [12.0, 11666.0], [12.1, 11666.0], [12.2, 11666.0], [12.3, 11666.0], [12.4, 11666.0], [12.5, 12155.0], [12.6, 12155.0], [12.7, 12155.0], [12.8, 12174.0], [12.9, 12174.0], [13.0, 12255.0], [13.1, 12255.0], [13.2, 12255.0], [13.3, 12256.0], [13.4, 12256.0], [13.5, 12396.0], [13.6, 12396.0], [13.7, 12396.0], [13.8, 12672.0], [13.9, 12672.0], [14.0, 13095.0], [14.1, 13095.0], [14.2, 13095.0], [14.3, 13162.0], [14.4, 13162.0], [14.5, 13165.0], [14.6, 13165.0], [14.7, 13165.0], [14.8, 13280.0], [14.9, 13280.0], [15.0, 13294.0], [15.1, 13294.0], [15.2, 13294.0], [15.3, 13299.0], [15.4, 13299.0], [15.5, 13351.0], [15.6, 13351.0], [15.7, 13351.0], [15.8, 13353.0], [15.9, 13353.0], [16.0, 13571.0], [16.1, 13571.0], [16.2, 13571.0], [16.3, 13571.0], [16.4, 13571.0], [16.5, 13593.0], [16.6, 13593.0], [16.7, 13593.0], [16.8, 13593.0], [16.9, 13593.0], [17.0, 13627.0], [17.1, 13627.0], [17.2, 13627.0], [17.3, 13628.0], [17.4, 13628.0], [17.5, 13709.0], [17.6, 13709.0], [17.7, 13709.0], [17.8, 13727.0], [17.9, 13727.0], [18.0, 13732.0], [18.1, 13732.0], [18.2, 13732.0], [18.3, 14040.0], [18.4, 14040.0], [18.5, 14103.0], [18.6, 14103.0], [18.7, 14103.0], [18.8, 14105.0], [18.9, 14105.0], [19.0, 14145.0], [19.1, 14145.0], [19.2, 14145.0], [19.3, 14146.0], [19.4, 14146.0], [19.5, 14449.0], [19.6, 14449.0], [19.7, 14449.0], [19.8, 14645.0], [19.9, 14645.0], [20.0, 15159.0], [20.1, 15159.0], [20.2, 15159.0], [20.3, 15161.0], [20.4, 15161.0], [20.5, 15259.0], [20.6, 15259.0], [20.7, 15259.0], [20.8, 15276.0], [20.9, 15276.0], [21.0, 15284.0], [21.1, 15284.0], [21.2, 15284.0], [21.3, 15322.0], [21.4, 15322.0], [21.5, 15359.0], [21.6, 15359.0], [21.7, 15359.0], [21.8, 15554.0], [21.9, 15554.0], [22.0, 15556.0], [22.1, 15556.0], [22.2, 15556.0], [22.3, 15560.0], [22.4, 15560.0], [22.5, 15565.0], [22.6, 15565.0], [22.7, 15565.0], [22.8, 15566.0], [22.9, 15566.0], [23.0, 15571.0], [23.1, 15571.0], [23.2, 15571.0], [23.3, 15906.0], [23.4, 15906.0], [23.5, 15967.0], [23.6, 15967.0], [23.7, 15967.0], [23.8, 15998.0], [23.9, 15998.0], [24.0, 16097.0], [24.1, 16097.0], [24.2, 16097.0], [24.3, 16101.0], [24.4, 16101.0], [24.5, 16224.0], [24.6, 16224.0], [24.7, 16224.0], [24.8, 16327.0], [24.9, 16327.0], [25.0, 16360.0], [25.1, 16360.0], [25.2, 16360.0], [25.3, 16360.0], [25.4, 16360.0], [25.5, 16418.0], [25.6, 16418.0], [25.7, 16418.0], [25.8, 16503.0], [25.9, 16503.0], [26.0, 16505.0], [26.1, 16505.0], [26.2, 16505.0], [26.3, 16557.0], [26.4, 16557.0], [26.5, 16730.0], [26.6, 16730.0], [26.7, 16730.0], [26.8, 16822.0], [26.9, 16822.0], [27.0, 16857.0], [27.1, 16857.0], [27.2, 16857.0], [27.3, 16904.0], [27.4, 16904.0], [27.5, 16911.0], [27.6, 16911.0], [27.7, 16911.0], [27.8, 16937.0], [27.9, 16937.0], [28.0, 16969.0], [28.1, 16969.0], [28.2, 16969.0], [28.3, 16973.0], [28.4, 16973.0], [28.5, 17189.0], [28.6, 17189.0], [28.7, 17189.0], [28.8, 17190.0], [28.9, 17190.0], [29.0, 17191.0], [29.1, 17191.0], [29.2, 17191.0], [29.3, 17198.0], [29.4, 17198.0], [29.5, 18026.0], [29.6, 18026.0], [29.7, 18026.0], [29.8, 18045.0], [29.9, 18045.0], [30.0, 18061.0], [30.1, 18061.0], [30.2, 18061.0], [30.3, 18287.0], [30.4, 18287.0], [30.5, 18393.0], [30.6, 18393.0], [30.7, 18393.0], [30.8, 18394.0], [30.9, 18394.0], [31.0, 18544.0], [31.1, 18544.0], [31.2, 18544.0], [31.3, 18544.0], [31.4, 18544.0], [31.5, 18546.0], [31.6, 18546.0], [31.7, 18546.0], [31.8, 18562.0], [31.9, 18562.0], [32.0, 18568.0], [32.1, 18568.0], [32.2, 18568.0], [32.3, 18637.0], [32.4, 18637.0], [32.5, 18637.0], [32.6, 18637.0], [32.7, 18637.0], [32.8, 18800.0], [32.9, 18800.0], [33.0, 18801.0], [33.1, 18801.0], [33.2, 18801.0], [33.3, 18804.0], [33.4, 18804.0], [33.5, 19017.0], [33.6, 19017.0], [33.7, 19017.0], [33.8, 19506.0], [33.9, 19506.0], [34.0, 19507.0], [34.1, 19507.0], [34.2, 19507.0], [34.3, 19508.0], [34.4, 19508.0], [34.5, 19905.0], [34.6, 19905.0], [34.7, 19905.0], [34.8, 19926.0], [34.9, 19926.0], [35.0, 19935.0], [35.1, 19935.0], [35.2, 19935.0], [35.3, 19940.0], [35.4, 19940.0], [35.5, 20072.0], [35.6, 20072.0], [35.7, 20072.0], [35.8, 20093.0], [35.9, 20093.0], [36.0, 20096.0], [36.1, 20096.0], [36.2, 20096.0], [36.3, 20097.0], [36.4, 20097.0], [36.5, 20107.0], [36.6, 20107.0], [36.7, 20107.0], [36.8, 20107.0], [36.9, 20107.0], [37.0, 20108.0], [37.1, 20108.0], [37.2, 20108.0], [37.3, 20108.0], [37.4, 20108.0], [37.5, 20108.0], [37.6, 20108.0], [37.7, 20108.0], [37.8, 20111.0], [37.9, 20111.0], [38.0, 20113.0], [38.1, 20113.0], [38.2, 20113.0], [38.3, 20120.0], [38.4, 20120.0], [38.5, 20245.0], [38.6, 20245.0], [38.7, 20245.0], [38.8, 20245.0], [38.9, 20245.0], [39.0, 20262.0], [39.1, 20262.0], [39.2, 20262.0], [39.3, 20370.0], [39.4, 20370.0], [39.5, 20653.0], [39.6, 20653.0], [39.7, 20653.0], [39.8, 20879.0], [39.9, 20879.0], [40.0, 20880.0], [40.1, 20880.0], [40.2, 20880.0], [40.3, 20930.0], [40.4, 20930.0], [40.5, 21936.0], [40.6, 21936.0], [40.7, 21936.0], [40.8, 21942.0], [40.9, 21942.0], [41.0, 21958.0], [41.1, 21958.0], [41.2, 21958.0], [41.3, 21958.0], [41.4, 21958.0], [41.5, 21959.0], [41.6, 21959.0], [41.7, 21959.0], [41.8, 22088.0], [41.9, 22088.0], [42.0, 22088.0], [42.1, 22088.0], [42.2, 22088.0], [42.3, 22090.0], [42.4, 22090.0], [42.5, 22468.0], [42.6, 22468.0], [42.7, 22468.0], [42.8, 22962.0], [42.9, 22962.0], [43.0, 22996.0], [43.1, 22996.0], [43.2, 22996.0], [43.3, 23089.0], [43.4, 23089.0], [43.5, 23090.0], [43.6, 23090.0], [43.7, 23090.0], [43.8, 23153.0], [43.9, 23153.0], [44.0, 33608.0], [44.1, 33608.0], [44.2, 33608.0], [44.3, 33723.0], [44.4, 33723.0], [44.5, 34197.0], [44.6, 34197.0], [44.7, 34197.0], [44.8, 34312.0], [44.9, 34312.0], [45.0, 35818.0], [45.1, 35818.0], [45.2, 35818.0], [45.3, 35822.0], [45.4, 35822.0], [45.5, 36777.0], [45.6, 36777.0], [45.7, 36777.0], [45.8, 38203.0], [45.9, 38203.0], [46.0, 38204.0], [46.1, 38204.0], [46.2, 38204.0], [46.3, 38320.0], [46.4, 38320.0], [46.5, 38482.0], [46.6, 38482.0], [46.7, 38482.0], [46.8, 38591.0], [46.9, 38591.0], [47.0, 38596.0], [47.1, 38596.0], [47.2, 38596.0], [47.3, 38611.0], [47.4, 38611.0], [47.5, 38718.0], [47.6, 38718.0], [47.7, 38718.0], [47.8, 38721.0], [47.9, 38721.0], [48.0, 38843.0], [48.1, 38843.0], [48.2, 38843.0], [48.3, 38880.0], [48.4, 38880.0], [48.5, 38912.0], [48.6, 38912.0], [48.7, 38912.0], [48.8, 38915.0], [48.9, 38915.0], [49.0, 39279.0], [49.1, 39279.0], [49.2, 39279.0], [49.3, 39280.0], [49.4, 39280.0], [49.5, 39280.0], [49.6, 39280.0], [49.7, 39280.0], [49.8, 39280.0], [49.9, 39280.0], [50.0, 39282.0], [50.1, 39282.0], [50.2, 39282.0], [50.3, 39283.0], [50.4, 39283.0], [50.5, 39797.0], [50.6, 39797.0], [50.7, 39797.0], [50.8, 39797.0], [50.9, 39797.0], [51.0, 39797.0], [51.1, 39797.0], [51.2, 39797.0], [51.3, 39797.0], [51.4, 39797.0], [51.5, 39802.0], [51.6, 39802.0], [51.7, 39802.0], [51.8, 39802.0], [51.9, 39802.0], [52.0, 39803.0], [52.1, 39803.0], [52.2, 39803.0], [52.3, 39807.0], [52.4, 39807.0], [52.5, 39814.0], [52.6, 39814.0], [52.7, 39814.0], [52.8, 39817.0], [52.9, 39817.0], [53.0, 39827.0], [53.1, 39827.0], [53.2, 39827.0], [53.3, 39836.0], [53.4, 39836.0], [53.5, 39947.0], [53.6, 39947.0], [53.7, 39947.0], [53.8, 40434.0], [53.9, 40434.0], [54.0, 40434.0], [54.1, 40434.0], [54.2, 40434.0], [54.3, 40436.0], [54.4, 40436.0], [54.5, 40436.0], [54.6, 40436.0], [54.7, 40436.0], [54.8, 40469.0], [54.9, 40469.0], [55.0, 40482.0], [55.1, 40482.0], [55.2, 40482.0], [55.3, 40484.0], [55.4, 40484.0], [55.5, 40484.0], [55.6, 40484.0], [55.7, 40484.0], [55.8, 40484.0], [55.9, 40484.0], [56.0, 40492.0], [56.1, 40492.0], [56.2, 40492.0], [56.3, 40492.0], [56.4, 40492.0], [56.5, 40619.0], [56.6, 40619.0], [56.7, 40619.0], [56.8, 40908.0], [56.9, 40908.0], [57.0, 40925.0], [57.1, 40925.0], [57.2, 40925.0], [57.3, 41144.0], [57.4, 41144.0], [57.5, 41152.0], [57.6, 41152.0], [57.7, 41152.0], [57.8, 41305.0], [57.9, 41305.0], [58.0, 41308.0], [58.1, 41308.0], [58.2, 41308.0], [58.3, 41336.0], [58.4, 41336.0], [58.5, 41337.0], [58.6, 41337.0], [58.7, 41337.0], [58.8, 41428.0], [58.9, 41428.0], [59.0, 41431.0], [59.1, 41431.0], [59.2, 41431.0], [59.3, 41639.0], [59.4, 41639.0], [59.5, 41649.0], [59.6, 41649.0], [59.7, 41649.0], [59.8, 41668.0], [59.9, 41668.0], [60.0, 41679.0], [60.1, 41679.0], [60.2, 41679.0], [60.3, 41874.0], [60.4, 41874.0], [60.5, 41941.0], [60.6, 41941.0], [60.7, 41941.0], [60.8, 42027.0], [60.9, 42027.0], [61.0, 42031.0], [61.1, 42031.0], [61.2, 42031.0], [61.3, 42033.0], [61.4, 42033.0], [61.5, 42036.0], [61.6, 42036.0], [61.7, 42036.0], [61.8, 42036.0], [61.9, 42036.0], [62.0, 42037.0], [62.1, 42037.0], [62.2, 42037.0], [62.3, 42037.0], [62.4, 42037.0], [62.5, 42037.0], [62.6, 42037.0], [62.7, 42037.0], [62.8, 42038.0], [62.9, 42038.0], [63.0, 42038.0], [63.1, 42038.0], [63.2, 42038.0], [63.3, 42072.0], [63.4, 42072.0], [63.5, 42073.0], [63.6, 42073.0], [63.7, 42073.0], [63.8, 42074.0], [63.9, 42074.0], [64.0, 42074.0], [64.1, 42074.0], [64.2, 42074.0], [64.3, 42078.0], [64.4, 42078.0], [64.5, 42078.0], [64.6, 42078.0], [64.7, 42078.0], [64.8, 42100.0], [64.9, 42100.0], [65.0, 42505.0], [65.1, 42505.0], [65.2, 42505.0], [65.3, 42513.0], [65.4, 42513.0], [65.5, 42514.0], [65.6, 42514.0], [65.7, 42514.0], [65.8, 42518.0], [65.9, 42518.0], [66.0, 42518.0], [66.1, 42518.0], [66.2, 42518.0], [66.3, 42522.0], [66.4, 42522.0], [66.5, 42529.0], [66.6, 42529.0], [66.7, 42529.0], [66.8, 42677.0], [66.9, 42677.0], [67.0, 42677.0], [67.1, 42677.0], [67.2, 42677.0], [67.3, 42678.0], [67.4, 42678.0], [67.5, 42678.0], [67.6, 42678.0], [67.7, 42678.0], [67.8, 42679.0], [67.9, 42679.0], [68.0, 42681.0], [68.1, 42681.0], [68.2, 42681.0], [68.3, 42682.0], [68.4, 42682.0], [68.5, 42683.0], [68.6, 42683.0], [68.7, 42683.0], [68.8, 42686.0], [68.9, 42686.0], [69.0, 42688.0], [69.1, 42688.0], [69.2, 42688.0], [69.3, 42688.0], [69.4, 42688.0], [69.5, 42689.0], [69.6, 42689.0], [69.7, 42689.0], [69.8, 42816.0], [69.9, 42816.0], [70.0, 42819.0], [70.1, 42819.0], [70.2, 42819.0], [70.3, 42826.0], [70.4, 42826.0], [70.5, 42831.0], [70.6, 42831.0], [70.7, 42831.0], [70.8, 42843.0], [70.9, 42843.0], [71.0, 42843.0], [71.1, 42843.0], [71.2, 42843.0], [71.3, 42844.0], [71.4, 42844.0], [71.5, 42850.0], [71.6, 42850.0], [71.7, 42850.0], [71.8, 42862.0], [71.9, 42862.0], [72.0, 42864.0], [72.1, 42864.0], [72.2, 42864.0], [72.3, 42887.0], [72.4, 42887.0], [72.5, 43217.0], [72.6, 43217.0], [72.7, 43217.0], [72.8, 43222.0], [72.9, 43222.0], [73.0, 43224.0], [73.1, 43224.0], [73.2, 43224.0], [73.3, 43229.0], [73.4, 43229.0], [73.5, 43231.0], [73.6, 43231.0], [73.7, 43231.0], [73.8, 43248.0], [73.9, 43248.0], [74.0, 43321.0], [74.1, 43321.0], [74.2, 43321.0], [74.3, 43321.0], [74.4, 43321.0], [74.5, 43333.0], [74.6, 43333.0], [74.7, 43333.0], [74.8, 43335.0], [74.9, 43335.0], [75.0, 43335.0], [75.1, 43335.0], [75.2, 43335.0], [75.3, 43336.0], [75.4, 43336.0], [75.5, 43336.0], [75.6, 43336.0], [75.7, 43336.0], [75.8, 43341.0], [75.9, 43341.0], [76.0, 43346.0], [76.1, 43346.0], [76.2, 43346.0], [76.3, 43349.0], [76.4, 43349.0], [76.5, 43356.0], [76.6, 43356.0], [76.7, 43356.0], [76.8, 43356.0], [76.9, 43356.0], [77.0, 43359.0], [77.1, 43359.0], [77.2, 43359.0], [77.3, 43360.0], [77.4, 43360.0], [77.5, 43365.0], [77.6, 43365.0], [77.7, 43365.0], [77.8, 43367.0], [77.9, 43367.0], [78.0, 43367.0], [78.1, 43367.0], [78.2, 43367.0], [78.3, 43473.0], [78.4, 43473.0], [78.5, 43493.0], [78.6, 43493.0], [78.7, 43493.0], [78.8, 43496.0], [78.9, 43496.0], [79.0, 43501.0], [79.1, 43501.0], [79.2, 43501.0], [79.3, 43503.0], [79.4, 43503.0], [79.5, 43510.0], [79.6, 43510.0], [79.7, 43510.0], [79.8, 43545.0], [79.9, 43545.0], [80.0, 43556.0], [80.1, 43556.0], [80.2, 43556.0], [80.3, 43566.0], [80.4, 43566.0], [80.5, 43956.0], [80.6, 43956.0], [80.7, 43956.0], [80.8, 43962.0], [80.9, 43962.0], [81.0, 43973.0], [81.1, 43973.0], [81.2, 43973.0], [81.3, 43974.0], [81.4, 43974.0], [81.5, 44382.0], [81.6, 44382.0], [81.7, 44382.0], [81.8, 44573.0], [81.9, 44573.0], [82.0, 44579.0], [82.1, 44579.0], [82.2, 44579.0], [82.3, 44593.0], [82.4, 44593.0], [82.5, 44627.0], [82.6, 44627.0], [82.7, 44627.0], [82.8, 44628.0], [82.9, 44628.0], [83.0, 44635.0], [83.1, 44635.0], [83.2, 44635.0], [83.3, 44696.0], [83.4, 44696.0], [83.5, 44745.0], [83.6, 44745.0], [83.7, 44745.0], [83.8, 44750.0], [83.9, 44750.0], [84.0, 44752.0], [84.1, 44752.0], [84.2, 44752.0], [84.3, 44944.0], [84.4, 44944.0], [84.5, 45015.0], [84.6, 45015.0], [84.7, 45015.0], [84.8, 45023.0], [84.9, 45023.0], [85.0, 45076.0], [85.1, 45076.0], [85.2, 45076.0], [85.3, 45144.0], [85.4, 45144.0], [85.5, 45144.0], [85.6, 45144.0], [85.7, 45144.0], [85.8, 45145.0], [85.9, 45145.0], [86.0, 45384.0], [86.1, 45384.0], [86.2, 45384.0], [86.3, 45384.0], [86.4, 45384.0], [86.5, 45385.0], [86.6, 45385.0], [86.7, 45385.0], [86.8, 45386.0], [86.9, 45386.0], [87.0, 45473.0], [87.1, 45473.0], [87.2, 45473.0], [87.3, 45474.0], [87.4, 45474.0], [87.5, 45475.0], [87.6, 45475.0], [87.7, 45475.0], [87.8, 45475.0], [87.9, 45475.0], [88.0, 45567.0], [88.1, 45567.0], [88.2, 45567.0], [88.3, 45725.0], [88.4, 45725.0], [88.5, 45751.0], [88.6, 45751.0], [88.7, 45751.0], [88.8, 45752.0], [88.9, 45752.0], [89.0, 45752.0], [89.1, 45752.0], [89.2, 45752.0], [89.3, 45752.0], [89.4, 45752.0], [89.5, 45753.0], [89.6, 45753.0], [89.7, 45753.0], [89.8, 45754.0], [89.9, 45754.0], [90.0, 45754.0], [90.1, 45754.0], [90.2, 45754.0], [90.3, 45766.0], [90.4, 45766.0], [90.5, 45771.0], [90.6, 45771.0], [90.7, 45771.0], [90.8, 45780.0], [90.9, 45780.0], [91.0, 45859.0], [91.1, 45859.0], [91.2, 45859.0], [91.3, 45881.0], [91.4, 45881.0], [91.5, 46157.0], [91.6, 46157.0], [91.7, 46157.0], [91.8, 46510.0], [91.9, 46510.0], [92.0, 46899.0], [92.1, 46899.0], [92.2, 46899.0], [92.3, 47721.0], [92.4, 47721.0], [92.5, 47766.0], [92.6, 47766.0], [92.7, 47766.0], [92.8, 48003.0], [92.9, 48003.0], [93.0, 48009.0], [93.1, 48009.0], [93.2, 48009.0], [93.3, 48014.0], [93.4, 48014.0], [93.5, 48025.0], [93.6, 48025.0], [93.7, 48025.0], [93.8, 48026.0], [93.9, 48026.0], [94.0, 48538.0], [94.1, 48538.0], [94.2, 48538.0], [94.3, 49988.0], [94.4, 49988.0], [94.5, 50485.0], [94.6, 50485.0], [94.7, 50485.0], [94.8, 51137.0], [94.9, 51137.0], [95.0, 51138.0], [95.1, 51138.0], [95.2, 51138.0], [95.3, 51142.0], [95.4, 51142.0], [95.5, 51144.0], [95.6, 51144.0], [95.7, 51144.0], [95.8, 51145.0], [95.9, 51145.0], [96.0, 51145.0], [96.1, 51145.0], [96.2, 51145.0], [96.3, 51229.0], [96.4, 51229.0], [96.5, 51524.0], [96.6, 51524.0], [96.7, 51524.0], [96.8, 51568.0], [96.9, 51568.0], [97.0, 51645.0], [97.1, 51645.0], [97.2, 51645.0], [97.3, 51664.0], [97.4, 51664.0], [97.5, 51665.0], [97.6, 51665.0], [97.7, 51665.0], [97.8, 51820.0], [97.9, 51820.0], [98.0, 51831.0], [98.1, 51831.0], [98.2, 51831.0], [98.3, 51833.0], [98.4, 51833.0], [98.5, 51835.0], [98.6, 51835.0], [98.7, 51835.0], [98.8, 51836.0], [98.9, 51836.0], [99.0, 51839.0], [99.1, 51839.0], [99.2, 51839.0], [99.3, 51978.0], [99.4, 51978.0], [99.5, 51979.0], [99.6, 51979.0], [99.7, 51979.0], [99.8, 52005.0], [99.9, 52005.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[0.0, 86.0], [0.1, 86.0], [0.2, 86.0], [0.3, 92.0], [0.4, 92.0], [0.5, 96.0], [0.6, 96.0], [0.7, 96.0], [0.8, 97.0], [0.9, 97.0], [1.0, 99.0], [1.1, 99.0], [1.2, 99.0], [1.3, 99.0], [1.4, 99.0], [1.5, 100.0], [1.6, 100.0], [1.7, 100.0], [1.8, 100.0], [1.9, 100.0], [2.0, 101.0], [2.1, 101.0], [2.2, 101.0], [2.3, 103.0], [2.4, 103.0], [2.5, 104.0], [2.6, 104.0], [2.7, 104.0], [2.8, 105.0], [2.9, 105.0], [3.0, 105.0], [3.1, 105.0], [3.2, 105.0], [3.3, 106.0], [3.4, 106.0], [3.5, 106.0], [3.6, 106.0], [3.7, 106.0], [3.8, 108.0], [3.9, 108.0], [4.0, 108.0], [4.1, 108.0], [4.2, 108.0], [4.3, 109.0], [4.4, 109.0], [4.5, 109.0], [4.6, 109.0], [4.7, 109.0], [4.8, 109.0], [4.9, 109.0], [5.0, 110.0], [5.1, 110.0], [5.2, 110.0], [5.3, 112.0], [5.4, 112.0], [5.5, 115.0], [5.6, 115.0], [5.7, 115.0], [5.8, 116.0], [5.9, 116.0], [6.0, 117.0], [6.1, 117.0], [6.2, 117.0], [6.3, 119.0], [6.4, 119.0], [6.5, 120.0], [6.6, 120.0], [6.7, 120.0], [6.8, 121.0], [6.9, 121.0], [7.0, 121.0], [7.1, 121.0], [7.2, 121.0], [7.3, 123.0], [7.4, 123.0], [7.5, 123.0], [7.6, 123.0], [7.7, 123.0], [7.8, 124.0], [7.9, 124.0], [8.0, 128.0], [8.1, 128.0], [8.2, 128.0], [8.3, 128.0], [8.4, 128.0], [8.5, 132.0], [8.6, 132.0], [8.7, 132.0], [8.8, 133.0], [8.9, 133.0], [9.0, 133.0], [9.1, 133.0], [9.2, 133.0], [9.3, 137.0], [9.4, 137.0], [9.5, 140.0], [9.6, 140.0], [9.7, 140.0], [9.8, 141.0], [9.9, 141.0], [10.0, 142.0], [10.1, 142.0], [10.2, 142.0], [10.3, 145.0], [10.4, 145.0], [10.5, 146.0], [10.6, 146.0], [10.7, 146.0], [10.8, 146.0], [10.9, 146.0], [11.0, 147.0], [11.1, 147.0], [11.2, 147.0], [11.3, 148.0], [11.4, 148.0], [11.5, 148.0], [11.6, 148.0], [11.7, 148.0], [11.8, 148.0], [11.9, 148.0], [12.0, 148.0], [12.1, 148.0], [12.2, 148.0], [12.3, 148.0], [12.4, 148.0], [12.5, 148.0], [12.6, 148.0], [12.7, 148.0], [12.8, 148.0], [12.9, 148.0], [13.0, 148.0], [13.1, 148.0], [13.2, 148.0], [13.3, 148.0], [13.4, 148.0], [13.5, 148.0], [13.6, 148.0], [13.7, 148.0], [13.8, 148.0], [13.9, 148.0], [14.0, 148.0], [14.1, 148.0], [14.2, 148.0], [14.3, 149.0], [14.4, 149.0], [14.5, 150.0], [14.6, 150.0], [14.7, 150.0], [14.8, 151.0], [14.9, 151.0], [15.0, 154.0], [15.1, 154.0], [15.2, 154.0], [15.3, 155.0], [15.4, 155.0], [15.5, 157.0], [15.6, 157.0], [15.7, 157.0], [15.8, 158.0], [15.9, 158.0], [16.0, 158.0], [16.1, 158.0], [16.2, 158.0], [16.3, 158.0], [16.4, 158.0], [16.5, 164.0], [16.6, 164.0], [16.7, 164.0], [16.8, 164.0], [16.9, 164.0], [17.0, 165.0], [17.1, 165.0], [17.2, 165.0], [17.3, 165.0], [17.4, 165.0], [17.5, 165.0], [17.6, 165.0], [17.7, 165.0], [17.8, 165.0], [17.9, 165.0], [18.0, 165.0], [18.1, 165.0], [18.2, 165.0], [18.3, 169.0], [18.4, 169.0], [18.5, 170.0], [18.6, 170.0], [18.7, 170.0], [18.8, 171.0], [18.9, 171.0], [19.0, 171.0], [19.1, 171.0], [19.2, 171.0], [19.3, 171.0], [19.4, 171.0], [19.5, 176.0], [19.6, 176.0], [19.7, 176.0], [19.8, 176.0], [19.9, 176.0], [20.0, 177.0], [20.1, 177.0], [20.2, 177.0], [20.3, 177.0], [20.4, 177.0], [20.5, 177.0], [20.6, 177.0], [20.7, 177.0], [20.8, 180.0], [20.9, 180.0], [21.0, 180.0], [21.1, 180.0], [21.2, 180.0], [21.3, 180.0], [21.4, 180.0], [21.5, 180.0], [21.6, 180.0], [21.7, 180.0], [21.8, 180.0], [21.9, 180.0], [22.0, 187.0], [22.1, 187.0], [22.2, 187.0], [22.3, 191.0], [22.4, 191.0], [22.5, 191.0], [22.6, 191.0], [22.7, 191.0], [22.8, 191.0], [22.9, 191.0], [23.0, 191.0], [23.1, 191.0], [23.2, 191.0], [23.3, 191.0], [23.4, 191.0], [23.5, 191.0], [23.6, 191.0], [23.7, 191.0], [23.8, 191.0], [23.9, 191.0], [24.0, 191.0], [24.1, 191.0], [24.2, 191.0], [24.3, 192.0], [24.4, 192.0], [24.5, 192.0], [24.6, 192.0], [24.7, 192.0], [24.8, 192.0], [24.9, 192.0], [25.0, 198.0], [25.1, 198.0], [25.2, 198.0], [25.3, 198.0], [25.4, 198.0], [25.5, 199.0], [25.6, 199.0], [25.7, 199.0], [25.8, 524.0], [25.9, 524.0], [26.0, 963.0], [26.1, 963.0], [26.2, 963.0], [26.3, 1190.0], [26.4, 1190.0], [26.5, 1729.0], [26.6, 1729.0], [26.7, 1729.0], [26.8, 1741.0], [26.9, 1741.0], [27.0, 1764.0], [27.1, 1764.0], [27.2, 1764.0], [27.3, 1816.0], [27.4, 1816.0], [27.5, 1831.0], [27.6, 1831.0], [27.7, 1831.0], [27.8, 1845.0], [27.9, 1845.0], [28.0, 1855.0], [28.1, 1855.0], [28.2, 1855.0], [28.3, 1857.0], [28.4, 1857.0], [28.5, 1860.0], [28.6, 1860.0], [28.7, 1860.0], [28.8, 1875.0], [28.9, 1875.0], [29.0, 1901.0], [29.1, 1901.0], [29.2, 1901.0], [29.3, 1905.0], [29.4, 1905.0], [29.5, 1909.0], [29.6, 1909.0], [29.7, 1909.0], [29.8, 1930.0], [29.9, 1930.0], [30.0, 2282.0], [30.1, 2282.0], [30.2, 2282.0], [30.3, 2459.0], [30.4, 2459.0], [30.5, 2468.0], [30.6, 2468.0], [30.7, 2468.0], [30.8, 2538.0], [30.9, 2538.0], [31.0, 2618.0], [31.1, 2618.0], [31.2, 2618.0], [31.3, 2702.0], [31.4, 2702.0], [31.5, 2741.0], [31.6, 2741.0], [31.7, 2741.0], [31.8, 2761.0], [31.9, 2761.0], [32.0, 2805.0], [32.1, 2805.0], [32.2, 2805.0], [32.3, 2819.0], [32.4, 2819.0], [32.5, 2834.0], [32.6, 2834.0], [32.7, 2834.0], [32.8, 2854.0], [32.9, 2854.0], [33.0, 3017.0], [33.1, 3017.0], [33.2, 3017.0], [33.3, 3028.0], [33.4, 3028.0], [33.5, 3051.0], [33.6, 3051.0], [33.7, 3051.0], [33.8, 3065.0], [33.9, 3065.0], [34.0, 3068.0], [34.1, 3068.0], [34.2, 3068.0], [34.3, 3113.0], [34.4, 3113.0], [34.5, 3116.0], [34.6, 3116.0], [34.7, 3116.0], [34.8, 3177.0], [34.9, 3177.0], [35.0, 3282.0], [35.1, 3282.0], [35.2, 3282.0], [35.3, 3320.0], [35.4, 3320.0], [35.5, 3351.0], [35.6, 3351.0], [35.7, 3351.0], [35.8, 3420.0], [35.9, 3420.0], [36.0, 3431.0], [36.1, 3431.0], [36.2, 3431.0], [36.3, 3451.0], [36.4, 3451.0], [36.5, 3468.0], [36.6, 3468.0], [36.7, 3468.0], [36.8, 3489.0], [36.9, 3489.0], [37.0, 3499.0], [37.1, 3499.0], [37.2, 3499.0], [37.3, 3520.0], [37.4, 3520.0], [37.5, 3526.0], [37.6, 3526.0], [37.7, 3526.0], [37.8, 3558.0], [37.9, 3558.0], [38.0, 3561.0], [38.1, 3561.0], [38.2, 3561.0], [38.3, 3585.0], [38.4, 3585.0], [38.5, 3980.0], [38.6, 3980.0], [38.7, 3980.0], [38.8, 4022.0], [38.9, 4022.0], [39.0, 4025.0], [39.1, 4025.0], [39.2, 4025.0], [39.3, 4079.0], [39.4, 4079.0], [39.5, 4092.0], [39.6, 4092.0], [39.7, 4092.0], [39.8, 4126.0], [39.9, 4126.0], [40.0, 4201.0], [40.1, 4201.0], [40.2, 4201.0], [40.3, 4565.0], [40.4, 4565.0], [40.5, 4570.0], [40.6, 4570.0], [40.7, 4570.0], [40.8, 4583.0], [40.9, 4583.0], [41.0, 4586.0], [41.1, 4586.0], [41.2, 4586.0], [41.3, 4603.0], [41.4, 4603.0], [41.5, 4606.0], [41.6, 4606.0], [41.7, 4606.0], [41.8, 4618.0], [41.9, 4618.0], [42.0, 4635.0], [42.1, 4635.0], [42.2, 4635.0], [42.3, 4647.0], [42.4, 4647.0], [42.5, 4657.0], [42.6, 4657.0], [42.7, 4657.0], [42.8, 4659.0], [42.9, 4659.0], [43.0, 4666.0], [43.1, 4666.0], [43.2, 4666.0], [43.3, 4675.0], [43.4, 4675.0], [43.5, 4678.0], [43.6, 4678.0], [43.7, 4678.0], [43.8, 4678.0], [43.9, 4678.0], [44.0, 4691.0], [44.1, 4691.0], [44.2, 4691.0], [44.3, 4701.0], [44.4, 4701.0], [44.5, 4703.0], [44.6, 4703.0], [44.7, 4703.0], [44.8, 4720.0], [44.9, 4720.0], [45.0, 4727.0], [45.1, 4727.0], [45.2, 4727.0], [45.3, 4732.0], [45.4, 4732.0], [45.5, 4732.0], [45.6, 4732.0], [45.7, 4732.0], [45.8, 4734.0], [45.9, 4734.0], [46.0, 4757.0], [46.1, 4757.0], [46.2, 4757.0], [46.3, 4768.0], [46.4, 4768.0], [46.5, 4772.0], [46.6, 4772.0], [46.7, 4772.0], [46.8, 4785.0], [46.9, 4785.0], [47.0, 4791.0], [47.1, 4791.0], [47.2, 4791.0], [47.3, 4801.0], [47.4, 4801.0], [47.5, 4804.0], [47.6, 4804.0], [47.7, 4804.0], [47.8, 4816.0], [47.9, 4816.0], [48.0, 4843.0], [48.1, 4843.0], [48.2, 4843.0], [48.3, 4845.0], [48.4, 4845.0], [48.5, 4862.0], [48.6, 4862.0], [48.7, 4862.0], [48.8, 4882.0], [48.9, 4882.0], [49.0, 4885.0], [49.1, 4885.0], [49.2, 4885.0], [49.3, 4906.0], [49.4, 4906.0], [49.5, 4918.0], [49.6, 4918.0], [49.7, 4918.0], [49.8, 4921.0], [49.9, 4921.0], [50.0, 4934.0], [50.1, 4934.0], [50.2, 4934.0], [50.3, 4936.0], [50.4, 4936.0], [50.5, 4953.0], [50.6, 4953.0], [50.7, 4953.0], [50.8, 4953.0], [50.9, 4953.0], [51.0, 5585.0], [51.1, 5585.0], [51.2, 5585.0], [51.3, 5599.0], [51.4, 5599.0], [51.5, 5657.0], [51.6, 5657.0], [51.7, 5657.0], [51.8, 5813.0], [51.9, 5813.0], [52.0, 5839.0], [52.1, 5839.0], [52.2, 5839.0], [52.3, 5872.0], [52.4, 5872.0], [52.5, 5900.0], [52.6, 5900.0], [52.7, 5900.0], [52.8, 5905.0], [52.9, 5905.0], [53.0, 5923.0], [53.1, 5923.0], [53.2, 5923.0], [53.3, 5944.0], [53.4, 5944.0], [53.5, 5983.0], [53.6, 5983.0], [53.7, 5983.0], [53.8, 6087.0], [53.9, 6087.0], [54.0, 6089.0], [54.1, 6089.0], [54.2, 6089.0], [54.3, 6123.0], [54.4, 6123.0], [54.5, 6128.0], [54.6, 6128.0], [54.7, 6128.0], [54.8, 6131.0], [54.9, 6131.0], [55.0, 6143.0], [55.1, 6143.0], [55.2, 6143.0], [55.3, 6154.0], [55.4, 6154.0], [55.5, 6162.0], [55.6, 6162.0], [55.7, 6162.0], [55.8, 6168.0], [55.9, 6168.0], [56.0, 6173.0], [56.1, 6173.0], [56.2, 6173.0], [56.3, 6176.0], [56.4, 6176.0], [56.5, 6184.0], [56.6, 6184.0], [56.7, 6184.0], [56.8, 6189.0], [56.9, 6189.0], [57.0, 6204.0], [57.1, 6204.0], [57.2, 6204.0], [57.3, 6209.0], [57.4, 6209.0], [57.5, 6211.0], [57.6, 6211.0], [57.7, 6211.0], [57.8, 6217.0], [57.9, 6217.0], [58.0, 6220.0], [58.1, 6220.0], [58.2, 6220.0], [58.3, 6220.0], [58.4, 6220.0], [58.5, 6223.0], [58.6, 6223.0], [58.7, 6223.0], [58.8, 6234.0], [58.9, 6234.0], [59.0, 6235.0], [59.1, 6235.0], [59.2, 6235.0], [59.3, 6241.0], [59.4, 6241.0], [59.5, 6249.0], [59.6, 6249.0], [59.7, 6249.0], [59.8, 6252.0], [59.9, 6252.0], [60.0, 6255.0], [60.1, 6255.0], [60.2, 6255.0], [60.3, 6257.0], [60.4, 6257.0], [60.5, 6259.0], [60.6, 6259.0], [60.7, 6259.0], [60.8, 6282.0], [60.9, 6282.0], [61.0, 6299.0], [61.1, 6299.0], [61.2, 6299.0], [61.3, 6303.0], [61.4, 6303.0], [61.5, 6306.0], [61.6, 6306.0], [61.7, 6306.0], [61.8, 6309.0], [61.9, 6309.0], [62.0, 6318.0], [62.1, 6318.0], [62.2, 6318.0], [62.3, 6319.0], [62.4, 6319.0], [62.5, 6323.0], [62.6, 6323.0], [62.7, 6323.0], [62.8, 6323.0], [62.9, 6323.0], [63.0, 6326.0], [63.1, 6326.0], [63.2, 6326.0], [63.3, 6326.0], [63.4, 6326.0], [63.5, 6332.0], [63.6, 6332.0], [63.7, 6332.0], [63.8, 6333.0], [63.9, 6333.0], [64.0, 6337.0], [64.1, 6337.0], [64.2, 6337.0], [64.3, 6344.0], [64.4, 6344.0], [64.5, 6350.0], [64.6, 6350.0], [64.7, 6350.0], [64.8, 6356.0], [64.9, 6356.0], [65.0, 6359.0], [65.1, 6359.0], [65.2, 6359.0], [65.3, 6374.0], [65.4, 6374.0], [65.5, 6383.0], [65.6, 6383.0], [65.7, 6383.0], [65.8, 6389.0], [65.9, 6389.0], [66.0, 6391.0], [66.1, 6391.0], [66.2, 6391.0], [66.3, 6398.0], [66.4, 6398.0], [66.5, 6404.0], [66.6, 6404.0], [66.7, 6404.0], [66.8, 6404.0], [66.9, 6404.0], [67.0, 6406.0], [67.1, 6406.0], [67.2, 6406.0], [67.3, 6414.0], [67.4, 6414.0], [67.5, 6418.0], [67.6, 6418.0], [67.7, 6418.0], [67.8, 6429.0], [67.9, 6429.0], [68.0, 6431.0], [68.1, 6431.0], [68.2, 6431.0], [68.3, 6431.0], [68.4, 6431.0], [68.5, 6434.0], [68.6, 6434.0], [68.7, 6434.0], [68.8, 6436.0], [68.9, 6436.0], [69.0, 6437.0], [69.1, 6437.0], [69.2, 6437.0], [69.3, 6444.0], [69.4, 6444.0], [69.5, 6446.0], [69.6, 6446.0], [69.7, 6446.0], [69.8, 6449.0], [69.9, 6449.0], [70.0, 6483.0], [70.1, 6483.0], [70.2, 6483.0], [70.3, 6488.0], [70.4, 6488.0], [70.5, 6495.0], [70.6, 6495.0], [70.7, 6495.0], [70.8, 6512.0], [70.9, 6512.0], [71.0, 6514.0], [71.1, 6514.0], [71.2, 6514.0], [71.3, 6522.0], [71.4, 6522.0], [71.5, 6523.0], [71.6, 6523.0], [71.7, 6523.0], [71.8, 6541.0], [71.9, 6541.0], [72.0, 6570.0], [72.1, 6570.0], [72.2, 6570.0], [72.3, 6583.0], [72.4, 6583.0], [72.5, 6593.0], [72.6, 6593.0], [72.7, 6593.0], [72.8, 6594.0], [72.9, 6594.0], [73.0, 6597.0], [73.1, 6597.0], [73.2, 6597.0], [73.3, 6609.0], [73.4, 6609.0], [73.5, 6629.0], [73.6, 6629.0], [73.7, 6629.0], [73.8, 6641.0], [73.9, 6641.0], [74.0, 6644.0], [74.1, 6644.0], [74.2, 6644.0], [74.3, 6653.0], [74.4, 6653.0], [74.5, 6657.0], [74.6, 6657.0], [74.7, 6657.0], [74.8, 6660.0], [74.9, 6660.0], [75.0, 6668.0], [75.1, 6668.0], [75.2, 6668.0], [75.3, 6680.0], [75.4, 6680.0], [75.5, 6692.0], [75.6, 6692.0], [75.7, 6692.0], [75.8, 6711.0], [75.9, 6711.0], [76.0, 6733.0], [76.1, 6733.0], [76.2, 6733.0], [76.3, 6786.0], [76.4, 6786.0], [76.5, 6797.0], [76.6, 6797.0], [76.7, 6797.0], [76.8, 6802.0], [76.9, 6802.0], [77.0, 7147.0], [77.1, 7147.0], [77.2, 7147.0], [77.3, 7152.0], [77.4, 7152.0], [77.5, 7168.0], [77.6, 7168.0], [77.7, 7168.0], [77.8, 7176.0], [77.9, 7176.0], [78.0, 7191.0], [78.1, 7191.0], [78.2, 7191.0], [78.3, 7193.0], [78.4, 7193.0], [78.5, 7197.0], [78.6, 7197.0], [78.7, 7197.0], [78.8, 7211.0], [78.9, 7211.0], [79.0, 7365.0], [79.1, 7365.0], [79.2, 7365.0], [79.3, 7371.0], [79.4, 7371.0], [79.5, 7387.0], [79.6, 7387.0], [79.7, 7387.0], [79.8, 7395.0], [79.9, 7395.0], [80.0, 7395.0], [80.1, 7395.0], [80.2, 7395.0], [80.3, 7409.0], [80.4, 7409.0], [80.5, 7420.0], [80.6, 7420.0], [80.7, 7420.0], [80.8, 7422.0], [80.9, 7422.0], [81.0, 7429.0], [81.1, 7429.0], [81.2, 7429.0], [81.3, 7444.0], [81.4, 7444.0], [81.5, 7446.0], [81.6, 7446.0], [81.7, 7446.0], [81.8, 7456.0], [81.9, 7456.0], [82.0, 7465.0], [82.1, 7465.0], [82.2, 7465.0], [82.3, 7472.0], [82.4, 7472.0], [82.5, 7478.0], [82.6, 7478.0], [82.7, 7478.0], [82.8, 7535.0], [82.9, 7535.0], [83.0, 7790.0], [83.1, 7790.0], [83.2, 7790.0], [83.3, 7797.0], [83.4, 7797.0], [83.5, 7833.0], [83.6, 7833.0], [83.7, 7833.0], [83.8, 7853.0], [83.9, 7853.0], [84.0, 7928.0], [84.1, 7928.0], [84.2, 7928.0], [84.3, 7982.0], [84.4, 7982.0], [84.5, 7985.0], [84.6, 7985.0], [84.7, 7985.0], [84.8, 8001.0], [84.9, 8001.0], [85.0, 8006.0], [85.1, 8006.0], [85.2, 8006.0], [85.3, 8019.0], [85.4, 8019.0], [85.5, 8025.0], [85.6, 8025.0], [85.7, 8025.0], [85.8, 8030.0], [85.9, 8030.0], [86.0, 8042.0], [86.1, 8042.0], [86.2, 8042.0], [86.3, 8042.0], [86.4, 8042.0], [86.5, 8078.0], [86.6, 8078.0], [86.7, 8078.0], [86.8, 8084.0], [86.9, 8084.0], [87.0, 8087.0], [87.1, 8087.0], [87.2, 8087.0], [87.3, 8093.0], [87.4, 8093.0], [87.5, 8120.0], [87.6, 8120.0], [87.7, 8120.0], [87.8, 8123.0], [87.9, 8123.0], [88.0, 8131.0], [88.1, 8131.0], [88.2, 8131.0], [88.3, 8142.0], [88.4, 8142.0], [88.5, 8148.0], [88.6, 8148.0], [88.7, 8148.0], [88.8, 8151.0], [88.9, 8151.0], [89.0, 8184.0], [89.1, 8184.0], [89.2, 8184.0], [89.3, 8191.0], [89.4, 8191.0], [89.5, 8191.0], [89.6, 8191.0], [89.7, 8191.0], [89.8, 8196.0], [89.9, 8196.0], [90.0, 8207.0], [90.1, 8207.0], [90.2, 8207.0], [90.3, 8220.0], [90.4, 8220.0], [90.5, 8225.0], [90.6, 8225.0], [90.7, 8225.0], [90.8, 8227.0], [90.9, 8227.0], [91.0, 8239.0], [91.1, 8239.0], [91.2, 8239.0], [91.3, 8246.0], [91.4, 8246.0], [91.5, 8253.0], [91.6, 8253.0], [91.7, 8253.0], [91.8, 8254.0], [91.9, 8254.0], [92.0, 8337.0], [92.1, 8337.0], [92.2, 8337.0], [92.3, 8341.0], [92.4, 8341.0], [92.5, 8378.0], [92.6, 8378.0], [92.7, 8378.0], [92.8, 8390.0], [92.9, 8390.0], [93.0, 8405.0], [93.1, 8405.0], [93.2, 8405.0], [93.3, 8408.0], [93.4, 8408.0], [93.5, 8410.0], [93.6, 8410.0], [93.7, 8410.0], [93.8, 8421.0], [93.9, 8421.0], [94.0, 8430.0], [94.1, 8430.0], [94.2, 8430.0], [94.3, 8450.0], [94.4, 8450.0], [94.5, 8460.0], [94.6, 8460.0], [94.7, 8460.0], [94.8, 8488.0], [94.9, 8488.0], [95.0, 8497.0], [95.1, 8497.0], [95.2, 8497.0], [95.3, 8518.0], [95.4, 8518.0], [95.5, 8521.0], [95.6, 8521.0], [95.7, 8521.0], [95.8, 8528.0], [95.9, 8528.0], [96.0, 9308.0], [96.1, 9308.0], [96.2, 9308.0], [96.3, 9313.0], [96.4, 9313.0], [96.5, 9359.0], [96.6, 9359.0], [96.7, 9359.0], [96.8, 9386.0], [96.9, 9386.0], [97.0, 9391.0], [97.1, 9391.0], [97.2, 9391.0], [97.3, 9410.0], [97.4, 9410.0], [97.5, 9415.0], [97.6, 9415.0], [97.7, 9415.0], [97.8, 9439.0], [97.9, 9439.0], [98.0, 9460.0], [98.1, 9460.0], [98.2, 9460.0], [98.3, 9465.0], [98.4, 9465.0], [98.5, 9492.0], [98.6, 9492.0], [98.7, 9492.0], [98.8, 9495.0], [98.9, 9495.0], [99.0, 9510.0], [99.1, 9510.0], [99.2, 9510.0], [99.3, 10381.0], [99.4, 10381.0], [99.5, 10394.0], [99.6, 10394.0], [99.7, 10394.0], [99.8, 10400.0], [99.9, 10400.0]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 97.0, "series": [{"data": [[0.0, 87.0], [600.0, 3.0], [800.0, 4.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 1.0], [1400.0, 9.0], [1500.0, 11.0], [1600.0, 4.0], [1800.0, 17.0], [1900.0, 7.0], [2000.0, 21.0], [2100.0, 1.0], [2300.0, 5.0], [2200.0, 1.0], [2400.0, 8.0], [2500.0, 6.0], [2600.0, 3.0], [2700.0, 7.0], [2800.0, 3.0], [3000.0, 16.0], [3100.0, 4.0], [3200.0, 7.0], [3300.0, 11.0], [3400.0, 4.0], [3500.0, 12.0], [3700.0, 4.0], [3600.0, 1.0], [3800.0, 10.0], [4000.0, 4.0], [4300.0, 12.0], [4100.0, 2.0], [4600.0, 4.0], [4400.0, 1.0], [4500.0, 3.0], [4700.0, 14.0], [5100.0, 2.0], [4900.0, 22.0], [5000.0, 12.0], [5300.0, 3.0], [5500.0, 7.0], [5400.0, 3.0], [5600.0, 1.0], [5800.0, 1.0], [6000.0, 1.0], [6200.0, 1.0], [6900.0, 2.0], [7600.0, 1.0], [7800.0, 2.0], [100.0, 11.0], [200.0, 4.0], [400.0, 3.0], [500.0, 15.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[33700.0, 1.0], [34100.0, 1.0], [34300.0, 1.0], [36700.0, 1.0], [38500.0, 2.0], [38300.0, 1.0], [38700.0, 2.0], [38900.0, 2.0], [40900.0, 2.0], [39700.0, 4.0], [39900.0, 1.0], [42500.0, 7.0], [41900.0, 1.0], [41300.0, 4.0], [41100.0, 2.0], [42100.0, 1.0], [44900.0, 1.0], [44700.0, 3.0], [44500.0, 3.0], [44300.0, 1.0], [43900.0, 4.0], [43300.0, 17.0], [43500.0, 6.0], [45500.0, 1.0], [46100.0, 1.0], [45700.0, 11.0], [45100.0, 3.0], [46500.0, 1.0], [45300.0, 4.0], [47700.0, 2.0], [48500.0, 1.0], [49900.0, 1.0], [51100.0, 6.0], [51900.0, 2.0], [51500.0, 2.0], [500.0, 1.0], [900.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 2.0], [1600.0, 1.0], [2400.0, 2.0], [2500.0, 2.0], [6900.0, 2.0], [6800.0, 1.0], [7100.0, 3.0], [8100.0, 3.0], [8600.0, 1.0], [8700.0, 6.0], [8800.0, 4.0], [10000.0, 3.0], [10200.0, 4.0], [10600.0, 2.0], [11200.0, 3.0], [10900.0, 1.0], [11600.0, 4.0], [11300.0, 2.0], [12100.0, 2.0], [12200.0, 2.0], [12300.0, 1.0], [12600.0, 1.0], [13000.0, 1.0], [13200.0, 3.0], [13300.0, 2.0], [13100.0, 2.0], [13500.0, 4.0], [13700.0, 3.0], [13600.0, 2.0], [14100.0, 4.0], [14000.0, 1.0], [14600.0, 1.0], [14400.0, 1.0], [15100.0, 2.0], [15200.0, 3.0], [15300.0, 2.0], [15500.0, 6.0], [15900.0, 3.0], [16000.0, 1.0], [16100.0, 1.0], [16200.0, 1.0], [16300.0, 3.0], [16400.0, 1.0], [16500.0, 3.0], [16900.0, 5.0], [16700.0, 1.0], [16800.0, 2.0], [17100.0, 4.0], [18200.0, 1.0], [18000.0, 3.0], [18300.0, 2.0], [18500.0, 5.0], [19000.0, 1.0], [18800.0, 3.0], [18600.0, 2.0], [20300.0, 1.0], [19500.0, 3.0], [19900.0, 4.0], [20000.0, 4.0], [20100.0, 8.0], [20200.0, 3.0], [20800.0, 2.0], [20600.0, 1.0], [20900.0, 1.0], [22400.0, 1.0], [22000.0, 3.0], [21900.0, 5.0], [23100.0, 1.0], [23000.0, 2.0], [22900.0, 2.0], [33600.0, 1.0], [35800.0, 2.0], [38200.0, 2.0], [38600.0, 1.0], [38400.0, 1.0], [38800.0, 2.0], [39800.0, 8.0], [40600.0, 1.0], [40400.0, 11.0], [39200.0, 6.0], [42800.0, 11.0], [42600.0, 12.0], [41400.0, 2.0], [42000.0, 16.0], [41800.0, 1.0], [41600.0, 4.0], [45000.0, 3.0], [44600.0, 4.0], [43200.0, 6.0], [43400.0, 3.0], [46800.0, 1.0], [45800.0, 2.0], [45400.0, 4.0], [48000.0, 5.0], [50400.0, 1.0], [51600.0, 3.0], [51800.0, 6.0], [52000.0, 1.0], [51200.0, 1.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[0.0, 6.0], [900.0, 1.0], [1100.0, 1.0], [1700.0, 3.0], [1800.0, 7.0], [1900.0, 4.0], [2200.0, 1.0], [2400.0, 2.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 4.0], [2700.0, 3.0], [3000.0, 5.0], [3100.0, 3.0], [3200.0, 1.0], [3300.0, 2.0], [3400.0, 6.0], [3500.0, 5.0], [3900.0, 1.0], [4000.0, 4.0], [4200.0, 1.0], [4100.0, 1.0], [4600.0, 12.0], [4500.0, 4.0], [4700.0, 12.0], [4800.0, 8.0], [4900.0, 7.0], [5500.0, 2.0], [5600.0, 1.0], [5800.0, 3.0], [5900.0, 5.0], [6000.0, 2.0], [6100.0, 11.0], [6200.0, 17.0], [6300.0, 21.0], [6600.0, 10.0], [6500.0, 10.0], [6400.0, 17.0], [6800.0, 1.0], [6700.0, 4.0], [7100.0, 7.0], [7200.0, 1.0], [7400.0, 10.0], [7300.0, 5.0], [7500.0, 1.0], [7800.0, 2.0], [7900.0, 3.0], [7700.0, 2.0], [8100.0, 10.0], [8000.0, 11.0], [8300.0, 4.0], [8400.0, 9.0], [8200.0, 8.0], [8500.0, 3.0], [9400.0, 7.0], [9300.0, 5.0], [9500.0, 1.0], [10400.0, 1.0], [10300.0, 2.0], [100.0, 97.0], [500.0, 1.0]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 52000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 11.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 944.0, "series": [{"data": [[0.0, 208.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 37.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 944.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 11.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 99.92146596858639, "minX": 1.611331169E12, "maxY": 400.0, "series": [{"data": [[1.611331182E12, 358.38888888888897], [1.611331184E12, 343.75], [1.611331183E12, 352.46153846153845], [1.61133118E12, 371.7368421052632], [1.611331179E12, 379.14754098360663], [1.611331181E12, 363.44444444444446], [1.611331188E12, 327.4444444444444], [1.611331187E12, 332.2857142857143], [1.611331189E12, 322.0], [1.611331185E12, 338.09090909090907], [1.611331194E12, 303.69230769230774], [1.61133119E12, 319.0], [1.611331192E12, 313.16666666666663], [1.611331198E12, 254.09090909090918], [1.611331196E12, 285.1304347826087], [1.611331197E12, 271.2], [1.611331205E12, 223.5], [1.611331172E12, 400.0], [1.611331171E12, 400.0], [1.611331173E12, 400.0], [1.611331215E12, 222.0], [1.611331169E12, 122.97927461139903], [1.61133117E12, 358.7692307692308], [1.611331177E12, 394.0], [1.61133122E12, 203.6086956521739], [1.611331219E12, 215.0], [1.611331221E12, 99.92146596858639], [1.611331178E12, 387.9133333333333], [1.611331217E12, 219.5], [1.611331174E12, 400.0], [1.611331176E12, 399.8448275862069], [1.611331175E12, 400.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611331221E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 54.0, "minX": 5.0, "maxY": 51839.0, "series": [{"data": [[118.0, 54.0], [119.0, 54.72727272727273], [123.0, 68.0], [125.0, 68.85714285714285], [126.0, 59.9], [129.0, 67.875], [130.0, 68.0], [136.0, 71.33333333333334], [137.0, 76.55555555555556], [140.0, 84.00000000000003], [141.0, 79.0], [145.0, 89.81818181818183], [146.0, 86.28571428571429], [216.0, 281.0], [218.0, 278.0], [317.0, 551.2], [333.0, 7783.333333333333], [331.0, 6928.0], [351.0, 4092.5], [341.0, 5371.0], [339.0, 5635.0], [337.0, 4733.0], [367.0, 2334.0], [363.0, 4167.65789473684], [360.0, 3908.5294117647054], [356.0, 4302.785714285715], [383.0, 2021.0833333333333], [380.0, 3775.9729729729734], [373.0, 2022.3571428571427], [397.0, 278.0], [394.0, 3627.857142857143], [391.0, 5072.4], [390.0, 1966.8888888888891], [387.0, 2252.0], [385.0, 1840.1999999999998], [384.0, 1966.1666666666667], [400.0, 2386.1666666666665]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[325.3774999999998, 2412.740000000001]], "isOverall": false, "label": "GET /login-Aggregated", "isController": false}, {"data": [[5.0, 36622.6], [12.0, 39223.42857142857], [18.0, 40486.333333333336], [28.0, 41510.799999999996], [29.0, 43360.0], [43.0, 42108.357142857145], [57.0, 43501.0], [62.0, 42709.0], [81.0, 44222.57894736842], [98.0, 46955.82352941176], [102.0, 47524.75], [106.0, 51839.0], [105.0, 50285.333333333336], [110.0, 51833.5], [108.0, 51834.0], [117.0, 43343.42857142857], [123.0, 39223.5], [121.0, 38560.25], [126.0, 38744.666666666664], [135.0, 39802.0], [133.0, 39807.0], [132.0, 39912.5], [128.0, 40013.5], [143.0, 42492.0], [140.0, 39797.0], [138.0, 39799.0], [149.0, 42683.666666666664], [146.0, 42677.333333333336], [158.0, 42825.333333333336], [155.0, 42725.0], [152.0, 42751.666666666664], [167.0, 42843.333333333336], [164.0, 41887.5], [162.0, 41336.5], [160.0, 42863.0], [175.0, 44068.666666666664], [172.0, 41252.333333333336], [169.0, 42078.0], [182.0, 44604.0], [180.0, 43898.0], [178.0, 43223.0], [176.0, 43229.0], [191.0, 45101.0], [188.0, 44884.0], [186.0, 44751.0], [184.0, 44627.5], [198.0, 43604.5], [196.0, 42518.0], [195.0, 42522.0], [194.0, 42523.5], [192.0, 41941.0], [207.0, 47721.0], [206.0, 45010.0], [204.0, 45961.5], [202.0, 45771.0], [201.0, 43599.666666666664], [215.0, 49988.0], [214.0, 51137.5], [212.0, 51144.0], [208.0, 48538.0], [223.0, 35822.0], [222.0, 45567.0], [221.0, 47939.0], [218.0, 48008.666666666664], [224.0, 35818.0], [248.0, 17764.875000000004], [270.0, 19935.0], [269.0, 19940.0], [268.0, 21433.5], [266.0, 21540.75], [258.0, 21939.0], [256.0, 20009.125], [286.0, 15259.0], [287.0, 13627.0], [285.0, 15276.0], [284.0, 15284.0], [283.0, 16904.0], [282.0, 16911.0], [281.0, 15322.0], [280.0, 16937.0], [279.0, 13709.0], [272.0, 19717.0], [275.0, 14145.5], [273.0, 22468.0], [278.0, 11209.0], [277.0, 16164.0], [301.0, 16408.333333333332], [298.0, 19017.0], [297.0, 18287.0], [296.0, 18026.0], [295.0, 16730.0], [288.0, 16857.0], [294.0, 18045.0], [293.0, 18061.0], [292.0, 15159.0], [291.0, 18080.5], [289.0, 16822.0], [317.0, 20930.0], [316.0, 14645.0], [315.0, 16418.0], [314.0, 15336.5], [312.0, 23110.666666666668], [309.0, 15562.333333333334], [306.0, 15554.0], [305.0, 16327.0], [304.0, 16677.666666666668], [332.0, 11352.0], [334.0, 16101.0], [335.0, 16097.0], [333.0, 11345.0], [331.0, 18556.0], [329.0, 18545.0], [327.0, 18562.0], [320.0, 20804.0], [322.0, 13628.0], [321.0, 20370.0], [326.0, 12255.5], [324.0, 12534.0], [351.0, 13662.166666666668], [345.0, 1624.0], [344.0, 13883.5], [342.0, 13732.0], [341.0, 2545.0], [339.0, 2417.0], [337.0, 15906.0], [336.0, 15998.0], [367.0, 11661.5], [363.0, 12164.5], [361.0, 1003.0], [360.0, 1208.0], [357.0, 13095.0], [356.0, 13332.666666666666], [353.0, 13571.0], [380.0, 10064.666666666666], [377.0, 10287.5], [373.0, 10675.0], [371.0, 779.5], [369.0, 11240.0], [397.0, 7173.0], [394.0, 8172.666666666667], [391.0, 8645.0], [390.0, 8775.666666666666], [385.0, 8808.5], [400.0, 6945.666666666667]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[203.51249999999993, 30758.55249999998]], "isOverall": false, "label": "POST /graphql - Login-Aggregated", "isController": false}, {"data": [[98.0, 146.5], [100.0, 157.75], [103.0, 160.71428571428572], [105.0, 159.0], [107.0, 156.6], [108.0, 161.14285714285714], [112.0, 174.42105263157893], [113.0, 123.0], [114.0, 152.0], [115.0, 104.85714285714286], [118.0, 98.5], [119.0, 100.0], [125.0, 104.25], [129.0, 105.0], [130.0, 104.0], [137.0, 106.0], [141.0, 124.75], [145.0, 134.5], [279.0, 524.0], [380.0, 8905.473684210525], [377.0, 9490.5], [369.0, 10391.666666666666], [397.0, 6485.5], [394.0, 7346.833333333333], [391.0, 8128.142857142858], [400.0, 5006.69801980198]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[322.7225, 4489.989999999998]], "isOverall": false, "label": "GET /-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 400.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 708.0, "minX": 1.611331169E12, "maxY": 541167.0, "series": [{"data": [[1.611331182E12, 74162.0], [1.611331184E12, 4847.0], [1.611331183E12, 20641.0], [1.61133118E12, 39930.0], [1.611331179E12, 143614.0], [1.611331181E12, 95635.0], [1.611331188E12, 13077.0], [1.611331187E12, 14551.0], [1.611331189E12, 1453.0], [1.611331185E12, 14648.0], [1.611331194E12, 18889.0], [1.61133119E12, 8718.0], [1.611331192E12, 8718.0], [1.611331198E12, 63932.0], [1.611331196E12, 33419.0], [1.611331197E12, 7265.0], [1.611331205E12, 2906.0], [1.611331172E12, 61441.0], [1.611331171E12, 48099.0], [1.611331173E12, 79366.0], [1.611331215E12, 1453.0], [1.611331169E12, 541167.0], [1.61133117E12, 33142.0], [1.611331177E12, 115781.0], [1.61133122E12, 33419.0], [1.611331219E12, 1453.0], [1.611331221E12, 277523.0], [1.611331178E12, 383503.0], [1.611331217E12, 8718.0], [1.611331174E12, 145870.0], [1.611331176E12, 333668.0], [1.611331175E12, 157070.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.611331182E12, 7353.0], [1.611331184E12, 2832.0], [1.611331183E12, 8034.0], [1.61133118E12, 5832.0], [1.611331179E12, 11533.0], [1.611331181E12, 9045.0], [1.611331188E12, 6372.0], [1.611331187E12, 2031.0], [1.611331189E12, 708.0], [1.611331185E12, 6033.0], [1.611331194E12, 9204.0], [1.61133119E12, 4248.0], [1.611331192E12, 4248.0], [1.611331198E12, 31152.0], [1.611331196E12, 16284.0], [1.611331197E12, 3540.0], [1.611331205E12, 1416.0], [1.611331172E12, 2247.0], [1.611331171E12, 1775.0], [1.611331173E12, 2960.0], [1.611331215E12, 708.0], [1.611331169E12, 23224.0], [1.61133117E12, 1584.0], [1.611331177E12, 6678.0], [1.61133122E12, 16284.0], [1.611331219E12, 708.0], [1.611331221E12, 135228.0], [1.611331178E12, 24625.0], [1.611331217E12, 4248.0], [1.611331174E12, 5320.0], [1.611331176E12, 17418.0], [1.611331175E12, 6728.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611331221E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 79.71111111111111, "minX": 1.611331169E12, "maxY": 49988.0, "series": [{"data": [[1.611331182E12, 4086.58064516129], [1.611331183E12, 4092.5], [1.61133118E12, 2225.2999999999997], [1.611331179E12, 3555.3902439024396], [1.611331181E12, 4120.641025641025], [1.611331187E12, 7441.2], [1.611331185E12, 5246.333333333333], [1.611331172E12, 1832.0], [1.611331171E12, 1565.0], [1.611331173E12, 2231.5], [1.611331169E12, 79.71111111111111], [1.61133117E12, 656.4000000000001], [1.611331177E12, 3627.857142857143], [1.611331178E12, 2479.896551724138], [1.611331174E12, 3254.0], [1.611331176E12, 1844.5526315789475], [1.611331175E12, 3492.208333333333]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.611331182E12, 3544.4], [1.611331184E12, 10780.75], [1.611331183E12, 13555.727272727272], [1.61133118E12, 7564.833333333333], [1.611331179E12, 10192.0], [1.611331181E12, 11829.166666666666], [1.611331188E12, 15815.888888888889], [1.611331187E12, 11348.5], [1.611331189E12, 13628.0], [1.611331185E12, 9253.25], [1.611331194E12, 16548.46153846154], [1.61133119E12, 19726.166666666668], [1.611331192E12, 19403.833333333332], [1.611331198E12, 19215.931818181816], [1.611331196E12, 15952.956521739134], [1.611331197E12, 20355.4], [1.611331205E12, 35820.0], [1.611331215E12, 45567.0], [1.611331177E12, 8172.666666666667], [1.61133122E12, 46124.34782608696], [1.611331219E12, 49988.0], [1.611331221E12, 42982.4607329843], [1.611331178E12, 8775.727272727272], [1.611331217E12, 47973.833333333336], [1.611331176E12, 7059.333333333334]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.611331172E12, 2793.777777777778], [1.611331171E12, 1844.142857142857], [1.611331173E12, 3618.0000000000005], [1.611331169E12, 146.6116504854369], [1.61133118E12, 10391.666666666666], [1.611331179E12, 9418.692307692309], [1.61133117E12, 892.3333333333334], [1.611331177E12, 7346.833333333333], [1.611331178E12, 8194.326923076926], [1.611331174E12, 4751.116279069769], [1.611331176E12, 6452.069444444445], [1.611331175E12, 6062.625]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611331221E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 79.7, "minX": 1.611331169E12, "maxY": 49988.0, "series": [{"data": [[1.611331182E12, 4086.58064516129], [1.611331183E12, 4092.5], [1.61133118E12, 2225.2999999999997], [1.611331179E12, 3555.292682926829], [1.611331181E12, 4120.102564102563], [1.611331187E12, 7441.2], [1.611331185E12, 5246.333333333333], [1.611331172E12, 1832.0], [1.611331171E12, 1565.0], [1.611331173E12, 2231.5], [1.611331169E12, 79.7], [1.61133117E12, 656.0], [1.611331177E12, 3627.857142857143], [1.611331178E12, 2479.896551724138], [1.611331174E12, 3254.0], [1.611331176E12, 1844.5526315789475], [1.611331175E12, 3492.208333333333]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.611331182E12, 3544.4], [1.611331184E12, 10780.75], [1.611331183E12, 13555.727272727272], [1.61133118E12, 7564.833333333333], [1.611331179E12, 10192.0], [1.611331181E12, 11829.166666666666], [1.611331188E12, 15815.888888888889], [1.611331187E12, 11348.5], [1.611331189E12, 13628.0], [1.611331185E12, 9253.25], [1.611331194E12, 16548.46153846154], [1.61133119E12, 19726.166666666668], [1.611331192E12, 19403.833333333332], [1.611331198E12, 19215.931818181816], [1.611331196E12, 15952.956521739134], [1.611331197E12, 20355.4], [1.611331205E12, 35820.0], [1.611331215E12, 45567.0], [1.611331177E12, 8172.666666666667], [1.61133122E12, 46124.260869565216], [1.611331219E12, 49988.0], [1.611331221E12, 42982.387434554985], [1.611331178E12, 8775.727272727272], [1.611331217E12, 47973.66666666667], [1.611331176E12, 7059.333333333334]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.611331172E12, 2793.777777777778], [1.611331171E12, 1844.0714285714287], [1.611331173E12, 3618.0000000000005], [1.611331169E12, 146.17475728155333], [1.61133118E12, 10391.666666666666], [1.611331179E12, 9418.692307692309], [1.61133117E12, 892.3333333333334], [1.611331177E12, 7346.708333333333], [1.611331178E12, 8194.326923076926], [1.611331174E12, 4751.093023255815], [1.611331176E12, 6452.055555555555], [1.611331175E12, 6062.593750000001]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611331221E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.611331169E12, "maxY": 392.6666666666667, "series": [{"data": [[1.611331182E12, 0.0], [1.611331183E12, 0.0], [1.61133118E12, 0.0], [1.611331179E12, 0.0], [1.611331181E12, 0.0], [1.611331187E12, 0.0], [1.611331185E12, 0.0], [1.611331172E12, 0.0], [1.611331171E12, 0.0], [1.611331173E12, 0.0], [1.611331169E12, 0.0], [1.61133117E12, 0.0], [1.611331177E12, 0.0], [1.611331178E12, 0.0], [1.611331174E12, 0.0], [1.611331176E12, 0.0], [1.611331175E12, 0.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.611331182E12, 0.0], [1.611331184E12, 0.0], [1.611331183E12, 0.0], [1.61133118E12, 0.0], [1.611331179E12, 0.0], [1.611331181E12, 0.0], [1.611331188E12, 0.0], [1.611331187E12, 0.0], [1.611331189E12, 0.0], [1.611331185E12, 0.0], [1.611331194E12, 0.0], [1.61133119E12, 0.0], [1.611331192E12, 0.0], [1.611331198E12, 0.0], [1.611331196E12, 0.0], [1.611331197E12, 0.0], [1.611331205E12, 0.0], [1.611331215E12, 0.0], [1.611331177E12, 0.0], [1.61133122E12, 0.0], [1.611331219E12, 0.0], [1.611331221E12, 0.0], [1.611331178E12, 0.0], [1.611331217E12, 0.0], [1.611331176E12, 0.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.611331172E12, 35.94444444444445], [1.611331171E12, 40.99999999999999], [1.611331173E12, 33.7391304347826], [1.611331169E12, 66.23300970873787], [1.61133118E12, 392.6666666666667], [1.611331179E12, 329.53846153846155], [1.61133117E12, 40.0], [1.611331177E12, 344.54166666666663], [1.611331178E12, 128.15384615384616], [1.611331174E12, 30.697674418604645], [1.611331176E12, 44.84722222222221], [1.611331175E12, 34.09375]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611331221E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 52.0, "minX": 1.611331169E12, "maxY": 52005.0, "series": [{"data": [[1.611331182E12, 13095.0], [1.611331184E12, 14040.0], [1.611331183E12, 14105.0], [1.61133118E12, 11253.0], [1.611331179E12, 10294.0], [1.611331181E12, 12174.0], [1.611331188E12, 18568.0], [1.611331187E12, 11352.0], [1.611331189E12, 13628.0], [1.611331185E12, 16101.0], [1.611331194E12, 19017.0], [1.61133119E12, 20930.0], [1.611331192E12, 23153.0], [1.611331198E12, 22962.0], [1.611331196E12, 22996.0], [1.611331197E12, 22468.0], [1.611331205E12, 35822.0], [1.611331172E12, 3116.0], [1.611331171E12, 1930.0], [1.611331173E12, 4201.0], [1.611331215E12, 45567.0], [1.611331169E12, 290.0], [1.61133117E12, 1190.0], [1.611331177E12, 8188.0], [1.61133122E12, 51145.0], [1.611331219E12, 49988.0], [1.611331221E12, 52005.0], [1.611331178E12, 8822.0], [1.611331217E12, 48026.0], [1.611331174E12, 4953.0], [1.611331176E12, 7173.0], [1.611331175E12, 6285.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.611331182E12, 4755.0], [1.611331184E12, 14040.0], [1.611331183E12, 14104.2], [1.61133118E12, 11232.2], [1.611331179E12, 10065.8], [1.611331181E12, 11663.0], [1.611331188E12, 18568.0], [1.611331187E12, 11352.0], [1.611331189E12, 13628.0], [1.611331185E12, 16101.0], [1.611331194E12, 18725.0], [1.61133119E12, 20930.0], [1.611331192E12, 23153.0], [1.611331198E12, 22023.5], [1.611331196E12, 18054.6], [1.611331197E12, 22468.0], [1.611331205E12, 35822.0], [1.611331172E12, 3113.0], [1.611331171E12, 1917.4], [1.611331173E12, 4105.6], [1.611331215E12, 45567.0], [1.611331169E12, 180.0], [1.61133117E12, 1099.1999999999998], [1.611331177E12, 7523.6], [1.61133122E12, 51144.6], [1.611331219E12, 49988.0], [1.611331221E12, 45876.6], [1.611331178E12, 8496.1], [1.611331217E12, 48026.0], [1.611331174E12, 4926.2], [1.611331176E12, 6697.7], [1.611331175E12, 6226.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.611331182E12, 13095.0], [1.611331184E12, 14040.0], [1.611331183E12, 14105.0], [1.61133118E12, 11253.0], [1.611331179E12, 10294.0], [1.611331181E12, 12174.0], [1.611331188E12, 18568.0], [1.611331187E12, 11352.0], [1.611331189E12, 13628.0], [1.611331185E12, 16101.0], [1.611331194E12, 19017.0], [1.61133119E12, 20930.0], [1.611331192E12, 23153.0], [1.611331198E12, 22962.0], [1.611331196E12, 22996.0], [1.611331197E12, 22468.0], [1.611331205E12, 35822.0], [1.611331172E12, 3116.0], [1.611331171E12, 1930.0], [1.611331173E12, 4201.0], [1.611331215E12, 45567.0], [1.611331169E12, 278.72], [1.61133117E12, 1190.0], [1.611331177E12, 8188.0], [1.61133122E12, 51145.0], [1.611331219E12, 49988.0], [1.611331221E12, 51981.08], [1.611331178E12, 8813.33], [1.611331217E12, 48026.0], [1.611331174E12, 4953.0], [1.611331176E12, 7173.0], [1.611331175E12, 6285.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.611331182E12, 7885.249999999983], [1.611331184E12, 14040.0], [1.611331183E12, 14105.0], [1.61133118E12, 11253.0], [1.611331179E12, 10283.4], [1.611331181E12, 12008.299999999997], [1.611331188E12, 18568.0], [1.611331187E12, 11352.0], [1.611331189E12, 13628.0], [1.611331185E12, 16101.0], [1.611331194E12, 19017.0], [1.61133119E12, 20930.0], [1.611331192E12, 23153.0], [1.611331198E12, 22089.5], [1.611331196E12, 22008.999999999985], [1.611331197E12, 22468.0], [1.611331205E12, 35822.0], [1.611331172E12, 3116.0], [1.611331171E12, 1930.0], [1.611331173E12, 4178.5], [1.611331215E12, 45567.0], [1.611331169E12, 191.29999999999998], [1.61133117E12, 1190.0], [1.611331177E12, 8176.2], [1.61133122E12, 51145.0], [1.611331219E12, 49988.0], [1.611331221E12, 51727.0], [1.611331178E12, 8795.0], [1.611331217E12, 48026.0], [1.611331174E12, 4947.9], [1.611331176E12, 6903.299999999999], [1.611331175E12, 6253.05]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.611331182E12, 2662.0], [1.611331184E12, 13727.0], [1.611331183E12, 3638.0], [1.61133118E12, 1887.0], [1.611331179E12, 1073.0], [1.611331181E12, 2334.0], [1.611331188E12, 12255.0], [1.611331187E12, 6928.0], [1.611331189E12, 13628.0], [1.611331185E12, 4733.0], [1.611331194E12, 15554.0], [1.61133119E12, 14645.0], [1.611331192E12, 14449.0], [1.611331198E12, 10955.0], [1.611331196E12, 11209.0], [1.611331197E12, 19508.0], [1.611331205E12, 35818.0], [1.611331172E12, 1832.0], [1.611331171E12, 1565.0], [1.611331173E12, 1671.0], [1.611331215E12, 45567.0], [1.611331169E12, 52.0], [1.61133117E12, 405.0], [1.611331177E12, 1419.0], [1.61133122E12, 41941.0], [1.611331219E12, 49988.0], [1.611331221E12, 33608.0], [1.611331178E12, 175.0], [1.611331217E12, 47766.0], [1.611331174E12, 3254.0], [1.611331176E12, 278.0], [1.611331175E12, 1182.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.611331182E12, 4328.5], [1.611331184E12, 13732.0], [1.611331183E12, 13353.0], [1.61133118E12, 2653.0], [1.611331179E12, 4953.0], [1.611331181E12, 4747.0], [1.611331188E12, 18544.0], [1.611331187E12, 7832.0], [1.611331189E12, 13628.0], [1.611331185E12, 15906.0], [1.611331194E12, 16360.0], [1.61133119E12, 20766.0], [1.611331192E12, 19753.5], [1.611331198E12, 20094.5], [1.611331196E12, 15359.0], [1.611331197E12, 19935.0], [1.611331205E12, 35820.0], [1.611331172E12, 2805.0], [1.611331171E12, 1855.0], [1.611331173E12, 3499.0], [1.611331215E12, 45567.0], [1.611331169E12, 103.0], [1.61133117E12, 575.0], [1.611331177E12, 7197.0], [1.61133122E12, 45766.0], [1.611331219E12, 49988.0], [1.611331221E12, 42826.0], [1.611331178E12, 5020.0], [1.611331217E12, 48011.5], [1.611331174E12, 4732.0], [1.611331176E12, 6335.0], [1.611331175E12, 5855.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611331221E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 103.0, "minX": 1.0, "maxY": 45567.0, "series": [{"data": [[2.0, 35820.0], [150.0, 5020.0], [36.0, 4328.5], [9.0, 18544.0], [41.0, 7197.0], [45.0, 4732.0], [11.0, 15906.0], [44.0, 20094.5], [191.0, 42826.0], [193.0, 103.0], [13.0, 13353.0], [56.0, 5855.5], [15.0, 1855.0], [61.0, 4953.0], [4.0, 13732.0], [1.0, 45567.0], [19.0, 2783.0], [5.0, 19935.0], [23.0, 32468.5], [6.0, 22009.5], [25.0, 3499.0], [7.0, 7832.0], [116.0, 6335.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 1624.0], [36.0, 1205.0], [19.0, 779.5], [11.0, 2481.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 193.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 103.0, "minX": 1.0, "maxY": 45567.0, "series": [{"data": [[2.0, 35820.0], [150.0, 5020.0], [36.0, 4328.5], [9.0, 18544.0], [41.0, 7197.0], [45.0, 4732.0], [11.0, 15906.0], [44.0, 20094.5], [191.0, 42826.0], [193.0, 103.0], [13.0, 13353.0], [56.0, 5855.5], [15.0, 1855.0], [61.0, 4953.0], [4.0, 13732.0], [1.0, 45567.0], [19.0, 2783.0], [5.0, 19935.0], [23.0, 32468.5], [6.0, 22009.5], [25.0, 3499.0], [7.0, 7832.0], [116.0, 6335.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 1624.0], [36.0, 1205.0], [19.0, 779.5], [11.0, 2481.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 193.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.611331169E12, "maxY": 436.0, "series": [{"data": [[1.611331182E12, 25.0], [1.611331183E12, 8.0], [1.61133118E12, 13.0], [1.611331179E12, 54.0], [1.611331181E12, 39.0], [1.611331187E12, 5.0], [1.611331185E12, 3.0], [1.611331172E12, 19.0], [1.611331171E12, 15.0], [1.611331173E12, 25.0], [1.611331169E12, 436.0], [1.61133117E12, 170.0], [1.611331177E12, 38.0], [1.611331178E12, 139.0], [1.611331174E12, 45.0], [1.611331176E12, 110.0], [1.611331175E12, 56.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611331187E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.611331169E12, "maxY": 193.0, "series": [{"data": [[1.611331182E12, 32.0], [1.611331184E12, 3.0], [1.611331183E12, 13.0], [1.61133118E12, 17.0], [1.611331179E12, 61.0], [1.611331181E12, 45.0], [1.611331188E12, 9.0], [1.611331187E12, 7.0], [1.611331189E12, 1.0], [1.611331185E12, 7.0], [1.611331194E12, 13.0], [1.61133119E12, 6.0], [1.611331192E12, 6.0], [1.611331198E12, 44.0], [1.611331196E12, 23.0], [1.611331197E12, 5.0], [1.611331205E12, 2.0], [1.611331172E12, 19.0], [1.611331171E12, 15.0], [1.611331173E12, 25.0], [1.611331215E12, 1.0], [1.611331169E12, 193.0], [1.61133117E12, 13.0], [1.611331177E12, 41.0], [1.61133122E12, 23.0], [1.611331219E12, 1.0], [1.611331221E12, 191.0], [1.611331178E12, 150.0], [1.611331217E12, 6.0], [1.611331174E12, 45.0], [1.611331176E12, 116.0], [1.611331175E12, 56.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.611331182E12, 4.0], [1.611331184E12, 1.0], [1.61133118E12, 2.0], [1.611331185E12, 4.0]], "isOverall": false, "label": "502", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611331221E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.611331169E12, "maxY": 191.0, "series": [{"data": [[1.611331172E12, 18.0], [1.611331171E12, 14.0], [1.611331173E12, 23.0], [1.611331169E12, 103.0], [1.61133118E12, 3.0], [1.611331179E12, 13.0], [1.61133117E12, 3.0], [1.611331177E12, 24.0], [1.611331178E12, 52.0], [1.611331174E12, 43.0], [1.611331176E12, 72.0], [1.611331175E12, 32.0]], "isOverall": false, "label": "GET /-success", "isController": false}, {"data": [[1.611331182E12, 1.0], [1.611331184E12, 3.0], [1.611331183E12, 11.0], [1.61133118E12, 4.0], [1.611331179E12, 7.0], [1.611331181E12, 6.0], [1.611331188E12, 9.0], [1.611331187E12, 2.0], [1.611331189E12, 1.0], [1.611331185E12, 4.0], [1.611331194E12, 13.0], [1.61133119E12, 6.0], [1.611331192E12, 6.0], [1.611331198E12, 44.0], [1.611331196E12, 23.0], [1.611331197E12, 5.0], [1.611331205E12, 2.0], [1.611331215E12, 1.0], [1.611331177E12, 3.0], [1.61133122E12, 23.0], [1.611331219E12, 1.0], [1.611331221E12, 191.0], [1.611331178E12, 11.0], [1.611331217E12, 6.0], [1.611331176E12, 6.0]], "isOverall": false, "label": "POST /graphql - Login-success", "isController": false}, {"data": [[1.611331182E12, 4.0], [1.611331184E12, 1.0], [1.61133118E12, 2.0], [1.611331185E12, 4.0]], "isOverall": false, "label": "POST /graphql - Login-failure", "isController": false}, {"data": [[1.611331182E12, 31.0], [1.611331183E12, 2.0], [1.61133118E12, 10.0], [1.611331179E12, 41.0], [1.611331181E12, 39.0], [1.611331187E12, 5.0], [1.611331185E12, 3.0], [1.611331172E12, 1.0], [1.611331171E12, 1.0], [1.611331173E12, 2.0], [1.611331169E12, 90.0], [1.61133117E12, 10.0], [1.611331177E12, 14.0], [1.611331178E12, 87.0], [1.611331174E12, 2.0], [1.611331176E12, 38.0], [1.611331175E12, 24.0]], "isOverall": false, "label": "GET /login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611331221E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.611331169E12, "maxY": 193.0, "series": [{"data": [[1.611331182E12, 32.0], [1.611331184E12, 3.0], [1.611331183E12, 13.0], [1.61133118E12, 17.0], [1.611331179E12, 61.0], [1.611331181E12, 45.0], [1.611331188E12, 9.0], [1.611331187E12, 7.0], [1.611331189E12, 1.0], [1.611331185E12, 7.0], [1.611331194E12, 13.0], [1.61133119E12, 6.0], [1.611331192E12, 6.0], [1.611331198E12, 44.0], [1.611331196E12, 23.0], [1.611331197E12, 5.0], [1.611331205E12, 2.0], [1.611331172E12, 19.0], [1.611331171E12, 15.0], [1.611331173E12, 25.0], [1.611331215E12, 1.0], [1.611331169E12, 193.0], [1.61133117E12, 13.0], [1.611331177E12, 41.0], [1.61133122E12, 23.0], [1.611331219E12, 1.0], [1.611331221E12, 191.0], [1.611331178E12, 150.0], [1.611331217E12, 6.0], [1.611331174E12, 45.0], [1.611331176E12, 116.0], [1.611331175E12, 56.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.611331182E12, 4.0], [1.611331184E12, 1.0], [1.61133118E12, 2.0], [1.611331185E12, 4.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611331221E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

