/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 55.0, "minX": 0.0, "maxY": 24908.0, "series": [{"data": [[0.0, 55.0], [0.1, 55.0], [0.2, 55.0], [0.3, 55.0], [0.4, 55.0], [0.5, 57.0], [0.6, 57.0], [0.7, 57.0], [0.8, 57.0], [0.9, 57.0], [1.0, 57.0], [1.1, 57.0], [1.2, 57.0], [1.3, 57.0], [1.4, 57.0], [1.5, 59.0], [1.6, 59.0], [1.7, 59.0], [1.8, 59.0], [1.9, 59.0], [2.0, 59.0], [2.1, 59.0], [2.2, 59.0], [2.3, 59.0], [2.4, 59.0], [2.5, 59.0], [2.6, 59.0], [2.7, 59.0], [2.8, 59.0], [2.9, 59.0], [3.0, 59.0], [3.1, 59.0], [3.2, 59.0], [3.3, 59.0], [3.4, 59.0], [3.5, 60.0], [3.6, 60.0], [3.7, 60.0], [3.8, 60.0], [3.9, 60.0], [4.0, 60.0], [4.1, 60.0], [4.2, 60.0], [4.3, 60.0], [4.4, 60.0], [4.5, 60.0], [4.6, 60.0], [4.7, 60.0], [4.8, 60.0], [4.9, 60.0], [5.0, 61.0], [5.1, 61.0], [5.2, 61.0], [5.3, 61.0], [5.4, 61.0], [5.5, 61.0], [5.6, 61.0], [5.7, 61.0], [5.8, 61.0], [5.9, 61.0], [6.0, 63.0], [6.1, 63.0], [6.2, 63.0], [6.3, 63.0], [6.4, 63.0], [6.5, 63.0], [6.6, 63.0], [6.7, 63.0], [6.8, 63.0], [6.9, 63.0], [7.0, 63.0], [7.1, 63.0], [7.2, 63.0], [7.3, 63.0], [7.4, 63.0], [7.5, 63.0], [7.6, 63.0], [7.7, 63.0], [7.8, 63.0], [7.9, 63.0], [8.0, 64.0], [8.1, 64.0], [8.2, 64.0], [8.3, 64.0], [8.4, 64.0], [8.5, 64.0], [8.6, 64.0], [8.7, 64.0], [8.8, 64.0], [8.9, 64.0], [9.0, 64.0], [9.1, 64.0], [9.2, 64.0], [9.3, 64.0], [9.4, 64.0], [9.5, 64.0], [9.6, 64.0], [9.7, 64.0], [9.8, 64.0], [9.9, 64.0], [10.0, 65.0], [10.1, 65.0], [10.2, 65.0], [10.3, 65.0], [10.4, 65.0], [10.5, 65.0], [10.6, 65.0], [10.7, 65.0], [10.8, 65.0], [10.9, 65.0], [11.0, 65.0], [11.1, 65.0], [11.2, 65.0], [11.3, 65.0], [11.4, 65.0], [11.5, 65.0], [11.6, 65.0], [11.7, 65.0], [11.8, 65.0], [11.9, 65.0], [12.0, 65.0], [12.1, 65.0], [12.2, 65.0], [12.3, 65.0], [12.4, 65.0], [12.5, 66.0], [12.6, 66.0], [12.7, 66.0], [12.8, 66.0], [12.9, 66.0], [13.0, 66.0], [13.1, 66.0], [13.2, 66.0], [13.3, 66.0], [13.4, 66.0], [13.5, 66.0], [13.6, 66.0], [13.7, 66.0], [13.8, 66.0], [13.9, 66.0], [14.0, 66.0], [14.1, 66.0], [14.2, 66.0], [14.3, 66.0], [14.4, 66.0], [14.5, 66.0], [14.6, 66.0], [14.7, 66.0], [14.8, 66.0], [14.9, 66.0], [15.0, 66.0], [15.1, 66.0], [15.2, 66.0], [15.3, 66.0], [15.4, 66.0], [15.5, 66.0], [15.6, 66.0], [15.7, 66.0], [15.8, 66.0], [15.9, 66.0], [16.0, 66.0], [16.1, 66.0], [16.2, 66.0], [16.3, 66.0], [16.4, 66.0], [16.5, 66.0], [16.6, 66.0], [16.7, 66.0], [16.8, 66.0], [16.9, 66.0], [17.0, 66.0], [17.1, 66.0], [17.2, 66.0], [17.3, 66.0], [17.4, 66.0], [17.5, 66.0], [17.6, 66.0], [17.7, 66.0], [17.8, 66.0], [17.9, 66.0], [18.0, 67.0], [18.1, 67.0], [18.2, 67.0], [18.3, 67.0], [18.4, 67.0], [18.5, 67.0], [18.6, 67.0], [18.7, 67.0], [18.8, 67.0], [18.9, 67.0], [19.0, 67.0], [19.1, 67.0], [19.2, 67.0], [19.3, 67.0], [19.4, 67.0], [19.5, 67.0], [19.6, 67.0], [19.7, 67.0], [19.8, 67.0], [19.9, 67.0], [20.0, 68.0], [20.1, 68.0], [20.2, 68.0], [20.3, 68.0], [20.4, 68.0], [20.5, 69.0], [20.6, 69.0], [20.7, 69.0], [20.8, 69.0], [20.9, 69.0], [21.0, 70.0], [21.1, 70.0], [21.2, 70.0], [21.3, 70.0], [21.4, 70.0], [21.5, 71.0], [21.6, 71.0], [21.7, 71.0], [21.8, 71.0], [21.9, 71.0], [22.0, 72.0], [22.1, 72.0], [22.2, 72.0], [22.3, 72.0], [22.4, 72.0], [22.5, 73.0], [22.6, 73.0], [22.7, 73.0], [22.8, 73.0], [22.9, 73.0], [23.0, 74.0], [23.1, 74.0], [23.2, 74.0], [23.3, 74.0], [23.4, 74.0], [23.5, 77.0], [23.6, 77.0], [23.7, 77.0], [23.8, 77.0], [23.9, 77.0], [24.0, 85.0], [24.1, 85.0], [24.2, 85.0], [24.3, 85.0], [24.4, 85.0], [24.5, 86.0], [24.6, 86.0], [24.7, 86.0], [24.8, 86.0], [24.9, 86.0], [25.0, 86.0], [25.1, 86.0], [25.2, 86.0], [25.3, 86.0], [25.4, 86.0], [25.5, 200.0], [25.6, 200.0], [25.7, 200.0], [25.8, 200.0], [25.9, 200.0], [26.0, 200.0], [26.1, 200.0], [26.2, 200.0], [26.3, 200.0], [26.4, 200.0], [26.5, 258.0], [26.6, 258.0], [26.7, 258.0], [26.8, 258.0], [26.9, 258.0], [27.0, 264.0], [27.1, 264.0], [27.2, 264.0], [27.3, 264.0], [27.4, 264.0], [27.5, 360.0], [27.6, 360.0], [27.7, 360.0], [27.8, 360.0], [27.9, 360.0], [28.0, 433.0], [28.1, 433.0], [28.2, 433.0], [28.3, 433.0], [28.4, 433.0], [28.5, 433.0], [28.6, 433.0], [28.7, 433.0], [28.8, 433.0], [28.9, 433.0], [29.0, 439.0], [29.1, 439.0], [29.2, 439.0], [29.3, 439.0], [29.4, 439.0], [29.5, 441.0], [29.6, 441.0], [29.7, 441.0], [29.8, 441.0], [29.9, 441.0], [30.0, 444.0], [30.1, 444.0], [30.2, 444.0], [30.3, 444.0], [30.4, 444.0], [30.5, 453.0], [30.6, 453.0], [30.7, 453.0], [30.8, 453.0], [30.9, 453.0], [31.0, 488.0], [31.1, 488.0], [31.2, 488.0], [31.3, 488.0], [31.4, 488.0], [31.5, 531.0], [31.6, 531.0], [31.7, 531.0], [31.8, 531.0], [31.9, 531.0], [32.0, 573.0], [32.1, 573.0], [32.2, 573.0], [32.3, 573.0], [32.4, 573.0], [32.5, 574.0], [32.6, 574.0], [32.7, 574.0], [32.8, 574.0], [32.9, 574.0], [33.0, 757.0], [33.1, 757.0], [33.2, 757.0], [33.3, 757.0], [33.4, 757.0], [33.5, 757.0], [33.6, 757.0], [33.7, 757.0], [33.8, 757.0], [33.9, 757.0], [34.0, 792.0], [34.1, 792.0], [34.2, 792.0], [34.3, 792.0], [34.4, 792.0], [34.5, 793.0], [34.6, 793.0], [34.7, 793.0], [34.8, 793.0], [34.9, 793.0], [35.0, 794.0], [35.1, 794.0], [35.2, 794.0], [35.3, 794.0], [35.4, 794.0], [35.5, 799.0], [35.6, 799.0], [35.7, 799.0], [35.8, 799.0], [35.9, 799.0], [36.0, 807.0], [36.1, 807.0], [36.2, 807.0], [36.3, 807.0], [36.4, 807.0], [36.5, 895.0], [36.6, 895.0], [36.7, 895.0], [36.8, 895.0], [36.9, 895.0], [37.0, 904.0], [37.1, 904.0], [37.2, 904.0], [37.3, 904.0], [37.4, 904.0], [37.5, 918.0], [37.6, 918.0], [37.7, 918.0], [37.8, 918.0], [37.9, 918.0], [38.0, 923.0], [38.1, 923.0], [38.2, 923.0], [38.3, 923.0], [38.4, 923.0], [38.5, 928.0], [38.6, 928.0], [38.7, 928.0], [38.8, 928.0], [38.9, 928.0], [39.0, 928.0], [39.1, 928.0], [39.2, 928.0], [39.3, 928.0], [39.4, 928.0], [39.5, 1066.0], [39.6, 1066.0], [39.7, 1066.0], [39.8, 1066.0], [39.9, 1066.0], [40.0, 1165.0], [40.1, 1165.0], [40.2, 1165.0], [40.3, 1165.0], [40.4, 1165.0], [40.5, 1165.0], [40.6, 1165.0], [40.7, 1165.0], [40.8, 1165.0], [40.9, 1165.0], [41.0, 1174.0], [41.1, 1174.0], [41.2, 1174.0], [41.3, 1174.0], [41.4, 1174.0], [41.5, 1192.0], [41.6, 1192.0], [41.7, 1192.0], [41.8, 1192.0], [41.9, 1192.0], [42.0, 1193.0], [42.1, 1193.0], [42.2, 1193.0], [42.3, 1193.0], [42.4, 1193.0], [42.5, 1193.0], [42.6, 1193.0], [42.7, 1193.0], [42.8, 1193.0], [42.9, 1193.0], [43.0, 1193.0], [43.1, 1193.0], [43.2, 1193.0], [43.3, 1193.0], [43.4, 1193.0], [43.5, 1194.0], [43.6, 1194.0], [43.7, 1194.0], [43.8, 1194.0], [43.9, 1194.0], [44.0, 1194.0], [44.1, 1194.0], [44.2, 1194.0], [44.3, 1194.0], [44.4, 1194.0], [44.5, 1194.0], [44.6, 1194.0], [44.7, 1194.0], [44.8, 1194.0], [44.9, 1194.0], [45.0, 1374.0], [45.1, 1374.0], [45.2, 1374.0], [45.3, 1374.0], [45.4, 1374.0], [45.5, 1374.0], [45.6, 1374.0], [45.7, 1374.0], [45.8, 1374.0], [45.9, 1374.0], [46.0, 1376.0], [46.1, 1376.0], [46.2, 1376.0], [46.3, 1376.0], [46.4, 1376.0], [46.5, 1413.0], [46.6, 1413.0], [46.7, 1413.0], [46.8, 1413.0], [46.9, 1413.0], [47.0, 1414.0], [47.1, 1414.0], [47.2, 1414.0], [47.3, 1414.0], [47.4, 1414.0], [47.5, 1414.0], [47.6, 1414.0], [47.7, 1414.0], [47.8, 1414.0], [47.9, 1414.0], [48.0, 1414.0], [48.1, 1414.0], [48.2, 1414.0], [48.3, 1414.0], [48.4, 1414.0], [48.5, 1415.0], [48.6, 1415.0], [48.7, 1415.0], [48.8, 1415.0], [48.9, 1415.0], [49.0, 1421.0], [49.1, 1421.0], [49.2, 1421.0], [49.3, 1421.0], [49.4, 1421.0], [49.5, 1422.0], [49.6, 1422.0], [49.7, 1422.0], [49.8, 1422.0], [49.9, 1422.0], [50.0, 1484.0], [50.1, 1484.0], [50.2, 1484.0], [50.3, 1484.0], [50.4, 1484.0], [50.5, 1512.0], [50.6, 1512.0], [50.7, 1512.0], [50.8, 1512.0], [50.9, 1512.0], [51.0, 1512.0], [51.1, 1512.0], [51.2, 1512.0], [51.3, 1512.0], [51.4, 1512.0], [51.5, 1554.0], [51.6, 1554.0], [51.7, 1554.0], [51.8, 1554.0], [51.9, 1554.0], [52.0, 1618.0], [52.1, 1618.0], [52.2, 1618.0], [52.3, 1618.0], [52.4, 1618.0], [52.5, 1622.0], [52.6, 1622.0], [52.7, 1622.0], [52.8, 1622.0], [52.9, 1622.0], [53.0, 1820.0], [53.1, 1820.0], [53.2, 1820.0], [53.3, 1820.0], [53.4, 1820.0], [53.5, 1821.0], [53.6, 1821.0], [53.7, 1821.0], [53.8, 1821.0], [53.9, 1821.0], [54.0, 1823.0], [54.1, 1823.0], [54.2, 1823.0], [54.3, 1823.0], [54.4, 1823.0], [54.5, 1839.0], [54.6, 1839.0], [54.7, 1839.0], [54.8, 1839.0], [54.9, 1839.0], [55.0, 1849.0], [55.1, 1849.0], [55.2, 1849.0], [55.3, 1849.0], [55.4, 1849.0], [55.5, 1857.0], [55.6, 1857.0], [55.7, 1857.0], [55.8, 1857.0], [55.9, 1857.0], [56.0, 1919.0], [56.1, 1919.0], [56.2, 1919.0], [56.3, 1919.0], [56.4, 1919.0], [56.5, 1920.0], [56.6, 1920.0], [56.7, 1920.0], [56.8, 1920.0], [56.9, 1920.0], [57.0, 1920.0], [57.1, 1920.0], [57.2, 1920.0], [57.3, 1920.0], [57.4, 1920.0], [57.5, 2045.0], [57.6, 2045.0], [57.7, 2045.0], [57.8, 2045.0], [57.9, 2045.0], [58.0, 2163.0], [58.1, 2163.0], [58.2, 2163.0], [58.3, 2163.0], [58.4, 2163.0], [58.5, 2166.0], [58.6, 2166.0], [58.7, 2166.0], [58.8, 2166.0], [58.9, 2166.0], [59.0, 2291.0], [59.1, 2291.0], [59.2, 2291.0], [59.3, 2291.0], [59.4, 2291.0], [59.5, 2363.0], [59.6, 2363.0], [59.7, 2363.0], [59.8, 2363.0], [59.9, 2363.0], [60.0, 2366.0], [60.1, 2366.0], [60.2, 2366.0], [60.3, 2366.0], [60.4, 2366.0], [60.5, 2366.0], [60.6, 2366.0], [60.7, 2366.0], [60.8, 2366.0], [60.9, 2366.0], [61.0, 2367.0], [61.1, 2367.0], [61.2, 2367.0], [61.3, 2367.0], [61.4, 2367.0], [61.5, 2367.0], [61.6, 2367.0], [61.7, 2367.0], [61.8, 2367.0], [61.9, 2367.0], [62.0, 2368.0], [62.1, 2368.0], [62.2, 2368.0], [62.3, 2368.0], [62.4, 2368.0], [62.5, 2375.0], [62.6, 2375.0], [62.7, 2375.0], [62.8, 2375.0], [62.9, 2375.0], [63.0, 2377.0], [63.1, 2377.0], [63.2, 2377.0], [63.3, 2377.0], [63.4, 2377.0], [63.5, 2433.0], [63.6, 2433.0], [63.7, 2433.0], [63.8, 2433.0], [63.9, 2433.0], [64.0, 2438.0], [64.1, 2438.0], [64.2, 2438.0], [64.3, 2438.0], [64.4, 2438.0], [64.5, 2439.0], [64.6, 2439.0], [64.7, 2439.0], [64.8, 2439.0], [64.9, 2439.0], [65.0, 2439.0], [65.1, 2439.0], [65.2, 2439.0], [65.3, 2439.0], [65.4, 2439.0], [65.5, 2440.0], [65.6, 2440.0], [65.7, 2440.0], [65.8, 2440.0], [65.9, 2440.0], [66.0, 2441.0], [66.1, 2441.0], [66.2, 2441.0], [66.3, 2441.0], [66.4, 2441.0], [66.5, 2441.0], [66.6, 2441.0], [66.7, 2441.0], [66.8, 2441.0], [66.9, 2441.0], [67.0, 2441.0], [67.1, 2441.0], [67.2, 2441.0], [67.3, 2441.0], [67.4, 2441.0], [67.5, 2604.0], [67.6, 2604.0], [67.7, 2604.0], [67.8, 2604.0], [67.9, 2604.0], [68.0, 2604.0], [68.1, 2604.0], [68.2, 2604.0], [68.3, 2604.0], [68.4, 2604.0], [68.5, 2615.0], [68.6, 2615.0], [68.7, 2615.0], [68.8, 2615.0], [68.9, 2615.0], [69.0, 2670.0], [69.1, 2670.0], [69.2, 2670.0], [69.3, 2670.0], [69.4, 2670.0], [69.5, 2671.0], [69.6, 2671.0], [69.7, 2671.0], [69.8, 2671.0], [69.9, 2671.0], [70.0, 2671.0], [70.1, 2671.0], [70.2, 2671.0], [70.3, 2671.0], [70.4, 2671.0], [70.5, 2721.0], [70.6, 2721.0], [70.7, 2721.0], [70.8, 2721.0], [70.9, 2721.0], [71.0, 2765.0], [71.1, 2765.0], [71.2, 2765.0], [71.3, 2765.0], [71.4, 2765.0], [71.5, 2765.0], [71.6, 2765.0], [71.7, 2765.0], [71.8, 2765.0], [71.9, 2765.0], [72.0, 2765.0], [72.1, 2765.0], [72.2, 2765.0], [72.3, 2765.0], [72.4, 2765.0], [72.5, 2766.0], [72.6, 2766.0], [72.7, 2766.0], [72.8, 2766.0], [72.9, 2766.0], [73.0, 2838.0], [73.1, 2838.0], [73.2, 2838.0], [73.3, 2838.0], [73.4, 2838.0], [73.5, 2838.0], [73.6, 2838.0], [73.7, 2838.0], [73.8, 2838.0], [73.9, 2838.0], [74.0, 2844.0], [74.1, 2844.0], [74.2, 2844.0], [74.3, 2844.0], [74.4, 2844.0], [74.5, 2864.0], [74.6, 2864.0], [74.7, 2864.0], [74.8, 2864.0], [74.9, 2864.0], [75.0, 2864.0], [75.1, 2864.0], [75.2, 2864.0], [75.3, 2864.0], [75.4, 2864.0], [75.5, 2952.0], [75.6, 2952.0], [75.7, 2952.0], [75.8, 2952.0], [75.9, 2952.0], [76.0, 3027.0], [76.1, 3027.0], [76.2, 3027.0], [76.3, 3027.0], [76.4, 3027.0], [76.5, 3034.0], [76.6, 3034.0], [76.7, 3034.0], [76.8, 3034.0], [76.9, 3034.0], [77.0, 3042.0], [77.1, 3042.0], [77.2, 3042.0], [77.3, 3042.0], [77.4, 3042.0], [77.5, 3093.0], [77.6, 3093.0], [77.7, 3093.0], [77.8, 3093.0], [77.9, 3093.0], [78.0, 3134.0], [78.1, 3134.0], [78.2, 3134.0], [78.3, 3134.0], [78.4, 3134.0], [78.5, 3142.0], [78.6, 3142.0], [78.7, 3142.0], [78.8, 3142.0], [78.9, 3142.0], [79.0, 3142.0], [79.1, 3142.0], [79.2, 3142.0], [79.3, 3142.0], [79.4, 3142.0], [79.5, 3143.0], [79.6, 3143.0], [79.7, 3143.0], [79.8, 3143.0], [79.9, 3143.0], [80.0, 3196.0], [80.1, 3196.0], [80.2, 3196.0], [80.3, 3196.0], [80.4, 3196.0], [80.5, 3197.0], [80.6, 3197.0], [80.7, 3197.0], [80.8, 3197.0], [80.9, 3197.0], [81.0, 3197.0], [81.1, 3197.0], [81.2, 3197.0], [81.3, 3197.0], [81.4, 3197.0], [81.5, 3198.0], [81.6, 3198.0], [81.7, 3198.0], [81.8, 3198.0], [81.9, 3198.0], [82.0, 3434.0], [82.1, 3434.0], [82.2, 3434.0], [82.3, 3434.0], [82.4, 3434.0], [82.5, 3575.0], [82.6, 3575.0], [82.7, 3575.0], [82.8, 3575.0], [82.9, 3575.0], [83.0, 3575.0], [83.1, 3575.0], [83.2, 3575.0], [83.3, 3575.0], [83.4, 3575.0], [83.5, 3719.0], [83.6, 3719.0], [83.7, 3719.0], [83.8, 3719.0], [83.9, 3719.0], [84.0, 3786.0], [84.1, 3786.0], [84.2, 3786.0], [84.3, 3786.0], [84.4, 3786.0], [84.5, 4015.0], [84.6, 4015.0], [84.7, 4015.0], [84.8, 4015.0], [84.9, 4015.0], [85.0, 4504.0], [85.1, 4504.0], [85.2, 4504.0], [85.3, 4504.0], [85.4, 4504.0], [85.5, 4504.0], [85.6, 4504.0], [85.7, 4504.0], [85.8, 4504.0], [85.9, 4504.0], [86.0, 4505.0], [86.1, 4505.0], [86.2, 4505.0], [86.3, 4505.0], [86.4, 4505.0], [86.5, 4657.0], [86.6, 4657.0], [86.7, 4657.0], [86.8, 4657.0], [86.9, 4657.0], [87.0, 4782.0], [87.1, 4782.0], [87.2, 4782.0], [87.3, 4782.0], [87.4, 4782.0], [87.5, 4784.0], [87.6, 4784.0], [87.7, 4784.0], [87.8, 4784.0], [87.9, 4784.0], [88.0, 4784.0], [88.1, 4784.0], [88.2, 4784.0], [88.3, 4784.0], [88.4, 4784.0], [88.5, 4784.0], [88.6, 4784.0], [88.7, 4784.0], [88.8, 4784.0], [88.9, 4784.0], [89.0, 4786.0], [89.1, 4786.0], [89.2, 4786.0], [89.3, 4786.0], [89.4, 4786.0], [89.5, 4822.0], [89.6, 4822.0], [89.7, 4822.0], [89.8, 4822.0], [89.9, 4822.0], [90.0, 4824.0], [90.1, 4824.0], [90.2, 4824.0], [90.3, 4824.0], [90.4, 4824.0], [90.5, 4836.0], [90.6, 4836.0], [90.7, 4836.0], [90.8, 4836.0], [90.9, 4836.0], [91.0, 5104.0], [91.1, 5104.0], [91.2, 5104.0], [91.3, 5104.0], [91.4, 5104.0], [91.5, 5326.0], [91.6, 5326.0], [91.7, 5326.0], [91.8, 5326.0], [91.9, 5326.0], [92.0, 5328.0], [92.1, 5328.0], [92.2, 5328.0], [92.3, 5328.0], [92.4, 5328.0], [92.5, 5329.0], [92.6, 5329.0], [92.7, 5329.0], [92.8, 5329.0], [92.9, 5329.0], [93.0, 5329.0], [93.1, 5329.0], [93.2, 5329.0], [93.3, 5329.0], [93.4, 5329.0], [93.5, 5337.0], [93.6, 5337.0], [93.7, 5337.0], [93.8, 5337.0], [93.9, 5337.0], [94.0, 5338.0], [94.1, 5338.0], [94.2, 5338.0], [94.3, 5338.0], [94.4, 5338.0], [94.5, 5422.0], [94.6, 5422.0], [94.7, 5422.0], [94.8, 5422.0], [94.9, 5422.0], [95.0, 5423.0], [95.1, 5423.0], [95.2, 5423.0], [95.3, 5423.0], [95.4, 5423.0], [95.5, 5424.0], [95.6, 5424.0], [95.7, 5424.0], [95.8, 5424.0], [95.9, 5424.0], [96.0, 5431.0], [96.1, 5431.0], [96.2, 5431.0], [96.3, 5431.0], [96.4, 5431.0], [96.5, 5431.0], [96.6, 5431.0], [96.7, 5431.0], [96.8, 5431.0], [96.9, 5431.0], [97.0, 6071.0], [97.1, 6071.0], [97.2, 6071.0], [97.3, 6071.0], [97.4, 6071.0], [97.5, 6232.0], [97.6, 6232.0], [97.7, 6232.0], [97.8, 6232.0], [97.9, 6232.0], [98.0, 6233.0], [98.1, 6233.0], [98.2, 6233.0], [98.3, 6233.0], [98.4, 6233.0], [98.5, 6233.0], [98.6, 6233.0], [98.7, 6233.0], [98.8, 6233.0], [98.9, 6233.0], [99.0, 6233.0], [99.1, 6233.0], [99.2, 6233.0], [99.3, 6233.0], [99.4, 6233.0], [99.5, 6332.0], [99.6, 6332.0], [99.7, 6332.0], [99.8, 6332.0], [99.9, 6332.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[0.0, 524.0], [0.1, 524.0], [0.2, 524.0], [0.3, 524.0], [0.4, 524.0], [0.5, 1199.0], [0.6, 1199.0], [0.7, 1199.0], [0.8, 1199.0], [0.9, 1199.0], [1.0, 1422.0], [1.1, 1422.0], [1.2, 1422.0], [1.3, 1422.0], [1.4, 1422.0], [1.5, 1512.0], [1.6, 1512.0], [1.7, 1512.0], [1.8, 1512.0], [1.9, 1512.0], [2.0, 1513.0], [2.1, 1513.0], [2.2, 1513.0], [2.3, 1513.0], [2.4, 1513.0], [2.5, 1521.0], [2.6, 1521.0], [2.7, 1521.0], [2.8, 1521.0], [2.9, 1521.0], [3.0, 1560.0], [3.1, 1560.0], [3.2, 1560.0], [3.3, 1560.0], [3.4, 1560.0], [3.5, 1864.0], [3.6, 1864.0], [3.7, 1864.0], [3.8, 1864.0], [3.9, 1864.0], [4.0, 1864.0], [4.1, 1864.0], [4.2, 1864.0], [4.3, 1864.0], [4.4, 1864.0], [4.5, 2348.0], [4.6, 2348.0], [4.7, 2348.0], [4.8, 2348.0], [4.9, 2348.0], [5.0, 2584.0], [5.1, 2584.0], [5.2, 2584.0], [5.3, 2584.0], [5.4, 2584.0], [5.5, 2585.0], [5.6, 2585.0], [5.7, 2585.0], [5.8, 2585.0], [5.9, 2585.0], [6.0, 2585.0], [6.1, 2585.0], [6.2, 2585.0], [6.3, 2585.0], [6.4, 2585.0], [6.5, 2588.0], [6.6, 2588.0], [6.7, 2588.0], [6.8, 2588.0], [6.9, 2588.0], [7.0, 2590.0], [7.1, 2590.0], [7.2, 2590.0], [7.3, 2590.0], [7.4, 2590.0], [7.5, 2595.0], [7.6, 2595.0], [7.7, 2595.0], [7.8, 2595.0], [7.9, 2595.0], [8.0, 2787.0], [8.1, 2787.0], [8.2, 2787.0], [8.3, 2787.0], [8.4, 2787.0], [8.5, 3440.0], [8.6, 3440.0], [8.7, 3440.0], [8.8, 3440.0], [8.9, 3440.0], [9.0, 3569.0], [9.1, 3569.0], [9.2, 3569.0], [9.3, 3569.0], [9.4, 3569.0], [9.5, 3945.0], [9.6, 3945.0], [9.7, 3945.0], [9.8, 3945.0], [9.9, 3945.0], [10.0, 4054.0], [10.1, 4054.0], [10.2, 4054.0], [10.3, 4054.0], [10.4, 4054.0], [10.5, 4054.0], [10.6, 4054.0], [10.7, 4054.0], [10.8, 4054.0], [10.9, 4054.0], [11.0, 4070.0], [11.1, 4070.0], [11.2, 4070.0], [11.3, 4070.0], [11.4, 4070.0], [11.5, 4073.0], [11.6, 4073.0], [11.7, 4073.0], [11.8, 4073.0], [11.9, 4073.0], [12.0, 4099.0], [12.1, 4099.0], [12.2, 4099.0], [12.3, 4099.0], [12.4, 4099.0], [12.5, 4408.0], [12.6, 4408.0], [12.7, 4408.0], [12.8, 4408.0], [12.9, 4408.0], [13.0, 4595.0], [13.1, 4595.0], [13.2, 4595.0], [13.3, 4595.0], [13.4, 4595.0], [13.5, 4700.0], [13.6, 4700.0], [13.7, 4700.0], [13.8, 4700.0], [13.9, 4700.0], [14.0, 4701.0], [14.1, 4701.0], [14.2, 4701.0], [14.3, 4701.0], [14.4, 4701.0], [14.5, 4708.0], [14.6, 4708.0], [14.7, 4708.0], [14.8, 4708.0], [14.9, 4708.0], [15.0, 4796.0], [15.1, 4796.0], [15.2, 4796.0], [15.3, 4796.0], [15.4, 4796.0], [15.5, 4826.0], [15.6, 4826.0], [15.7, 4826.0], [15.8, 4826.0], [15.9, 4826.0], [16.0, 4881.0], [16.1, 4881.0], [16.2, 4881.0], [16.3, 4881.0], [16.4, 4881.0], [16.5, 5023.0], [16.6, 5023.0], [16.7, 5023.0], [16.8, 5023.0], [16.9, 5023.0], [17.0, 5023.0], [17.1, 5023.0], [17.2, 5023.0], [17.3, 5023.0], [17.4, 5023.0], [17.5, 5023.0], [17.6, 5023.0], [17.7, 5023.0], [17.8, 5023.0], [17.9, 5023.0], [18.0, 5080.0], [18.1, 5080.0], [18.2, 5080.0], [18.3, 5080.0], [18.4, 5080.0], [18.5, 5234.0], [18.6, 5234.0], [18.7, 5234.0], [18.8, 5234.0], [18.9, 5234.0], [19.0, 5327.0], [19.1, 5327.0], [19.2, 5327.0], [19.3, 5327.0], [19.4, 5327.0], [19.5, 5528.0], [19.6, 5528.0], [19.7, 5528.0], [19.8, 5528.0], [19.9, 5528.0], [20.0, 5529.0], [20.1, 5529.0], [20.2, 5529.0], [20.3, 5529.0], [20.4, 5529.0], [20.5, 5557.0], [20.6, 5557.0], [20.7, 5557.0], [20.8, 5557.0], [20.9, 5557.0], [21.0, 5557.0], [21.1, 5557.0], [21.2, 5557.0], [21.3, 5557.0], [21.4, 5557.0], [21.5, 5623.0], [21.6, 5623.0], [21.7, 5623.0], [21.8, 5623.0], [21.9, 5623.0], [22.0, 5624.0], [22.1, 5624.0], [22.2, 5624.0], [22.3, 5624.0], [22.4, 5624.0], [22.5, 5624.0], [22.6, 5624.0], [22.7, 5624.0], [22.8, 5624.0], [22.9, 5624.0], [23.0, 5774.0], [23.1, 5774.0], [23.2, 5774.0], [23.3, 5774.0], [23.4, 5774.0], [23.5, 5810.0], [23.6, 5810.0], [23.7, 5810.0], [23.8, 5810.0], [23.9, 5810.0], [24.0, 5912.0], [24.1, 5912.0], [24.2, 5912.0], [24.3, 5912.0], [24.4, 5912.0], [24.5, 6285.0], [24.6, 6285.0], [24.7, 6285.0], [24.8, 6285.0], [24.9, 6285.0], [25.0, 6286.0], [25.1, 6286.0], [25.2, 6286.0], [25.3, 6286.0], [25.4, 6286.0], [25.5, 6286.0], [25.6, 6286.0], [25.7, 6286.0], [25.8, 6286.0], [25.9, 6286.0], [26.0, 6292.0], [26.1, 6292.0], [26.2, 6292.0], [26.3, 6292.0], [26.4, 6292.0], [26.5, 6293.0], [26.6, 6293.0], [26.7, 6293.0], [26.8, 6293.0], [26.9, 6293.0], [27.0, 6293.0], [27.1, 6293.0], [27.2, 6293.0], [27.3, 6293.0], [27.4, 6293.0], [27.5, 6300.0], [27.6, 6300.0], [27.7, 6300.0], [27.8, 6300.0], [27.9, 6300.0], [28.0, 6429.0], [28.1, 6429.0], [28.2, 6429.0], [28.3, 6429.0], [28.4, 6429.0], [28.5, 6491.0], [28.6, 6491.0], [28.7, 6491.0], [28.8, 6491.0], [28.9, 6491.0], [29.0, 6515.0], [29.1, 6515.0], [29.2, 6515.0], [29.3, 6515.0], [29.4, 6515.0], [29.5, 6527.0], [29.6, 6527.0], [29.7, 6527.0], [29.8, 6527.0], [29.9, 6527.0], [30.0, 6635.0], [30.1, 6635.0], [30.2, 6635.0], [30.3, 6635.0], [30.4, 6635.0], [30.5, 6635.0], [30.6, 6635.0], [30.7, 6635.0], [30.8, 6635.0], [30.9, 6635.0], [31.0, 6757.0], [31.1, 6757.0], [31.2, 6757.0], [31.3, 6757.0], [31.4, 6757.0], [31.5, 6895.0], [31.6, 6895.0], [31.7, 6895.0], [31.8, 6895.0], [31.9, 6895.0], [32.0, 6959.0], [32.1, 6959.0], [32.2, 6959.0], [32.3, 6959.0], [32.4, 6959.0], [32.5, 6961.0], [32.6, 6961.0], [32.7, 6961.0], [32.8, 6961.0], [32.9, 6961.0], [33.0, 6961.0], [33.1, 6961.0], [33.2, 6961.0], [33.3, 6961.0], [33.4, 6961.0], [33.5, 6969.0], [33.6, 6969.0], [33.7, 6969.0], [33.8, 6969.0], [33.9, 6969.0], [34.0, 7038.0], [34.1, 7038.0], [34.2, 7038.0], [34.3, 7038.0], [34.4, 7038.0], [34.5, 7060.0], [34.6, 7060.0], [34.7, 7060.0], [34.8, 7060.0], [34.9, 7060.0], [35.0, 7122.0], [35.1, 7122.0], [35.2, 7122.0], [35.3, 7122.0], [35.4, 7122.0], [35.5, 7205.0], [35.6, 7205.0], [35.7, 7205.0], [35.8, 7205.0], [35.9, 7205.0], [36.0, 7227.0], [36.1, 7227.0], [36.2, 7227.0], [36.3, 7227.0], [36.4, 7227.0], [36.5, 7448.0], [36.6, 7448.0], [36.7, 7448.0], [36.8, 7448.0], [36.9, 7448.0], [37.0, 7827.0], [37.1, 7827.0], [37.2, 7827.0], [37.3, 7827.0], [37.4, 7827.0], [37.5, 7828.0], [37.6, 7828.0], [37.7, 7828.0], [37.8, 7828.0], [37.9, 7828.0], [38.0, 7830.0], [38.1, 7830.0], [38.2, 7830.0], [38.3, 7830.0], [38.4, 7830.0], [38.5, 7837.0], [38.6, 7837.0], [38.7, 7837.0], [38.8, 7837.0], [38.9, 7837.0], [39.0, 8668.0], [39.1, 8668.0], [39.2, 8668.0], [39.3, 8668.0], [39.4, 8668.0], [39.5, 8673.0], [39.6, 8673.0], [39.7, 8673.0], [39.8, 8673.0], [39.9, 8673.0], [40.0, 8676.0], [40.1, 8676.0], [40.2, 8676.0], [40.3, 8676.0], [40.4, 8676.0], [40.5, 10375.0], [40.6, 10375.0], [40.7, 10375.0], [40.8, 10375.0], [40.9, 10375.0], [41.0, 11830.0], [41.1, 11830.0], [41.2, 11830.0], [41.3, 11830.0], [41.4, 11830.0], [41.5, 11833.0], [41.6, 11833.0], [41.7, 11833.0], [41.8, 11833.0], [41.9, 11833.0], [42.0, 11836.0], [42.1, 11836.0], [42.2, 11836.0], [42.3, 11836.0], [42.4, 11836.0], [42.5, 11842.0], [42.6, 11842.0], [42.7, 11842.0], [42.8, 11842.0], [42.9, 11842.0], [43.0, 11846.0], [43.1, 11846.0], [43.2, 11846.0], [43.3, 11846.0], [43.4, 11846.0], [43.5, 11850.0], [43.6, 11850.0], [43.7, 11850.0], [43.8, 11850.0], [43.9, 11850.0], [44.0, 11855.0], [44.1, 11855.0], [44.2, 11855.0], [44.3, 11855.0], [44.4, 11855.0], [44.5, 12341.0], [44.6, 12341.0], [44.7, 12341.0], [44.8, 12341.0], [44.9, 12341.0], [45.0, 13710.0], [45.1, 13710.0], [45.2, 13710.0], [45.3, 13710.0], [45.4, 13710.0], [45.5, 14063.0], [45.6, 14063.0], [45.7, 14063.0], [45.8, 14063.0], [45.9, 14063.0], [46.0, 14126.0], [46.1, 14126.0], [46.2, 14126.0], [46.3, 14126.0], [46.4, 14126.0], [46.5, 14383.0], [46.6, 14383.0], [46.7, 14383.0], [46.8, 14383.0], [46.9, 14383.0], [47.0, 14615.0], [47.1, 14615.0], [47.2, 14615.0], [47.3, 14615.0], [47.4, 14615.0], [47.5, 15360.0], [47.6, 15360.0], [47.7, 15360.0], [47.8, 15360.0], [47.9, 15360.0], [48.0, 15591.0], [48.1, 15591.0], [48.2, 15591.0], [48.3, 15591.0], [48.4, 15591.0], [48.5, 15695.0], [48.6, 15695.0], [48.7, 15695.0], [48.8, 15695.0], [48.9, 15695.0], [49.0, 15704.0], [49.1, 15704.0], [49.2, 15704.0], [49.3, 15704.0], [49.4, 15704.0], [49.5, 16081.0], [49.6, 16081.0], [49.7, 16081.0], [49.8, 16081.0], [49.9, 16081.0], [50.0, 16166.0], [50.1, 16166.0], [50.2, 16166.0], [50.3, 16166.0], [50.4, 16166.0], [50.5, 16172.0], [50.6, 16172.0], [50.7, 16172.0], [50.8, 16172.0], [50.9, 16172.0], [51.0, 16172.0], [51.1, 16172.0], [51.2, 16172.0], [51.3, 16172.0], [51.4, 16172.0], [51.5, 16173.0], [51.6, 16173.0], [51.7, 16173.0], [51.8, 16173.0], [51.9, 16173.0], [52.0, 16183.0], [52.1, 16183.0], [52.2, 16183.0], [52.3, 16183.0], [52.4, 16183.0], [52.5, 16211.0], [52.6, 16211.0], [52.7, 16211.0], [52.8, 16211.0], [52.9, 16211.0], [53.0, 16281.0], [53.1, 16281.0], [53.2, 16281.0], [53.3, 16281.0], [53.4, 16281.0], [53.5, 16309.0], [53.6, 16309.0], [53.7, 16309.0], [53.8, 16309.0], [53.9, 16309.0], [54.0, 16310.0], [54.1, 16310.0], [54.2, 16310.0], [54.3, 16310.0], [54.4, 16310.0], [54.5, 16705.0], [54.6, 16705.0], [54.7, 16705.0], [54.8, 16705.0], [54.9, 16705.0], [55.0, 16707.0], [55.1, 16707.0], [55.2, 16707.0], [55.3, 16707.0], [55.4, 16707.0], [55.5, 17020.0], [55.6, 17020.0], [55.7, 17020.0], [55.8, 17020.0], [55.9, 17020.0], [56.0, 17073.0], [56.1, 17073.0], [56.2, 17073.0], [56.3, 17073.0], [56.4, 17073.0], [56.5, 17482.0], [56.6, 17482.0], [56.7, 17482.0], [56.8, 17482.0], [56.9, 17482.0], [57.0, 17495.0], [57.1, 17495.0], [57.2, 17495.0], [57.3, 17495.0], [57.4, 17495.0], [57.5, 17715.0], [57.6, 17715.0], [57.7, 17715.0], [57.8, 17715.0], [57.9, 17715.0], [58.0, 17979.0], [58.1, 17979.0], [58.2, 17979.0], [58.3, 17979.0], [58.4, 17979.0], [58.5, 17979.0], [58.6, 17979.0], [58.7, 17979.0], [58.8, 17979.0], [58.9, 17979.0], [59.0, 17984.0], [59.1, 17984.0], [59.2, 17984.0], [59.3, 17984.0], [59.4, 17984.0], [59.5, 18019.0], [59.6, 18019.0], [59.7, 18019.0], [59.8, 18019.0], [59.9, 18019.0], [60.0, 18267.0], [60.1, 18267.0], [60.2, 18267.0], [60.3, 18267.0], [60.4, 18267.0], [60.5, 18290.0], [60.6, 18290.0], [60.7, 18290.0], [60.8, 18290.0], [60.9, 18290.0], [61.0, 18304.0], [61.1, 18304.0], [61.2, 18304.0], [61.3, 18304.0], [61.4, 18304.0], [61.5, 18325.0], [61.6, 18325.0], [61.7, 18325.0], [61.8, 18325.0], [61.9, 18325.0], [62.0, 18334.0], [62.1, 18334.0], [62.2, 18334.0], [62.3, 18334.0], [62.4, 18334.0], [62.5, 18445.0], [62.6, 18445.0], [62.7, 18445.0], [62.8, 18445.0], [62.9, 18445.0], [63.0, 18468.0], [63.1, 18468.0], [63.2, 18468.0], [63.3, 18468.0], [63.4, 18468.0], [63.5, 18580.0], [63.6, 18580.0], [63.7, 18580.0], [63.8, 18580.0], [63.9, 18580.0], [64.0, 18621.0], [64.1, 18621.0], [64.2, 18621.0], [64.3, 18621.0], [64.4, 18621.0], [64.5, 18968.0], [64.6, 18968.0], [64.7, 18968.0], [64.8, 18968.0], [64.9, 18968.0], [65.0, 19030.0], [65.1, 19030.0], [65.2, 19030.0], [65.3, 19030.0], [65.4, 19030.0], [65.5, 19053.0], [65.6, 19053.0], [65.7, 19053.0], [65.8, 19053.0], [65.9, 19053.0], [66.0, 19055.0], [66.1, 19055.0], [66.2, 19055.0], [66.3, 19055.0], [66.4, 19055.0], [66.5, 19056.0], [66.6, 19056.0], [66.7, 19056.0], [66.8, 19056.0], [66.9, 19056.0], [67.0, 19083.0], [67.1, 19083.0], [67.2, 19083.0], [67.3, 19083.0], [67.4, 19083.0], [67.5, 19099.0], [67.6, 19099.0], [67.7, 19099.0], [67.8, 19099.0], [67.9, 19099.0], [68.0, 19108.0], [68.1, 19108.0], [68.2, 19108.0], [68.3, 19108.0], [68.4, 19108.0], [68.5, 19123.0], [68.6, 19123.0], [68.7, 19123.0], [68.8, 19123.0], [68.9, 19123.0], [69.0, 19201.0], [69.1, 19201.0], [69.2, 19201.0], [69.3, 19201.0], [69.4, 19201.0], [69.5, 19204.0], [69.6, 19204.0], [69.7, 19204.0], [69.8, 19204.0], [69.9, 19204.0], [70.0, 19236.0], [70.1, 19236.0], [70.2, 19236.0], [70.3, 19236.0], [70.4, 19236.0], [70.5, 19326.0], [70.6, 19326.0], [70.7, 19326.0], [70.8, 19326.0], [70.9, 19326.0], [71.0, 19399.0], [71.1, 19399.0], [71.2, 19399.0], [71.3, 19399.0], [71.4, 19399.0], [71.5, 19421.0], [71.6, 19421.0], [71.7, 19421.0], [71.8, 19421.0], [71.9, 19421.0], [72.0, 19421.0], [72.1, 19421.0], [72.2, 19421.0], [72.3, 19421.0], [72.4, 19421.0], [72.5, 19446.0], [72.6, 19446.0], [72.7, 19446.0], [72.8, 19446.0], [72.9, 19446.0], [73.0, 19494.0], [73.1, 19494.0], [73.2, 19494.0], [73.3, 19494.0], [73.4, 19494.0], [73.5, 19513.0], [73.6, 19513.0], [73.7, 19513.0], [73.8, 19513.0], [73.9, 19513.0], [74.0, 19570.0], [74.1, 19570.0], [74.2, 19570.0], [74.3, 19570.0], [74.4, 19570.0], [74.5, 19581.0], [74.6, 19581.0], [74.7, 19581.0], [74.8, 19581.0], [74.9, 19581.0], [75.0, 19626.0], [75.1, 19626.0], [75.2, 19626.0], [75.3, 19626.0], [75.4, 19626.0], [75.5, 19654.0], [75.6, 19654.0], [75.7, 19654.0], [75.8, 19654.0], [75.9, 19654.0], [76.0, 19734.0], [76.1, 19734.0], [76.2, 19734.0], [76.3, 19734.0], [76.4, 19734.0], [76.5, 19756.0], [76.6, 19756.0], [76.7, 19756.0], [76.8, 19756.0], [76.9, 19756.0], [77.0, 19765.0], [77.1, 19765.0], [77.2, 19765.0], [77.3, 19765.0], [77.4, 19765.0], [77.5, 19792.0], [77.6, 19792.0], [77.7, 19792.0], [77.8, 19792.0], [77.9, 19792.0], [78.0, 19811.0], [78.1, 19811.0], [78.2, 19811.0], [78.3, 19811.0], [78.4, 19811.0], [78.5, 19820.0], [78.6, 19820.0], [78.7, 19820.0], [78.8, 19820.0], [78.9, 19820.0], [79.0, 19883.0], [79.1, 19883.0], [79.2, 19883.0], [79.3, 19883.0], [79.4, 19883.0], [79.5, 19894.0], [79.6, 19894.0], [79.7, 19894.0], [79.8, 19894.0], [79.9, 19894.0], [80.0, 19905.0], [80.1, 19905.0], [80.2, 19905.0], [80.3, 19905.0], [80.4, 19905.0], [80.5, 20288.0], [80.6, 20288.0], [80.7, 20288.0], [80.8, 20288.0], [80.9, 20288.0], [81.0, 20441.0], [81.1, 20441.0], [81.2, 20441.0], [81.3, 20441.0], [81.4, 20441.0], [81.5, 20731.0], [81.6, 20731.0], [81.7, 20731.0], [81.8, 20731.0], [81.9, 20731.0], [82.0, 20742.0], [82.1, 20742.0], [82.2, 20742.0], [82.3, 20742.0], [82.4, 20742.0], [82.5, 21111.0], [82.6, 21111.0], [82.7, 21111.0], [82.8, 21111.0], [82.9, 21111.0], [83.0, 21111.0], [83.1, 21111.0], [83.2, 21111.0], [83.3, 21111.0], [83.4, 21111.0], [83.5, 21123.0], [83.6, 21123.0], [83.7, 21123.0], [83.8, 21123.0], [83.9, 21123.0], [84.0, 21294.0], [84.1, 21294.0], [84.2, 21294.0], [84.3, 21294.0], [84.4, 21294.0], [84.5, 21294.0], [84.6, 21294.0], [84.7, 21294.0], [84.8, 21294.0], [84.9, 21294.0], [85.0, 21339.0], [85.1, 21339.0], [85.2, 21339.0], [85.3, 21339.0], [85.4, 21339.0], [85.5, 21835.0], [85.6, 21835.0], [85.7, 21835.0], [85.8, 21835.0], [85.9, 21835.0], [86.0, 21842.0], [86.1, 21842.0], [86.2, 21842.0], [86.3, 21842.0], [86.4, 21842.0], [86.5, 21924.0], [86.6, 21924.0], [86.7, 21924.0], [86.8, 21924.0], [86.9, 21924.0], [87.0, 21932.0], [87.1, 21932.0], [87.2, 21932.0], [87.3, 21932.0], [87.4, 21932.0], [87.5, 22086.0], [87.6, 22086.0], [87.7, 22086.0], [87.8, 22086.0], [87.9, 22086.0], [88.0, 22087.0], [88.1, 22087.0], [88.2, 22087.0], [88.3, 22087.0], [88.4, 22087.0], [88.5, 22094.0], [88.6, 22094.0], [88.7, 22094.0], [88.8, 22094.0], [88.9, 22094.0], [89.0, 22200.0], [89.1, 22200.0], [89.2, 22200.0], [89.3, 22200.0], [89.4, 22200.0], [89.5, 22201.0], [89.6, 22201.0], [89.7, 22201.0], [89.8, 22201.0], [89.9, 22201.0], [90.0, 22202.0], [90.1, 22202.0], [90.2, 22202.0], [90.3, 22202.0], [90.4, 22202.0], [90.5, 22484.0], [90.6, 22484.0], [90.7, 22484.0], [90.8, 22484.0], [90.9, 22484.0], [91.0, 22680.0], [91.1, 22680.0], [91.2, 22680.0], [91.3, 22680.0], [91.4, 22680.0], [91.5, 22704.0], [91.6, 22704.0], [91.7, 22704.0], [91.8, 22704.0], [91.9, 22704.0], [92.0, 22704.0], [92.1, 22704.0], [92.2, 22704.0], [92.3, 22704.0], [92.4, 22704.0], [92.5, 22705.0], [92.6, 22705.0], [92.7, 22705.0], [92.8, 22705.0], [92.9, 22705.0], [93.0, 22705.0], [93.1, 22705.0], [93.2, 22705.0], [93.3, 22705.0], [93.4, 22705.0], [93.5, 22706.0], [93.6, 22706.0], [93.7, 22706.0], [93.8, 22706.0], [93.9, 22706.0], [94.0, 22706.0], [94.1, 22706.0], [94.2, 22706.0], [94.3, 22706.0], [94.4, 22706.0], [94.5, 22713.0], [94.6, 22713.0], [94.7, 22713.0], [94.8, 22713.0], [94.9, 22713.0], [95.0, 22845.0], [95.1, 22845.0], [95.2, 22845.0], [95.3, 22845.0], [95.4, 22845.0], [95.5, 23137.0], [95.6, 23137.0], [95.7, 23137.0], [95.8, 23137.0], [95.9, 23137.0], [96.0, 23362.0], [96.1, 23362.0], [96.2, 23362.0], [96.3, 23362.0], [96.4, 23362.0], [96.5, 23917.0], [96.6, 23917.0], [96.7, 23917.0], [96.8, 23917.0], [96.9, 23917.0], [97.0, 23918.0], [97.1, 23918.0], [97.2, 23918.0], [97.3, 23918.0], [97.4, 23918.0], [97.5, 24614.0], [97.6, 24614.0], [97.7, 24614.0], [97.8, 24614.0], [97.9, 24614.0], [98.0, 24687.0], [98.1, 24687.0], [98.2, 24687.0], [98.3, 24687.0], [98.4, 24687.0], [98.5, 24730.0], [98.6, 24730.0], [98.7, 24730.0], [98.8, 24730.0], [98.9, 24730.0], [99.0, 24883.0], [99.1, 24883.0], [99.2, 24883.0], [99.3, 24883.0], [99.4, 24883.0], [99.5, 24908.0], [99.6, 24908.0], [99.7, 24908.0], [99.8, 24908.0], [99.9, 24908.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[0.0, 79.0], [0.1, 79.0], [0.2, 79.0], [0.3, 79.0], [0.4, 79.0], [0.5, 79.0], [0.6, 79.0], [0.7, 79.0], [0.8, 79.0], [0.9, 79.0], [1.0, 82.0], [1.1, 82.0], [1.2, 82.0], [1.3, 82.0], [1.4, 82.0], [1.5, 82.0], [1.6, 82.0], [1.7, 82.0], [1.8, 82.0], [1.9, 82.0], [2.0, 83.0], [2.1, 83.0], [2.2, 83.0], [2.3, 83.0], [2.4, 83.0], [2.5, 84.0], [2.6, 84.0], [2.7, 84.0], [2.8, 84.0], [2.9, 84.0], [3.0, 85.0], [3.1, 85.0], [3.2, 85.0], [3.3, 85.0], [3.4, 85.0], [3.5, 86.0], [3.6, 86.0], [3.7, 86.0], [3.8, 86.0], [3.9, 86.0], [4.0, 87.0], [4.1, 87.0], [4.2, 87.0], [4.3, 87.0], [4.4, 87.0], [4.5, 88.0], [4.6, 88.0], [4.7, 88.0], [4.8, 88.0], [4.9, 88.0], [5.0, 91.0], [5.1, 91.0], [5.2, 91.0], [5.3, 91.0], [5.4, 91.0], [5.5, 93.0], [5.6, 93.0], [5.7, 93.0], [5.8, 93.0], [5.9, 93.0], [6.0, 93.0], [6.1, 93.0], [6.2, 93.0], [6.3, 93.0], [6.4, 93.0], [6.5, 94.0], [6.6, 94.0], [6.7, 94.0], [6.8, 94.0], [6.9, 94.0], [7.0, 94.0], [7.1, 94.0], [7.2, 94.0], [7.3, 94.0], [7.4, 94.0], [7.5, 96.0], [7.6, 96.0], [7.7, 96.0], [7.8, 96.0], [7.9, 96.0], [8.0, 96.0], [8.1, 96.0], [8.2, 96.0], [8.3, 96.0], [8.4, 96.0], [8.5, 97.0], [8.6, 97.0], [8.7, 97.0], [8.8, 97.0], [8.9, 97.0], [9.0, 100.0], [9.1, 100.0], [9.2, 100.0], [9.3, 100.0], [9.4, 100.0], [9.5, 101.0], [9.6, 101.0], [9.7, 101.0], [9.8, 101.0], [9.9, 101.0], [10.0, 102.0], [10.1, 102.0], [10.2, 102.0], [10.3, 102.0], [10.4, 102.0], [10.5, 103.0], [10.6, 103.0], [10.7, 103.0], [10.8, 103.0], [10.9, 103.0], [11.0, 103.0], [11.1, 103.0], [11.2, 103.0], [11.3, 103.0], [11.4, 103.0], [11.5, 103.0], [11.6, 103.0], [11.7, 103.0], [11.8, 103.0], [11.9, 103.0], [12.0, 103.0], [12.1, 103.0], [12.2, 103.0], [12.3, 103.0], [12.4, 103.0], [12.5, 105.0], [12.6, 105.0], [12.7, 105.0], [12.8, 105.0], [12.9, 105.0], [13.0, 107.0], [13.1, 107.0], [13.2, 107.0], [13.3, 107.0], [13.4, 107.0], [13.5, 110.0], [13.6, 110.0], [13.7, 110.0], [13.8, 110.0], [13.9, 110.0], [14.0, 114.0], [14.1, 114.0], [14.2, 114.0], [14.3, 114.0], [14.4, 114.0], [14.5, 116.0], [14.6, 116.0], [14.7, 116.0], [14.8, 116.0], [14.9, 116.0], [15.0, 119.0], [15.1, 119.0], [15.2, 119.0], [15.3, 119.0], [15.4, 119.0], [15.5, 122.0], [15.6, 122.0], [15.7, 122.0], [15.8, 122.0], [15.9, 122.0], [16.0, 123.0], [16.1, 123.0], [16.2, 123.0], [16.3, 123.0], [16.4, 123.0], [16.5, 128.0], [16.6, 128.0], [16.7, 128.0], [16.8, 128.0], [16.9, 128.0], [17.0, 128.0], [17.1, 128.0], [17.2, 128.0], [17.3, 128.0], [17.4, 128.0], [17.5, 132.0], [17.6, 132.0], [17.7, 132.0], [17.8, 132.0], [17.9, 132.0], [18.0, 147.0], [18.1, 147.0], [18.2, 147.0], [18.3, 147.0], [18.4, 147.0], [18.5, 147.0], [18.6, 147.0], [18.7, 147.0], [18.8, 147.0], [18.9, 147.0], [19.0, 152.0], [19.1, 152.0], [19.2, 152.0], [19.3, 152.0], [19.4, 152.0], [19.5, 154.0], [19.6, 154.0], [19.7, 154.0], [19.8, 154.0], [19.9, 154.0], [20.0, 154.0], [20.1, 154.0], [20.2, 154.0], [20.3, 154.0], [20.4, 154.0], [20.5, 154.0], [20.6, 154.0], [20.7, 154.0], [20.8, 154.0], [20.9, 154.0], [21.0, 154.0], [21.1, 154.0], [21.2, 154.0], [21.3, 154.0], [21.4, 154.0], [21.5, 154.0], [21.6, 154.0], [21.7, 154.0], [21.8, 154.0], [21.9, 154.0], [22.0, 154.0], [22.1, 154.0], [22.2, 154.0], [22.3, 154.0], [22.4, 154.0], [22.5, 154.0], [22.6, 154.0], [22.7, 154.0], [22.8, 154.0], [22.9, 154.0], [23.0, 155.0], [23.1, 155.0], [23.2, 155.0], [23.3, 155.0], [23.4, 155.0], [23.5, 155.0], [23.6, 155.0], [23.7, 155.0], [23.8, 155.0], [23.9, 155.0], [24.0, 155.0], [24.1, 155.0], [24.2, 155.0], [24.3, 155.0], [24.4, 155.0], [24.5, 155.0], [24.6, 155.0], [24.7, 155.0], [24.8, 155.0], [24.9, 155.0], [25.0, 155.0], [25.1, 155.0], [25.2, 155.0], [25.3, 155.0], [25.4, 155.0], [25.5, 155.0], [25.6, 155.0], [25.7, 155.0], [25.8, 155.0], [25.9, 155.0], [26.0, 156.0], [26.1, 156.0], [26.2, 156.0], [26.3, 156.0], [26.4, 156.0], [26.5, 164.0], [26.6, 164.0], [26.7, 164.0], [26.8, 164.0], [26.9, 164.0], [27.0, 166.0], [27.1, 166.0], [27.2, 166.0], [27.3, 166.0], [27.4, 166.0], [27.5, 166.0], [27.6, 166.0], [27.7, 166.0], [27.8, 166.0], [27.9, 166.0], [28.0, 166.0], [28.1, 166.0], [28.2, 166.0], [28.3, 166.0], [28.4, 166.0], [28.5, 166.0], [28.6, 166.0], [28.7, 166.0], [28.8, 166.0], [28.9, 166.0], [29.0, 166.0], [29.1, 166.0], [29.2, 166.0], [29.3, 166.0], [29.4, 166.0], [29.5, 166.0], [29.6, 166.0], [29.7, 166.0], [29.8, 166.0], [29.9, 166.0], [30.0, 166.0], [30.1, 166.0], [30.2, 166.0], [30.3, 166.0], [30.4, 166.0], [30.5, 167.0], [30.6, 167.0], [30.7, 167.0], [30.8, 167.0], [30.9, 167.0], [31.0, 167.0], [31.1, 167.0], [31.2, 167.0], [31.3, 167.0], [31.4, 167.0], [31.5, 168.0], [31.6, 168.0], [31.7, 168.0], [31.8, 168.0], [31.9, 168.0], [32.0, 311.0], [32.1, 311.0], [32.2, 311.0], [32.3, 311.0], [32.4, 311.0], [32.5, 1815.0], [32.6, 1815.0], [32.7, 1815.0], [32.8, 1815.0], [32.9, 1815.0], [33.0, 1898.0], [33.1, 1898.0], [33.2, 1898.0], [33.3, 1898.0], [33.4, 1898.0], [33.5, 1959.0], [33.6, 1959.0], [33.7, 1959.0], [33.8, 1959.0], [33.9, 1959.0], [34.0, 1974.0], [34.1, 1974.0], [34.2, 1974.0], [34.3, 1974.0], [34.4, 1974.0], [34.5, 1979.0], [34.6, 1979.0], [34.7, 1979.0], [34.8, 1979.0], [34.9, 1979.0], [35.0, 1983.0], [35.1, 1983.0], [35.2, 1983.0], [35.3, 1983.0], [35.4, 1983.0], [35.5, 1984.0], [35.6, 1984.0], [35.7, 1984.0], [35.8, 1984.0], [35.9, 1984.0], [36.0, 1993.0], [36.1, 1993.0], [36.2, 1993.0], [36.3, 1993.0], [36.4, 1993.0], [36.5, 2000.0], [36.6, 2000.0], [36.7, 2000.0], [36.8, 2000.0], [36.9, 2000.0], [37.0, 2003.0], [37.1, 2003.0], [37.2, 2003.0], [37.3, 2003.0], [37.4, 2003.0], [37.5, 2013.0], [37.6, 2013.0], [37.7, 2013.0], [37.8, 2013.0], [37.9, 2013.0], [38.0, 2014.0], [38.1, 2014.0], [38.2, 2014.0], [38.3, 2014.0], [38.4, 2014.0], [38.5, 2024.0], [38.6, 2024.0], [38.7, 2024.0], [38.8, 2024.0], [38.9, 2024.0], [39.0, 2039.0], [39.1, 2039.0], [39.2, 2039.0], [39.3, 2039.0], [39.4, 2039.0], [39.5, 2060.0], [39.6, 2060.0], [39.7, 2060.0], [39.8, 2060.0], [39.9, 2060.0], [40.0, 2066.0], [40.1, 2066.0], [40.2, 2066.0], [40.3, 2066.0], [40.4, 2066.0], [40.5, 2069.0], [40.6, 2069.0], [40.7, 2069.0], [40.8, 2069.0], [40.9, 2069.0], [41.0, 2074.0], [41.1, 2074.0], [41.2, 2074.0], [41.3, 2074.0], [41.4, 2074.0], [41.5, 2075.0], [41.6, 2075.0], [41.7, 2075.0], [41.8, 2075.0], [41.9, 2075.0], [42.0, 2088.0], [42.1, 2088.0], [42.2, 2088.0], [42.3, 2088.0], [42.4, 2088.0], [42.5, 2107.0], [42.6, 2107.0], [42.7, 2107.0], [42.8, 2107.0], [42.9, 2107.0], [43.0, 2109.0], [43.1, 2109.0], [43.2, 2109.0], [43.3, 2109.0], [43.4, 2109.0], [43.5, 2125.0], [43.6, 2125.0], [43.7, 2125.0], [43.8, 2125.0], [43.9, 2125.0], [44.0, 2130.0], [44.1, 2130.0], [44.2, 2130.0], [44.3, 2130.0], [44.4, 2130.0], [44.5, 2182.0], [44.6, 2182.0], [44.7, 2182.0], [44.8, 2182.0], [44.9, 2182.0], [45.0, 2204.0], [45.1, 2204.0], [45.2, 2204.0], [45.3, 2204.0], [45.4, 2204.0], [45.5, 3252.0], [45.6, 3252.0], [45.7, 3252.0], [45.8, 3252.0], [45.9, 3252.0], [46.0, 3268.0], [46.1, 3268.0], [46.2, 3268.0], [46.3, 3268.0], [46.4, 3268.0], [46.5, 3368.0], [46.6, 3368.0], [46.7, 3368.0], [46.8, 3368.0], [46.9, 3368.0], [47.0, 3443.0], [47.1, 3443.0], [47.2, 3443.0], [47.3, 3443.0], [47.4, 3443.0], [47.5, 3628.0], [47.6, 3628.0], [47.7, 3628.0], [47.8, 3628.0], [47.9, 3628.0], [48.0, 3657.0], [48.1, 3657.0], [48.2, 3657.0], [48.3, 3657.0], [48.4, 3657.0], [48.5, 3663.0], [48.6, 3663.0], [48.7, 3663.0], [48.8, 3663.0], [48.9, 3663.0], [49.0, 3739.0], [49.1, 3739.0], [49.2, 3739.0], [49.3, 3739.0], [49.4, 3739.0], [49.5, 3749.0], [49.6, 3749.0], [49.7, 3749.0], [49.8, 3749.0], [49.9, 3749.0], [50.0, 3768.0], [50.1, 3768.0], [50.2, 3768.0], [50.3, 3768.0], [50.4, 3768.0], [50.5, 3773.0], [50.6, 3773.0], [50.7, 3773.0], [50.8, 3773.0], [50.9, 3773.0], [51.0, 3784.0], [51.1, 3784.0], [51.2, 3784.0], [51.3, 3784.0], [51.4, 3784.0], [51.5, 3803.0], [51.6, 3803.0], [51.7, 3803.0], [51.8, 3803.0], [51.9, 3803.0], [52.0, 3822.0], [52.1, 3822.0], [52.2, 3822.0], [52.3, 3822.0], [52.4, 3822.0], [52.5, 3828.0], [52.6, 3828.0], [52.7, 3828.0], [52.8, 3828.0], [52.9, 3828.0], [53.0, 3833.0], [53.1, 3833.0], [53.2, 3833.0], [53.3, 3833.0], [53.4, 3833.0], [53.5, 3840.0], [53.6, 3840.0], [53.7, 3840.0], [53.8, 3840.0], [53.9, 3840.0], [54.0, 3846.0], [54.1, 3846.0], [54.2, 3846.0], [54.3, 3846.0], [54.4, 3846.0], [54.5, 4112.0], [54.6, 4112.0], [54.7, 4112.0], [54.8, 4112.0], [54.9, 4112.0], [55.0, 4138.0], [55.1, 4138.0], [55.2, 4138.0], [55.3, 4138.0], [55.4, 4138.0], [55.5, 4144.0], [55.6, 4144.0], [55.7, 4144.0], [55.8, 4144.0], [55.9, 4144.0], [56.0, 4190.0], [56.1, 4190.0], [56.2, 4190.0], [56.3, 4190.0], [56.4, 4190.0], [56.5, 4249.0], [56.6, 4249.0], [56.7, 4249.0], [56.8, 4249.0], [56.9, 4249.0], [57.0, 4284.0], [57.1, 4284.0], [57.2, 4284.0], [57.3, 4284.0], [57.4, 4284.0], [57.5, 4384.0], [57.6, 4384.0], [57.7, 4384.0], [57.8, 4384.0], [57.9, 4384.0], [58.0, 4440.0], [58.1, 4440.0], [58.2, 4440.0], [58.3, 4440.0], [58.4, 4440.0], [58.5, 4444.0], [58.6, 4444.0], [58.7, 4444.0], [58.8, 4444.0], [58.9, 4444.0], [59.0, 4485.0], [59.1, 4485.0], [59.2, 4485.0], [59.3, 4485.0], [59.4, 4485.0], [59.5, 4501.0], [59.6, 4501.0], [59.7, 4501.0], [59.8, 4501.0], [59.9, 4501.0], [60.0, 4505.0], [60.1, 4505.0], [60.2, 4505.0], [60.3, 4505.0], [60.4, 4505.0], [60.5, 4513.0], [60.6, 4513.0], [60.7, 4513.0], [60.8, 4513.0], [60.9, 4513.0], [61.0, 4555.0], [61.1, 4555.0], [61.2, 4555.0], [61.3, 4555.0], [61.4, 4555.0], [61.5, 4566.0], [61.6, 4566.0], [61.7, 4566.0], [61.8, 4566.0], [61.9, 4566.0], [62.0, 4586.0], [62.1, 4586.0], [62.2, 4586.0], [62.3, 4586.0], [62.4, 4586.0], [62.5, 4614.0], [62.6, 4614.0], [62.7, 4614.0], [62.8, 4614.0], [62.9, 4614.0], [63.0, 4639.0], [63.1, 4639.0], [63.2, 4639.0], [63.3, 4639.0], [63.4, 4639.0], [63.5, 4652.0], [63.6, 4652.0], [63.7, 4652.0], [63.8, 4652.0], [63.9, 4652.0], [64.0, 4661.0], [64.1, 4661.0], [64.2, 4661.0], [64.3, 4661.0], [64.4, 4661.0], [64.5, 4723.0], [64.6, 4723.0], [64.7, 4723.0], [64.8, 4723.0], [64.9, 4723.0], [65.0, 4724.0], [65.1, 4724.0], [65.2, 4724.0], [65.3, 4724.0], [65.4, 4724.0], [65.5, 4737.0], [65.6, 4737.0], [65.7, 4737.0], [65.8, 4737.0], [65.9, 4737.0], [66.0, 4768.0], [66.1, 4768.0], [66.2, 4768.0], [66.3, 4768.0], [66.4, 4768.0], [66.5, 4801.0], [66.6, 4801.0], [66.7, 4801.0], [66.8, 4801.0], [66.9, 4801.0], [67.0, 4807.0], [67.1, 4807.0], [67.2, 4807.0], [67.3, 4807.0], [67.4, 4807.0], [67.5, 4828.0], [67.6, 4828.0], [67.7, 4828.0], [67.8, 4828.0], [67.9, 4828.0], [68.0, 4832.0], [68.1, 4832.0], [68.2, 4832.0], [68.3, 4832.0], [68.4, 4832.0], [68.5, 4835.0], [68.6, 4835.0], [68.7, 4835.0], [68.8, 4835.0], [68.9, 4835.0], [69.0, 4841.0], [69.1, 4841.0], [69.2, 4841.0], [69.3, 4841.0], [69.4, 4841.0], [69.5, 4848.0], [69.6, 4848.0], [69.7, 4848.0], [69.8, 4848.0], [69.9, 4848.0], [70.0, 4858.0], [70.1, 4858.0], [70.2, 4858.0], [70.3, 4858.0], [70.4, 4858.0], [70.5, 4876.0], [70.6, 4876.0], [70.7, 4876.0], [70.8, 4876.0], [70.9, 4876.0], [71.0, 4892.0], [71.1, 4892.0], [71.2, 4892.0], [71.3, 4892.0], [71.4, 4892.0], [71.5, 4906.0], [71.6, 4906.0], [71.7, 4906.0], [71.8, 4906.0], [71.9, 4906.0], [72.0, 4927.0], [72.1, 4927.0], [72.2, 4927.0], [72.3, 4927.0], [72.4, 4927.0], [72.5, 4946.0], [72.6, 4946.0], [72.7, 4946.0], [72.8, 4946.0], [72.9, 4946.0], [73.0, 4962.0], [73.1, 4962.0], [73.2, 4962.0], [73.3, 4962.0], [73.4, 4962.0], [73.5, 5247.0], [73.6, 5247.0], [73.7, 5247.0], [73.8, 5247.0], [73.9, 5247.0], [74.0, 5638.0], [74.1, 5638.0], [74.2, 5638.0], [74.3, 5638.0], [74.4, 5638.0], [74.5, 5644.0], [74.6, 5644.0], [74.7, 5644.0], [74.8, 5644.0], [74.9, 5644.0], [75.0, 5658.0], [75.1, 5658.0], [75.2, 5658.0], [75.3, 5658.0], [75.4, 5658.0], [75.5, 5680.0], [75.6, 5680.0], [75.7, 5680.0], [75.8, 5680.0], [75.9, 5680.0], [76.0, 5694.0], [76.1, 5694.0], [76.2, 5694.0], [76.3, 5694.0], [76.4, 5694.0], [76.5, 5739.0], [76.6, 5739.0], [76.7, 5739.0], [76.8, 5739.0], [76.9, 5739.0], [77.0, 5773.0], [77.1, 5773.0], [77.2, 5773.0], [77.3, 5773.0], [77.4, 5773.0], [77.5, 5778.0], [77.6, 5778.0], [77.7, 5778.0], [77.8, 5778.0], [77.9, 5778.0], [78.0, 6534.0], [78.1, 6534.0], [78.2, 6534.0], [78.3, 6534.0], [78.4, 6534.0], [78.5, 6564.0], [78.6, 6564.0], [78.7, 6564.0], [78.8, 6564.0], [78.9, 6564.0], [79.0, 6867.0], [79.1, 6867.0], [79.2, 6867.0], [79.3, 6867.0], [79.4, 6867.0], [79.5, 6892.0], [79.6, 6892.0], [79.7, 6892.0], [79.8, 6892.0], [79.9, 6892.0], [80.0, 6897.0], [80.1, 6897.0], [80.2, 6897.0], [80.3, 6897.0], [80.4, 6897.0], [80.5, 6898.0], [80.6, 6898.0], [80.7, 6898.0], [80.8, 6898.0], [80.9, 6898.0], [81.0, 6907.0], [81.1, 6907.0], [81.2, 6907.0], [81.3, 6907.0], [81.4, 6907.0], [81.5, 6912.0], [81.6, 6912.0], [81.7, 6912.0], [81.8, 6912.0], [81.9, 6912.0], [82.0, 6916.0], [82.1, 6916.0], [82.2, 6916.0], [82.3, 6916.0], [82.4, 6916.0], [82.5, 6923.0], [82.6, 6923.0], [82.7, 6923.0], [82.8, 6923.0], [82.9, 6923.0], [83.0, 6927.0], [83.1, 6927.0], [83.2, 6927.0], [83.3, 6927.0], [83.4, 6927.0], [83.5, 6944.0], [83.6, 6944.0], [83.7, 6944.0], [83.8, 6944.0], [83.9, 6944.0], [84.0, 6974.0], [84.1, 6974.0], [84.2, 6974.0], [84.3, 6974.0], [84.4, 6974.0], [84.5, 7003.0], [84.6, 7003.0], [84.7, 7003.0], [84.8, 7003.0], [84.9, 7003.0], [85.0, 7026.0], [85.1, 7026.0], [85.2, 7026.0], [85.3, 7026.0], [85.4, 7026.0], [85.5, 7047.0], [85.6, 7047.0], [85.7, 7047.0], [85.8, 7047.0], [85.9, 7047.0], [86.0, 8062.0], [86.1, 8062.0], [86.2, 8062.0], [86.3, 8062.0], [86.4, 8062.0], [86.5, 8077.0], [86.6, 8077.0], [86.7, 8077.0], [86.8, 8077.0], [86.9, 8077.0], [87.0, 8082.0], [87.1, 8082.0], [87.2, 8082.0], [87.3, 8082.0], [87.4, 8082.0], [87.5, 8091.0], [87.6, 8091.0], [87.7, 8091.0], [87.8, 8091.0], [87.9, 8091.0], [88.0, 8104.0], [88.1, 8104.0], [88.2, 8104.0], [88.3, 8104.0], [88.4, 8104.0], [88.5, 8114.0], [88.6, 8114.0], [88.7, 8114.0], [88.8, 8114.0], [88.9, 8114.0], [89.0, 8134.0], [89.1, 8134.0], [89.2, 8134.0], [89.3, 8134.0], [89.4, 8134.0], [89.5, 8176.0], [89.6, 8176.0], [89.7, 8176.0], [89.8, 8176.0], [89.9, 8176.0], [90.0, 8190.0], [90.1, 8190.0], [90.2, 8190.0], [90.3, 8190.0], [90.4, 8190.0], [90.5, 8208.0], [90.6, 8208.0], [90.7, 8208.0], [90.8, 8208.0], [90.9, 8208.0], [91.0, 8220.0], [91.1, 8220.0], [91.2, 8220.0], [91.3, 8220.0], [91.4, 8220.0], [91.5, 8254.0], [91.6, 8254.0], [91.7, 8254.0], [91.8, 8254.0], [91.9, 8254.0], [92.0, 8275.0], [92.1, 8275.0], [92.2, 8275.0], [92.3, 8275.0], [92.4, 8275.0], [92.5, 8288.0], [92.6, 8288.0], [92.7, 8288.0], [92.8, 8288.0], [92.9, 8288.0], [93.0, 8339.0], [93.1, 8339.0], [93.2, 8339.0], [93.3, 8339.0], [93.4, 8339.0], [93.5, 8342.0], [93.6, 8342.0], [93.7, 8342.0], [93.8, 8342.0], [93.9, 8342.0], [94.0, 8358.0], [94.1, 8358.0], [94.2, 8358.0], [94.3, 8358.0], [94.4, 8358.0], [94.5, 8360.0], [94.6, 8360.0], [94.7, 8360.0], [94.8, 8360.0], [94.9, 8360.0], [95.0, 8368.0], [95.1, 8368.0], [95.2, 8368.0], [95.3, 8368.0], [95.4, 8368.0], [95.5, 8382.0], [95.6, 8382.0], [95.7, 8382.0], [95.8, 8382.0], [95.9, 8382.0], [96.0, 8407.0], [96.1, 8407.0], [96.2, 8407.0], [96.3, 8407.0], [96.4, 8407.0], [96.5, 8413.0], [96.6, 8413.0], [96.7, 8413.0], [96.8, 8413.0], [96.9, 8413.0], [97.0, 8423.0], [97.1, 8423.0], [97.2, 8423.0], [97.3, 8423.0], [97.4, 8423.0], [97.5, 8428.0], [97.6, 8428.0], [97.7, 8428.0], [97.8, 8428.0], [97.9, 8428.0], [98.0, 8436.0], [98.1, 8436.0], [98.2, 8436.0], [98.3, 8436.0], [98.4, 8436.0], [98.5, 8458.0], [98.6, 8458.0], [98.7, 8458.0], [98.8, 8458.0], [98.9, 8458.0], [99.0, 8473.0], [99.1, 8473.0], [99.2, 8473.0], [99.3, 8473.0], [99.4, 8473.0], [99.5, 8483.0], [99.6, 8483.0], [99.7, 8483.0], [99.8, 8483.0], [99.9, 8483.0]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 51.0, "series": [{"data": [[0.0, 51.0], [700.0, 6.0], [800.0, 2.0], [900.0, 5.0], [1000.0, 1.0], [1100.0, 10.0], [1300.0, 3.0], [1400.0, 8.0], [1500.0, 3.0], [1600.0, 2.0], [1800.0, 6.0], [1900.0, 3.0], [2000.0, 1.0], [2100.0, 2.0], [2200.0, 1.0], [2300.0, 8.0], [2400.0, 8.0], [2600.0, 6.0], [2700.0, 5.0], [2800.0, 5.0], [2900.0, 1.0], [3000.0, 4.0], [3100.0, 8.0], [200.0, 4.0], [3400.0, 1.0], [3500.0, 2.0], [3700.0, 2.0], [4000.0, 1.0], [4500.0, 3.0], [4600.0, 1.0], [300.0, 1.0], [4800.0, 3.0], [4700.0, 5.0], [5100.0, 1.0], [5300.0, 6.0], [5400.0, 5.0], [6000.0, 1.0], [6300.0, 1.0], [6200.0, 4.0], [400.0, 7.0], [500.0, 3.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[500.0, 1.0], [1100.0, 1.0], [1400.0, 1.0], [1500.0, 4.0], [1800.0, 2.0], [2300.0, 1.0], [2500.0, 6.0], [2700.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [3900.0, 1.0], [4000.0, 5.0], [4500.0, 1.0], [4400.0, 1.0], [4800.0, 2.0], [4700.0, 4.0], [5000.0, 4.0], [5200.0, 1.0], [5300.0, 1.0], [5500.0, 4.0], [5600.0, 3.0], [5700.0, 1.0], [5800.0, 1.0], [5900.0, 1.0], [6200.0, 6.0], [6300.0, 1.0], [6500.0, 2.0], [6600.0, 2.0], [6400.0, 2.0], [6800.0, 1.0], [6900.0, 4.0], [6700.0, 1.0], [7000.0, 2.0], [7100.0, 1.0], [7200.0, 2.0], [7400.0, 1.0], [7800.0, 4.0], [8600.0, 3.0], [10300.0, 1.0], [11800.0, 7.0], [12300.0, 1.0], [13700.0, 1.0], [14100.0, 1.0], [14000.0, 1.0], [14300.0, 1.0], [14600.0, 1.0], [15300.0, 1.0], [15500.0, 1.0], [15600.0, 1.0], [15700.0, 1.0], [16200.0, 2.0], [16100.0, 5.0], [16000.0, 1.0], [16300.0, 2.0], [16700.0, 2.0], [17000.0, 2.0], [17400.0, 2.0], [18400.0, 2.0], [18300.0, 3.0], [17700.0, 1.0], [18000.0, 1.0], [18200.0, 2.0], [17900.0, 3.0], [19400.0, 4.0], [19300.0, 2.0], [18500.0, 1.0], [19200.0, 3.0], [19000.0, 6.0], [18900.0, 1.0], [18600.0, 1.0], [19100.0, 2.0], [19500.0, 3.0], [19600.0, 2.0], [20200.0, 1.0], [19800.0, 4.0], [20400.0, 1.0], [19700.0, 4.0], [19900.0, 1.0], [20700.0, 2.0], [21200.0, 2.0], [21100.0, 3.0], [21300.0, 1.0], [21800.0, 2.0], [22200.0, 3.0], [22000.0, 3.0], [22400.0, 1.0], [21900.0, 2.0], [23300.0, 1.0], [22800.0, 1.0], [22700.0, 7.0], [22600.0, 1.0], [23100.0, 1.0], [23900.0, 2.0], [24600.0, 2.0], [24800.0, 1.0], [24700.0, 1.0], [24900.0, 1.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[0.0, 18.0], [8400.0, 8.0], [8300.0, 6.0], [8200.0, 5.0], [100.0, 46.0], [1800.0, 2.0], [1900.0, 6.0], [2000.0, 12.0], [2100.0, 5.0], [2200.0, 1.0], [3200.0, 2.0], [3300.0, 1.0], [3400.0, 1.0], [3600.0, 3.0], [3700.0, 5.0], [3800.0, 6.0], [4200.0, 2.0], [4300.0, 1.0], [4100.0, 4.0], [4500.0, 6.0], [4600.0, 4.0], [4400.0, 3.0], [300.0, 1.0], [4700.0, 4.0], [4800.0, 10.0], [4900.0, 4.0], [5200.0, 1.0], [5600.0, 5.0], [5700.0, 3.0], [6500.0, 2.0], [6900.0, 7.0], [6800.0, 4.0], [7000.0, 3.0], [8100.0, 5.0], [8000.0, 4.0]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 24900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 431.0, "series": [{"data": [[0.0, 128.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 40.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 431.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 20.23529411764706, "minX": 1.611330919E12, "maxY": 200.0, "series": [{"data": [[1.611330926E12, 184.38028169014086], [1.611330927E12, 171.85714285714283], [1.611330928E12, 160.30909090909094], [1.611330923E12, 192.28571428571425], [1.611330924E12, 192.0], [1.611330925E12, 191.0], [1.611330931E12, 146.13636363636365], [1.611330932E12, 135.28571428571428], [1.611330933E12, 129.75], [1.611330929E12, 157.0], [1.61133093E12, 156.375], [1.611330934E12, 126.66666666666667], [1.611330935E12, 122.05882352941177], [1.611330936E12, 105.33333333333333], [1.611330942E12, 97.0], [1.611330943E12, 92.0], [1.611330944E12, 90.0], [1.611330939E12, 102.5], [1.611330941E12, 101.0], [1.611330947E12, 41.5], [1.611330949E12, 20.23529411764706], [1.611330945E12, 83.58333333333333], [1.611330946E12, 61.43749999999997], [1.611330921E12, 200.0], [1.611330922E12, 199.0571428571429], [1.611330919E12, 65.51785714285715], [1.61133092E12, 182.3]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611330949E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 58.0, "minX": 2.0, "maxY": 24908.0, "series": [{"data": [[69.0, 64.61538461538461], [70.0, 64.08333333333334], [71.0, 66.7777777777778], [73.0, 63.0], [74.0, 58.0], [77.0, 59.0], [124.0, 264.0], [127.0, 5426.2], [146.0, 2840.0], [145.0, 3140.25], [157.0, 2987.214285714286], [156.0, 2581.8], [165.0, 1678.7142857142858], [161.0, 5518.727272727273], [170.0, 1531.3333333333335], [181.0, 2277.352941176471], [179.0, 1849.0], [187.0, 559.3333333333334], [191.0, 2216.5], [186.0, 2560.6], [184.0, 4158.333333333333], [199.0, 373.0], [194.0, 200.0], [192.0, 806.4], [200.0, 1183.5]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[148.26999999999998, 1926.0049999999994]], "isOverall": false, "label": "GET /login-Aggregated", "isController": false}, {"data": [[2.0, 16997.0], [4.0, 16839.5], [8.0, 18723.25], [10.0, 19029.5], [13.0, 20789.0], [16.0, 20705.333333333332], [19.0, 20526.666666666668], [22.0, 20840.0], [28.0, 19654.0], [34.0, 22567.16666666667], [39.0, 20509.6], [45.0, 24908.0], [44.0, 21364.6], [46.0, 16211.0], [48.0, 15728.0], [51.0, 16070.0], [53.0, 16132.0], [56.0, 16172.333333333334], [58.0, 17250.0], [61.0, 17706.333333333332], [63.0, 17910.0], [67.0, 18701.5], [65.0, 18295.0], [70.0, 19494.0], [69.0, 19513.0], [68.0, 18468.0], [79.0, 20587.0], [76.0, 19196.166666666668], [83.0, 20724.5], [85.0, 24748.5], [91.0, 23362.0], [90.0, 18989.5], [88.0, 19085.0], [95.0, 17020.0], [94.0, 19446.0], [93.0, 23917.0], [92.0, 23918.0], [99.0, 22201.0], [96.0, 19626.0], [103.0, 19570.0], [102.0, 18445.0], [101.0, 21838.5], [107.0, 1560.0], [106.0, 15360.0], [105.0, 16706.0], [123.0, 5192.375], [127.0, 14126.0], [126.0, 14129.333333333334], [135.0, 3945.0], [134.0, 4054.0], [132.0, 5810.0], [131.0, 4408.0], [130.0, 4796.0], [129.0, 5496.0], [143.0, 11836.0], [141.0, 11848.0], [139.0, 11855.0], [138.0, 12341.0], [137.0, 5017.5], [149.0, 4073.0], [148.0, 5979.0], [146.0, 1422.0], [145.0, 11834.5], [158.0, 5234.0], [157.0, 10375.0], [156.0, 5774.0], [155.0, 4700.5], [153.0, 3440.0], [152.0, 4497.0], [166.0, 2590.0], [165.0, 6028.5], [161.0, 8672.333333333334], [174.0, 6824.666666666667], [171.0, 7227.0], [170.0, 7830.5], [182.0, 6895.0], [181.0, 7038.0], [180.0, 7060.0], [179.0, 1864.0], [177.0, 6292.666666666667], [191.0, 5094.5], [187.0, 1199.0], [186.0, 6521.0], [184.0, 6635.0], [199.0, 2587.4], [194.0, 524.0], [193.0, 3569.0], [192.0, 4881.0], [200.0, 2348.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[102.18, 13353.664999999995]], "isOverall": false, "label": "POST /graphql - Login-Aggregated", "isController": false}, {"data": [[158.0, 8283.75], [182.0, 6916.0], [181.0, 6887.666666666667], [191.0, 5091.107142857143], [199.0, 2017.1428571428573], [193.0, 3296.0], [192.0, 4124.970588235295], [200.0, 2060.583333333333], [55.0, 149.61111111111111], [57.0, 148.4736842105263], [59.0, 93.2], [60.0, 89.0], [62.0, 86.0], [63.0, 83.0], [65.0, 91.5], [71.0, 104.6], [73.0, 103.0], [74.0, 86.0], [77.0, 102.5], [79.0, 88.25], [85.0, 94.0], [125.0, 311.0]], "isOverall": false, "label": "GET /", "isController": false}, {"data": [[145.17499999999998, 3480.9400000000005]], "isOverall": false, "label": "GET /-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1102.0, "minX": 1.611330919E12, "maxY": 318981.0, "series": [{"data": [[1.611330926E12, 175398.0], [1.611330927E12, 53103.0], [1.611330928E12, 146333.0], [1.611330923E12, 62699.0], [1.611330924E12, 73165.0], [1.611330925E12, 93176.0], [1.611330931E12, 36824.0], [1.611330932E12, 10171.0], [1.611330933E12, 5812.0], [1.611330929E12, 48909.0], [1.61133093E12, 33451.0], [1.611330934E12, 16942.0], [1.611330935E12, 24701.0], [1.611330936E12, 4359.0], [1.611330942E12, 8718.0], [1.611330943E12, 4359.0], [1.611330944E12, 2906.0], [1.611330939E12, 2906.0], [1.611330941E12, 2906.0], [1.611330947E12, 14530.0], [1.611330949E12, 49402.0], [1.611330945E12, 17436.0], [1.611330946E12, 46496.0], [1.611330921E12, 21504.0], [1.611330922E12, 100134.0], [1.611330919E12, 318981.0], [1.61133092E12, 23833.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.611330926E12, 15633.0], [1.611330927E12, 11049.0], [1.611330928E12, 11890.0], [1.611330923E12, 3663.0], [1.611330924E12, 3442.0], [1.611330925E12, 3959.0], [1.611330931E12, 11481.0], [1.611330932E12, 4956.0], [1.611330933E12, 2832.0], [1.611330929E12, 2583.0], [1.61133093E12, 4308.0], [1.611330934E12, 3447.0], [1.611330935E12, 12036.0], [1.611330936E12, 2124.0], [1.611330942E12, 4248.0], [1.611330943E12, 2124.0], [1.611330944E12, 1416.0], [1.611330939E12, 1416.0], [1.611330941E12, 1416.0], [1.611330947E12, 7080.0], [1.611330949E12, 24072.0], [1.611330945E12, 8496.0], [1.611330946E12, 22656.0], [1.611330921E12, 1102.0], [1.611330922E12, 7690.0], [1.611330919E12, 13456.0], [1.61133092E12, 1225.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611330949E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 64.74999999999999, "minX": 1.611330919E12, "maxY": 23732.333333333332, "series": [{"data": [[1.611330926E12, 2609.114285714286], [1.611330927E12, 1531.3333333333335], [1.611330928E12, 4025.3888888888887], [1.611330923E12, 1484.0], [1.611330924E12, 637.0], [1.611330925E12, 2109.6923076923076], [1.611330931E12, 3011.571428571429], [1.611330929E12, 3279.809523809524], [1.61133093E12, 2306.25], [1.611330934E12, 5426.2], [1.611330921E12, 1384.125], [1.611330922E12, 286.5], [1.611330919E12, 64.74999999999999], [1.61133092E12, 767.4444444444445]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.611330926E12, 5740.166666666666], [1.611330947E12, 20937.100000000002], [1.611330927E12, 6279.153846153847], [1.611330928E12, 6439.444444444444], [1.611330949E12, 20553.76470588236], [1.611330923E12, 2046.5], [1.611330924E12, 4881.0], [1.611330945E12, 20950.91666666667], [1.611330946E12, 17864.062499999993], [1.611330931E12, 7818.400000000001], [1.611330932E12, 5748.428571428572], [1.611330933E12, 5049.0], [1.61133093E12, 6387.5], [1.611330934E12, 14128.5], [1.611330935E12, 4978.705882352941], [1.611330936E12, 16257.333333333334], [1.611330942E12, 20449.166666666664], [1.611330922E12, 2547.5], [1.611330943E12, 23732.333333333332], [1.611330944E12, 18989.5], [1.611330939E12, 19007.5], [1.611330941E12, 21838.5]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.611330926E12, 6493.124999999999], [1.611330928E12, 8283.75], [1.611330923E12, 3670.222222222222], [1.611330924E12, 4424.894736842106], [1.611330925E12, 4847.35], [1.611330921E12, 1983.0], [1.611330922E12, 2039.36], [1.611330919E12, 125.71875000000004], [1.61133092E12, 311.0]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611330949E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 64.66666666666669, "minX": 1.611330919E12, "maxY": 23732.333333333332, "series": [{"data": [[1.611330926E12, 2608.942857142857], [1.611330927E12, 1531.3333333333335], [1.611330928E12, 4025.3888888888887], [1.611330923E12, 1484.0], [1.611330924E12, 637.0], [1.611330925E12, 2109.6923076923076], [1.611330931E12, 3011.4285714285716], [1.611330929E12, 3279.3809523809523], [1.61133093E12, 2306.25], [1.611330934E12, 5426.2], [1.611330921E12, 1383.875], [1.611330922E12, 286.25], [1.611330919E12, 64.66666666666669], [1.61133092E12, 767.4444444444445]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.611330926E12, 5740.083333333333], [1.611330947E12, 20937.100000000002], [1.611330927E12, 6279.153846153847], [1.611330928E12, 6439.333333333333], [1.611330949E12, 20553.67647058823], [1.611330923E12, 2046.5], [1.611330924E12, 4881.0], [1.611330945E12, 20950.91666666667], [1.611330946E12, 17863.96875], [1.611330931E12, 7818.400000000001], [1.611330932E12, 5748.428571428572], [1.611330933E12, 5049.0], [1.61133093E12, 6387.5], [1.611330934E12, 14127.75], [1.611330935E12, 4978.705882352941], [1.611330936E12, 16257.333333333334], [1.611330942E12, 20449.166666666664], [1.611330922E12, 2547.5], [1.611330943E12, 23732.333333333332], [1.611330944E12, 18989.5], [1.611330939E12, 19007.5], [1.611330941E12, 21838.5]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.611330926E12, 6493.083333333333], [1.611330928E12, 8283.75], [1.611330923E12, 3670.222222222222], [1.611330924E12, 4424.894736842106], [1.611330925E12, 4847.35], [1.611330921E12, 1983.0], [1.611330922E12, 2039.08], [1.611330919E12, 125.31250000000006], [1.61133092E12, 311.0]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611330949E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.611330919E12, "maxY": 56.29687499999999, "series": [{"data": [[1.611330926E12, 0.0], [1.611330927E12, 0.0], [1.611330928E12, 0.0], [1.611330923E12, 0.0], [1.611330924E12, 0.0], [1.611330925E12, 0.0], [1.611330931E12, 0.0], [1.611330929E12, 0.0], [1.61133093E12, 0.0], [1.611330934E12, 0.0], [1.611330921E12, 0.0], [1.611330922E12, 0.0], [1.611330919E12, 0.0], [1.61133092E12, 0.0]], "isOverall": false, "label": "GET /login", "isController": false}, {"data": [[1.611330926E12, 0.0], [1.611330947E12, 0.0], [1.611330927E12, 0.0], [1.611330928E12, 0.0], [1.611330949E12, 0.0], [1.611330923E12, 0.0], [1.611330924E12, 0.0], [1.611330945E12, 0.0], [1.611330946E12, 0.0], [1.611330931E12, 0.0], [1.611330932E12, 0.0], [1.611330933E12, 0.0], [1.61133093E12, 0.0], [1.611330934E12, 0.0], [1.611330935E12, 0.0], [1.611330936E12, 0.0], [1.611330942E12, 0.0], [1.611330922E12, 0.0], [1.611330943E12, 0.0], [1.611330944E12, 0.0], [1.611330939E12, 0.0], [1.611330941E12, 0.0]], "isOverall": false, "label": "POST /graphql - Login", "isController": false}, {"data": [[1.611330926E12, 32.12499999999999], [1.611330928E12, 31.178571428571423], [1.611330923E12, 30.055555555555557], [1.611330924E12, 32.631578947368425], [1.611330925E12, 31.849999999999994], [1.611330921E12, 37.0], [1.611330922E12, 32.24], [1.611330919E12, 56.29687499999999], [1.61133092E12, 35.0]], "isOverall": false, "label": "GET /", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611330949E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 55.0, "minX": 1.611330919E12, "maxY": 24908.0, "series": [{"data": [[1.611330926E12, 7060.0], [1.611330927E12, 7837.0], [1.611330928E12, 8676.0], [1.611330923E12, 3846.0], [1.611330924E12, 4881.0], [1.611330925E12, 5247.0], [1.611330931E12, 11855.0], [1.611330932E12, 12341.0], [1.611330933E12, 5912.0], [1.611330929E12, 5338.0], [1.61133093E12, 10375.0], [1.611330934E12, 14615.0], [1.611330935E12, 6961.0], [1.611330936E12, 16707.0], [1.611330942E12, 22202.0], [1.611330943E12, 23918.0], [1.611330944E12, 19399.0], [1.611330939E12, 19570.0], [1.611330941E12, 21842.0], [1.611330947E12, 24687.0], [1.611330949E12, 23137.0], [1.611330945E12, 24883.0], [1.611330946E12, 24908.0], [1.611330921E12, 1983.0], [1.611330922E12, 2595.0], [1.611330919E12, 168.0], [1.61133092E12, 928.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.611330926E12, 6940.6], [1.611330927E12, 7828.2], [1.611330928E12, 8464.0], [1.611330923E12, 3838.6], [1.611330924E12, 4681.5], [1.611330925E12, 4938.4], [1.611330931E12, 11849.2], [1.611330932E12, 12341.0], [1.611330933E12, 5912.0], [1.611330929E12, 5335.4], [1.61133093E12, 7154.300000000003], [1.611330934E12, 14615.0], [1.611330935E12, 6961.0], [1.611330936E12, 16707.0], [1.611330942E12, 22202.0], [1.611330943E12, 23918.0], [1.611330944E12, 19399.0], [1.611330939E12, 19570.0], [1.611330941E12, 21842.0], [1.611330947E12, 24502.8], [1.611330949E12, 22706.0], [1.611330945E12, 24837.1], [1.611330946E12, 19560.6], [1.611330921E12, 1983.0], [1.611330922E12, 2585.0], [1.611330919E12, 161.60000000000002], [1.61133092E12, 928.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.611330926E12, 7060.0], [1.611330927E12, 7837.0], [1.611330928E12, 8676.0], [1.611330923E12, 3846.0], [1.611330924E12, 4881.0], [1.611330925E12, 5247.0], [1.611330931E12, 11855.0], [1.611330932E12, 12341.0], [1.611330933E12, 5912.0], [1.611330929E12, 5338.0], [1.61133093E12, 10375.0], [1.611330934E12, 14615.0], [1.611330935E12, 6961.0], [1.611330936E12, 16707.0], [1.611330942E12, 22202.0], [1.611330943E12, 23918.0], [1.611330944E12, 19399.0], [1.611330939E12, 19570.0], [1.611330941E12, 21842.0], [1.611330947E12, 24687.0], [1.611330949E12, 23137.0], [1.611330945E12, 24883.0], [1.611330946E12, 24908.0], [1.611330921E12, 1983.0], [1.611330922E12, 2595.0], [1.611330919E12, 167.87], [1.61133092E12, 928.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.611330926E12, 7030.8], [1.611330927E12, 7833.85], [1.611330928E12, 8669.0], [1.611330923E12, 3845.4], [1.611330924E12, 4841.75], [1.611330925E12, 5047.499999999999], [1.611330931E12, 11854.5], [1.611330932E12, 12341.0], [1.611330933E12, 5912.0], [1.611330929E12, 5337.9], [1.61133093E12, 10375.0], [1.611330934E12, 14615.0], [1.611330935E12, 6961.0], [1.611330936E12, 16707.0], [1.611330942E12, 22202.0], [1.611330943E12, 23918.0], [1.611330944E12, 19399.0], [1.611330939E12, 19570.0], [1.611330941E12, 21842.0], [1.611330947E12, 24687.0], [1.611330949E12, 22819.0], [1.611330945E12, 24883.0], [1.611330946E12, 21594.94999999999], [1.611330921E12, 1983.0], [1.611330922E12, 2589.4], [1.611330919E12, 166.0], [1.61133092E12, 928.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.611330926E12, 531.0], [1.611330927E12, 439.0], [1.611330928E12, 1414.0], [1.611330923E12, 524.0], [1.611330924E12, 85.0], [1.611330925E12, 360.0], [1.611330931E12, 2838.0], [1.611330932E12, 3945.0], [1.611330933E12, 4408.0], [1.611330929E12, 444.0], [1.61133093E12, 1413.0], [1.611330934E12, 5422.0], [1.611330935E12, 1512.0], [1.611330936E12, 15360.0], [1.611330942E12, 17020.0], [1.611330943E12, 23362.0], [1.611330944E12, 18580.0], [1.611330939E12, 18445.0], [1.611330941E12, 21835.0], [1.611330947E12, 18019.0], [1.611330949E12, 15695.0], [1.611330945E12, 18968.0], [1.611330946E12, 14383.0], [1.611330921E12, 1066.0], [1.611330922E12, 200.0], [1.611330919E12, 55.0], [1.61133092E12, 264.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.611330926E12, 4505.0], [1.611330927E12, 2441.0], [1.611330928E12, 8091.0], [1.611330923E12, 3739.0], [1.611330924E12, 4442.0], [1.611330925E12, 4737.0], [1.611330931E12, 4595.0], [1.611330932E12, 4708.0], [1.611330933E12, 4938.0], [1.611330929E12, 4782.0], [1.61133093E12, 3030.5], [1.611330934E12, 5431.0], [1.611330935E12, 5557.0], [1.611330936E12, 16705.0], [1.611330942E12, 20913.0], [1.611330943E12, 23917.0], [1.611330944E12, 18989.5], [1.611330939E12, 19007.5], [1.611330941E12, 21838.5], [1.611330947E12, 20867.5], [1.611330949E12, 21111.0], [1.611330945E12, 19854.5], [1.611330946E12, 18009.5], [1.611330921E12, 1512.0], [1.611330922E12, 2060.0], [1.611330919E12, 86.5], [1.61133092E12, 899.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611330949E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 86.5, "minX": 2.0, "maxY": 21111.0, "series": [{"data": [[33.0, 4737.0], [2.0, 19484.5], [32.0, 18009.5], [35.0, 2060.0], [34.0, 21111.0], [9.0, 3702.5], [10.0, 9473.5], [3.0, 20034.5], [12.0, 19854.5], [55.0, 8091.0], [16.0, 3030.5], [4.0, 4938.0], [71.0, 4505.0], [17.0, 5557.0], [21.0, 3744.0], [22.0, 4595.0], [24.0, 4442.0], [6.0, 20913.0], [112.0, 86.5], [28.0, 2441.0], [7.0, 4708.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[22.0, 1422.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 112.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 86.0, "minX": 2.0, "maxY": 21111.0, "series": [{"data": [[33.0, 4737.0], [2.0, 19484.5], [32.0, 18009.5], [35.0, 2060.0], [34.0, 21111.0], [9.0, 3702.5], [10.0, 9473.5], [3.0, 20034.5], [12.0, 19854.5], [55.0, 8091.0], [16.0, 3030.5], [4.0, 4938.0], [71.0, 4505.0], [17.0, 5557.0], [21.0, 3744.0], [22.0, 4595.0], [24.0, 4442.0], [6.0, 20913.0], [112.0, 86.0], [28.0, 2441.0], [7.0, 4708.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[22.0, 1422.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 112.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.611330919E12, "maxY": 197.0, "series": [{"data": [[1.611330926E12, 59.0], [1.611330927E12, 15.0], [1.611330928E12, 46.0], [1.611330923E12, 19.0], [1.611330924E12, 23.0], [1.611330925E12, 33.0], [1.611330931E12, 7.0], [1.611330929E12, 21.0], [1.61133093E12, 12.0], [1.611330934E12, 5.0], [1.611330921E12, 9.0], [1.611330922E12, 29.0], [1.611330919E12, 197.0], [1.61133092E12, 125.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611330934E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.611330919E12, "maxY": 112.0, "series": [{"data": [[1.611330926E12, 71.0], [1.611330927E12, 28.0], [1.611330928E12, 55.0], [1.611330923E12, 21.0], [1.611330924E12, 24.0], [1.611330925E12, 33.0], [1.611330931E12, 21.0], [1.611330932E12, 7.0], [1.611330933E12, 4.0], [1.611330929E12, 21.0], [1.61133093E12, 16.0], [1.611330934E12, 9.0], [1.611330935E12, 17.0], [1.611330936E12, 3.0], [1.611330942E12, 6.0], [1.611330943E12, 3.0], [1.611330944E12, 2.0], [1.611330939E12, 2.0], [1.611330941E12, 2.0], [1.611330947E12, 10.0], [1.611330949E12, 34.0], [1.611330945E12, 12.0], [1.611330946E12, 32.0], [1.611330921E12, 9.0], [1.611330922E12, 35.0], [1.611330919E12, 112.0], [1.61133092E12, 10.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.611330931E12, 1.0]], "isOverall": false, "label": "502", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.611330949E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.611330919E12, "maxY": 64.0, "series": [{"data": [[1.611330926E12, 24.0], [1.611330928E12, 28.0], [1.611330923E12, 18.0], [1.611330924E12, 19.0], [1.611330925E12, 20.0], [1.611330921E12, 1.0], [1.611330922E12, 25.0], [1.611330919E12, 64.0], [1.61133092E12, 1.0]], "isOverall": false, "label": "GET /-success", "isController": false}, {"data": [[1.611330926E12, 12.0], [1.611330947E12, 10.0], [1.611330927E12, 13.0], [1.611330928E12, 9.0], [1.611330949E12, 34.0], [1.611330923E12, 2.0], [1.611330924E12, 1.0], [1.611330945E12, 12.0], [1.611330946E12, 32.0], [1.611330931E12, 14.0], [1.611330932E12, 7.0], [1.611330933E12, 4.0], [1.61133093E12, 4.0], [1.611330934E12, 4.0], [1.611330935E12, 17.0], [1.611330936E12, 3.0], [1.611330942E12, 6.0], [1.611330922E12, 6.0], [1.611330943E12, 3.0], [1.611330944E12, 2.0], [1.611330939E12, 2.0], [1.611330941E12, 2.0]], "isOverall": false, "label": "POST /graphql - Login-success", "isController": false}, {"data": [[1.611330931E12, 1.0]], "isOverall": false, "label": "POST /graphql - Login-failure", "isController": false}, {"data": [[1.611330926E12, 35.0], [1.611330927E12, 15.0], [1.611330928E12, 18.0], [1.611330923E12, 1.0], [1.611330924E12, 4.0], [1.611330925E12, 13.0], [1.611330931E12, 7.0], [1.611330929E12, 21.0], [1.61133093E12, 12.0], [1.611330934E12, 5.0], [1.611330921E12, 8.0], [1.611330922E12, 4.0], [1.611330919E12, 48.0], [1.61133092E12, 9.0]], "isOverall": false, "label": "GET /login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611330949E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.611330919E12, "maxY": 112.0, "series": [{"data": [[1.611330926E12, 71.0], [1.611330927E12, 28.0], [1.611330928E12, 55.0], [1.611330923E12, 21.0], [1.611330924E12, 24.0], [1.611330925E12, 33.0], [1.611330931E12, 21.0], [1.611330932E12, 7.0], [1.611330933E12, 4.0], [1.611330929E12, 21.0], [1.61133093E12, 16.0], [1.611330934E12, 9.0], [1.611330935E12, 17.0], [1.611330936E12, 3.0], [1.611330942E12, 6.0], [1.611330943E12, 3.0], [1.611330944E12, 2.0], [1.611330939E12, 2.0], [1.611330941E12, 2.0], [1.611330947E12, 10.0], [1.611330949E12, 34.0], [1.611330945E12, 12.0], [1.611330946E12, 32.0], [1.611330921E12, 9.0], [1.611330922E12, 35.0], [1.611330919E12, 112.0], [1.61133092E12, 10.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.611330931E12, 1.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.611330949E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

