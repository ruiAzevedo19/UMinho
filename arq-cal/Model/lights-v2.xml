<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
chan switch, activate, trigger;

// delay time 
int decision_delay;

// true if the lights are changing
bool is_changing = false;

// true if a light is green
bool M_is_green = true;
bool m_is_green = false;

// 0 |-&gt; None ; 1 |-&gt; Low ; 2 |-&gt; High
int major_state = 0;
int minor_state = 0;
</declaration>
	<template>
		<name>Sensor</name>
		<parameter>bool &amp;light , int &amp;traffic</parameter>
		<declaration>clock c;

int n_cars = 0;

void enter_car(){
    n_cars++;
}

void leave_car(){
    if( n_cars &gt; 0 )
        n_cars--;
}</declaration>
		<location id="id0" x="-382" y="-323">
			<name x="-399" y="-357">None</name>
		</location>
		<location id="id1" x="-373" y="-153">
			<name x="-425" y="-161">Low</name>
		</location>
		<location id="id2" x="-374" y="17">
			<name x="-391" y="34">High</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-314" y="-59">light == true &amp;&amp;
!is_changing</label>
			<label kind="assignment" x="-314" y="-76">traffic = 1</label>
			<nail x="-323" y="-59"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-306" y="-238">light == true &amp;&amp;
!is_changing</label>
			<label kind="assignment" x="-306" y="-263">traffic = 0</label>
			<nail x="-323" y="-246"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-527" y="-51">!is_changing</label>
			<label kind="assignment" x="-527" y="-68">traffic = 2</label>
			<nail x="-425" y="-59"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-535" y="-238">!is_changing</label>
			<label kind="assignment" x="-518" y="-255">traffic = 1</label>
			<nail x="-433" y="-246"/>
		</transition>
	</template>
	<template>
		<name>Controller</name>
		<declaration>clock c;

int waiting_time(){
    return 0;
}

bool decision(){
    return M_is_green ? minor_state &gt; major_state : major_state &gt;= minor_state;
}</declaration>
		<location id="id3" x="-1003" y="-535">
			<name x="-1013" y="-569">idle</name>
			<label kind="invariant" x="-1020" y="-586">c &lt;= 30</label>
		</location>
		<location id="id4" x="-1003" y="-391">
			<name x="-1046" y="-374">decision_state</name>
			<committed/>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-1190" y="-476">decision()</label>
			<label kind="synchronisation" x="-1190" y="-459">activate!</label>
			<label kind="assignment" x="-1190" y="-442">c := 0</label>
			<nail x="-1122" y="-459"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-875" y="-467">!decision()</label>
			<nail x="-884" y="-459"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-994" y="-476">c == 30</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">MajorRoad</name>
		<declaration>// Place local declarations here.
clock c;
</declaration>
		<location id="id5" x="-382" y="-161" color="#00ff00">
			<name x="-442" y="-170">Green</name>
		</location>
		<location id="id6" x="-382" y="-17">
			<name x="-425" y="0">GreenYellow</name>
			<label kind="invariant" x="-408" y="17">c &lt;= 1</label>
		</location>
		<location id="id7" x="-229" y="-17" color="#ffff00">
			<name x="-254" y="0">Yellow</name>
			<label kind="invariant" x="-255" y="17">c &lt;= 5</label>
		</location>
		<location id="id8" x="-93" y="-17">
			<name x="-127" y="0">YellowRed</name>
			<label kind="invariant" x="-119" y="17">c &lt;= 1</label>
		</location>
		<location id="id9" x="-93" y="-161" color="#ff0000">
			<name x="-68" y="-170">Red</name>
		</location>
		<location id="id10" x="-246" y="-272">
			<name x="-280" y="-306">RedGreen</name>
			<label kind="invariant" x="-272" y="-323">c &lt;= 1</label>
		</location>
		<init ref="id5"/>
		<transition>
			<source ref="id10"/>
			<target ref="id5"/>
			<label kind="guard" x="-433" y="-238">c == 1</label>
			<label kind="synchronisation" x="-433" y="-289">switch?</label>
			<label kind="assignment" x="-433" y="-272">c := 0 , 
M_is_green := true</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-161" y="-246">switch?</label>
			<label kind="assignment" x="-161" y="-229">c := 0</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="guard" x="-76" y="-93">c == 1</label>
			<label kind="synchronisation" x="-76" y="-110">switch!</label>
			<label kind="assignment" x="-76" y="-76">M_is_green := false,
is_changing := false</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="guard" x="-187" y="-59">c == 5</label>
			<label kind="synchronisation" x="-187" y="-17">switch!</label>
			<label kind="assignment" x="-187" y="-42">c := 0</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="guard" x="-340" y="-59">c == 1</label>
			<label kind="assignment" x="-340" y="-42">c := 0</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-518" y="-119">activate?</label>
			<label kind="assignment" x="-518" y="-102">c := 0,
is_changing := true</label>
		</transition>
	</template>
	<template>
		<name>MinorRoad</name>
		<declaration>clock c;</declaration>
		<location id="id11" x="-119" y="-187">
			<name x="-153" y="-221">RedGreen</name>
		</location>
		<location id="id12" x="-263" y="-68" color="#00ff00">
			<name x="-323" y="-76">Green</name>
		</location>
		<location id="id13" x="25" y="-85" color="#ff0000">
			<name x="42" y="-93">Red</name>
		</location>
		<location id="id14" x="26" y="76">
			<name x="-8" y="93">YellowRed</name>
			<label kind="invariant" x="43" y="59">c &lt;= 1</label>
		</location>
		<location id="id15" x="-110" y="76" color="#ffff00">
			<name x="-135" y="93">Yellow</name>
			<label kind="invariant" x="-136" y="110">c &lt;= 5</label>
		</location>
		<location id="id16" x="-263" y="76">
			<name x="-306" y="93">GreenYellow</name>
			<label kind="invariant" x="-323" y="59">c &lt;= 1</label>
		</location>
		<init ref="id13"/>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="guard" x="34" y="-17">c == 1</label>
			<label kind="synchronisation" x="34" y="-34">switch!</label>
			<label kind="assignment" x="34" y="0">is_changing := false</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="guard" x="-306" y="-178">c == 1</label>
			<label kind="synchronisation" x="-306" y="-195">switch?</label>
			<label kind="assignment" x="-306" y="-161">c := 0,
m_is_green = 0</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="-51" y="-187">switch?</label>
			<label kind="assignment" x="-51" y="-170">c := 0</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id14"/>
			<label kind="guard" x="-76" y="34">c == 5</label>
			<label kind="synchronisation" x="-76" y="17">switch!</label>
			<label kind="assignment" x="-76" y="51">c := 0</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="guard" x="-212" y="34">c == 1</label>
			<label kind="assignment" x="-204" y="51">c := 0</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-408" y="-42">activate?</label>
			<label kind="assignment" x="-408" y="-25">c := 0,
is_changing := true</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
major_sensor = Sensor(M_is_green, major_state);
minor_sensor = Sensor(m_is_green, minor_state);

// List one or more processes to be composed into a system.
system major_sensor, minor_sensor, Controller, MajorRoad, MinorRoad;
    </system>
	<queries>
		<query>
			<formula>E&lt;&gt; major.Red</formula>
			<comment>-- Reachability --
The manor-road light can go read</comment>
		</query>
		<query>
			<formula>E&lt;&gt; minor.Green</formula>
			<comment>-- Reachability --
The manor-road light can go green</comment>
		</query>
		<query>
			<formula>A[] not deadlock</formula>
			<comment>-- Safety --
The system never is deadlock-free</comment>
		</query>
		<query>
			<formula>A[] not ( major.Green &amp;&amp; minor.Green )</formula>
			<comment>-- Safety --
The major and minor road lights cannot be green at the same time</comment>
		</query>
		<query>
			<formula>A[] (minor.Green imply minor.c &lt;= 30)</formula>
			<comment>-- Safety --
Green light in the minor road never stays on more than 30 seconds</comment>
		</query>
		<query>
			<formula>sensor.enabled --&gt; minor.Green</formula>
			<comment>-- Liveness --
If there are cars waiting they will eventually have green light</comment>
		</query>
		<query>
			<formula></formula>
			<comment>-- Reachability --
The minor-road light can go green
</comment>
		</query>
	</queries>
</nta>
